{"version":3,"file":"connect.bundle.js","sources":["../../src/connect.ts"],"sourcesContent":["// src/connect.ts\r\nimport { Buffer } from 'buffer';\r\nimport process from 'process';\r\n(globalThis as any).Buffer  ||= Buffer;\r\n(globalThis as any).process ||= process;\r\n\r\nasync function sdk() {\r\n  // thanks to the alias, this resolves to dist/index.web.mjs\r\n  return await import('nexa-wallet-sdk');}\r\n\r\nconst KEY = 'kk_wallet_v1';\r\nconst IV  = 'kk_wallet_iv_v1';\r\n\r\nasync function ensureCsrf(): Promise<string> {\r\n  if ((window as any).csrfToken) return (window as any).csrfToken;\r\n  const r = await fetch('/api/csrf', { credentials: 'include' }); // sets _csrf cookie + returns token\r\n  if (!r.ok) throw new Error(`CSRF fetch failed: ${r.status}`);\r\n  const { csrfToken } = await r.json();\r\n  (window as any).csrfToken = csrfToken;\r\n  return csrfToken;\r\n}\r\n\r\nasync function postJSON(url: string, body: any) {\r\n  const csrf = await ensureCsrf();\r\n  const r = await fetch(url, {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: { 'Content-Type': 'application/json', 'CSRF-Token': csrf },\r\n    body: JSON.stringify(body),\r\n  });\r\n  let j: any = null;\r\n  try { j = await r.json(); } catch {}\r\n  if (!r.ok || (j && j.ok === false)) {\r\n    const msg = j?.error || `HTTP ${r.status}`;\r\n    throw new Error(msg);\r\n  }\r\n  return j;\r\n}\r\n\r\nfunction normalizeSeed(raw: string): string {\r\n  // lowercase, strip non-letters, collapse whitespace\r\n  return (raw || '')\r\n    .toLowerCase()\r\n    .replace(/[^a-z\\s]/g, ' ')\r\n    .split(/\\s+/)\r\n    .filter(Boolean)\r\n    .join(' ');\r\n}\r\n\r\nfunction require12Words(seed: string): string {\r\n  const words = seed.split(' ');\r\n  if (words.length !== 12) {\r\n    throw new Error(`Seed must be exactly 12 words (got ${words.length}).`);\r\n  }\r\n  return seed;\r\n}\r\n\r\nasync function aesKey(pass: string) {\r\n  const raw = new TextEncoder().encode(pass);\r\n  const h   = await crypto.subtle.digest('SHA-256', raw);\r\n  return crypto.subtle.importKey('raw', h, 'AES-GCM', false, ['encrypt','decrypt']);\r\n}\r\nasync function enc(pass: string, data: string) {\r\n  const key = await aesKey(pass);\r\n  const iv  = crypto.getRandomValues(new Uint8Array(12));\r\n  const ct  = await crypto.subtle.encrypt({ name:'AES-GCM', iv }, key, new TextEncoder().encode(data));\r\n  localStorage.setItem(IV,  btoa(String.fromCharCode(...iv)));\r\n  localStorage.setItem(KEY, btoa(String.fromCharCode(...new Uint8Array(ct))));\r\n}\r\nasync function dec(pass: string) {\r\n  const key = await aesKey(pass);\r\n  const ivb = atob(localStorage.getItem(IV) || '');\r\n  const iv  = new Uint8Array([...ivb].map(c=>c.charCodeAt(0)));\r\n  const ctb = atob(localStorage.getItem(KEY) || '');\r\n  const ct  = new Uint8Array([...ctb].map(c=>c.charCodeAt(0)));\r\n  const pt  = await crypto.subtle.decrypt({ name:'AES-GCM', iv }, key, ct);\r\n  return new TextDecoder().decode(pt);\r\n}\r\n\r\nasync function init() {\r\n  const netSel     = document.getElementById('net')        as HTMLSelectElement;\r\n  const passEl     = document.getElementById('pass')       as HTMLInputElement;\r\n  const btnCreate  = document.getElementById('btnCreate')  as HTMLButtonElement;\r\n  const btnImport  = document.getElementById('btnImport')  as HTMLButtonElement;\r\n  const importArea = document.getElementById('importArea') as HTMLElement;\r\n  const seedIn     = document.getElementById('seedIn')     as HTMLTextAreaElement;\r\n  const btnDoImport= document.getElementById('btnDoImport')as HTMLButtonElement;\r\n  const linked     = document.getElementById('linked')     as HTMLElement;\r\n  const addrText   = document.getElementById('addr')       as HTMLElement;\r\n  const btnLink    = document.getElementById('btnLink')    as HTMLButtonElement;\r\n\r\n  let wallet: any = null;\r\n  let account: any = null;\r\n  let address: string | null = null;\r\n\r\nasync function connectNetwork(net: 'mainnet') {\r\n  const { rostrumProvider } = await sdk();\r\n  await rostrumProvider.connect(net);\r\n}\r\n\r\nasync function bootFromSeed(seed: string, net: 'mainnet'|'testnet') {\r\n  const { Wallet } = await sdk();\r\n  await connectNetwork('mainnet');\r\n  const wallet = new Wallet(seed, net);\r\n  await wallet.initialize();\r\n  const account = wallet.accountStore.getAccount('2.0');\r\n  const k = account.getPrimaryAddressKey();\r\n  return { wallet, account, address: k.address };\r\n}\r\n\r\n  btnCreate?.addEventListener('click', async () => {\r\n    try {\r\n      const pass = passEl.value || '';\r\n      const net  = (netSel.value === 'mainnet' );\r\n      const { Wallet } = await sdk();\r\n      const w = Wallet.create();\r\n      const seed = w.export().phrase;\r\n      await enc(pass, JSON.stringify({ seed, net }));\r\n      const r = await bootFromSeed(seed, 'mainnet');\r\n      address = r.address;\r\n      addrText.textContent = `Linked address (${net}): ${address}`;\r\n      linked.hidden = false;\r\n      alert('New wallet created. Write down your seed!');\r\n    } catch (e:any) {\r\n      alert(e?.message || 'Failed to create wallet.');\r\n    }\r\n  });\r\n\r\n  btnImport?.addEventListener('click', () => { importArea.hidden = !importArea.hidden; });\r\n\r\n  btnDoImport?.addEventListener('click', async () => {\r\n    try {\r\n      const pass = passEl.value || '';\r\n      const net  = (netSel.value === 'mainnet');\r\n      const seed = require12Words(normalizeSeed(seedIn.value));\r\n      await enc(pass, JSON.stringify({ seed, net }));\r\n      const r = await bootFromSeed(seed, 'mainnet');\r\n      address = r.address;\r\n      addrText.textContent = `Linked address (${net}): ${address}`;\r\n      linked.hidden = false;\r\n      alert('Imported wallet. Seed stored encrypted locally.');\r\n    } catch (e:any) {\r\n      alert(e?.message || 'Failed to import seed.');\r\n    }\r\n  });\r\n\r\nbtnLink?.addEventListener('click', async () => {\r\n  try {\r\n    if (!address) return alert('No address yet.');\r\n    const net = (netSel.value === 'mainnet' ? 'mainnet' : 'testnet');\r\n    const j = await postJSON('/api/wallet/link', { address, network: net });\r\n    alert('Wallet linked!');\r\n    location.href = '/play.html';\r\n  } catch (e:any) {\r\n    alert('Link failed: ' + (e?.message || 'unknown'));\r\n  }\r\n});\r\n\r\n// and on load, prime CSRF (optional but nice)\r\naddEventListener('DOMContentLoaded', () => { ensureCsrf().catch(()=>{}); });\r\n  // auto-load from storage on pass change\r\n  passEl?.addEventListener('change', async () => {\r\n    try {\r\n      if (!localStorage.getItem(KEY)) return;\r\n      const { seed, net } = JSON.parse(await dec(passEl.value || ''));\r\n      netSel.value = net;\r\n      const r = await bootFromSeed(seed, net as any);\r\n      address = r.address;\r\n      addrText.textContent = `Linked address (${net}): ${address}`;\r\n      linked.hidden = false;\r\n    } catch {}\r\n  });\r\n}\r\n\r\naddEventListener('DOMContentLoaded', init);"],"names":["Buffer","process","wallet","account"],"mappings":"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"}