{"version":3,"file":"index.web-OeWYP58i.js","sources":["../../../node_modules/safe-buffer/index.js","../../../node_modules/randombytes/browser.js","../../../node_modules/inherits/inherits_browser.js","../../../node_modules/events/events.js","../../../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../../node_modules/has-symbols/shams.js","../../../node_modules/has-tostringtag/shams.js","../../../node_modules/es-object-atoms/index.js","../../../node_modules/es-errors/index.js","../../../node_modules/es-errors/eval.js","../../../node_modules/es-errors/range.js","../../../node_modules/es-errors/ref.js","../../../node_modules/es-errors/syntax.js","../../../node_modules/es-errors/type.js","../../../node_modules/es-errors/uri.js","../../../node_modules/math-intrinsics/abs.js","../../../node_modules/math-intrinsics/floor.js","../../../node_modules/math-intrinsics/max.js","../../../node_modules/math-intrinsics/min.js","../../../node_modules/math-intrinsics/pow.js","../../../node_modules/math-intrinsics/round.js","../../../node_modules/math-intrinsics/isNaN.js","../../../node_modules/math-intrinsics/sign.js","../../../node_modules/gopd/gOPD.js","../../../node_modules/gopd/index.js","../../../node_modules/es-define-property/index.js","../../../node_modules/has-symbols/index.js","../../../node_modules/get-proto/Reflect.getPrototypeOf.js","../../../node_modules/get-proto/Object.getPrototypeOf.js","../../../node_modules/function-bind/implementation.js","../../../node_modules/function-bind/index.js","../../../node_modules/call-bind-apply-helpers/functionCall.js","../../../node_modules/call-bind-apply-helpers/functionApply.js","../../../node_modules/call-bind-apply-helpers/reflectApply.js","../../../node_modules/call-bind-apply-helpers/actualApply.js","../../../node_modules/call-bind-apply-helpers/index.js","../../../node_modules/dunder-proto/get.js","../../../node_modules/get-proto/index.js","../../../node_modules/hasown/index.js","../../../node_modules/get-intrinsic/index.js","../../../node_modules/call-bound/index.js","../../../node_modules/is-arguments/index.js","../../../node_modules/is-regex/index.js","../../../node_modules/safe-regex-test/index.js","../../../node_modules/is-generator-function/index.js","../../../node_modules/is-callable/index.js","../../../node_modules/for-each/index.js","../../../node_modules/possible-typed-array-names/index.js","../../../node_modules/available-typed-arrays/index.js","../../../node_modules/define-data-property/index.js","../../../node_modules/has-property-descriptors/index.js","../../../node_modules/set-function-length/index.js","../../../node_modules/call-bind-apply-helpers/applyBind.js","../../../node_modules/call-bind/index.js","../../../node_modules/which-typed-array/index.js","../../../node_modules/is-typed-array/index.js","../../../node_modules/util/support/types.js","../../../node_modules/util/support/isBufferBrowser.js","../../../node_modules/util/util.js","../../../node_modules/readable-stream/lib/internal/streams/buffer_list.js","../../../node_modules/readable-stream/lib/internal/streams/destroy.js","../../../node_modules/readable-stream/errors-browser.js","../../../node_modules/readable-stream/lib/internal/streams/state.js","../../../node_modules/util-deprecate/browser.js","../../../node_modules/readable-stream/lib/_stream_writable.js","../../../node_modules/readable-stream/lib/_stream_duplex.js","../../../node_modules/string_decoder/lib/string_decoder.js","../../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../../../node_modules/readable-stream/lib/internal/streams/async_iterator.js","../../../node_modules/readable-stream/lib/internal/streams/from-browser.js","../../../node_modules/readable-stream/lib/_stream_readable.js","../../../node_modules/readable-stream/lib/_stream_transform.js","../../../node_modules/readable-stream/lib/_stream_passthrough.js","../../../node_modules/readable-stream/lib/internal/streams/pipeline.js","../../../node_modules/stream-browserify/index.js","../../../node_modules/hash-base/index.js","../../../node_modules/md5.js/index.js","../../../node_modules/ripemd160/index.js","../../../node_modules/isarray/index.js","../../../node_modules/typed-array-buffer/index.js","../../../node_modules/to-buffer/index.js","../../../node_modules/sha.js/hash.js","../../../node_modules/sha.js/sha.js","../../../node_modules/sha.js/sha1.js","../../../node_modules/sha.js/sha256.js","../../../node_modules/sha.js/sha224.js","../../../node_modules/sha.js/sha512.js","../../../node_modules/sha.js/sha384.js","../../../node_modules/sha.js/index.js","../../../node_modules/cipher-base/index.js","../../../node_modules/create-hash/browser.js","../../../node_modules/create-hmac/legacy.js","../../../node_modules/create-hash/md5.js","../../../node_modules/create-hmac/browser.js","../../../node_modules/browserify-sign/algos.js","../../../node_modules/pbkdf2/lib/precondition.js","../../../node_modules/pbkdf2/lib/default-encoding.js","../../../node_modules/pbkdf2/node_modules/create-hash/make-hash.js","../../../node_modules/pbkdf2/node_modules/create-hash/md5.js","../../../node_modules/pbkdf2/node_modules/hash-base/index.js","../../../node_modules/pbkdf2/node_modules/ripemd160/index.js","../../../node_modules/pbkdf2/lib/to-buffer.js","../../../node_modules/pbkdf2/lib/sync-browser.js","../../../node_modules/pbkdf2/lib/async.js","../../../node_modules/pbkdf2/browser.js","../../../node_modules/des.js/lib/des/utils.js","../../../node_modules/minimalistic-assert/index.js","../../../node_modules/des.js/lib/des/cipher.js","../../../node_modules/des.js/lib/des/des.js","../../../node_modules/des.js/lib/des/cbc.js","../../../node_modules/des.js/lib/des/ede.js","../../../node_modules/des.js/lib/des.js","../../../node_modules/browserify-des/index.js","../../../node_modules/browserify-aes/modes/ecb.js","../../../node_modules/buffer-xor/index.js","../../../node_modules/browserify-aes/modes/cbc.js","../../../node_modules/browserify-aes/modes/cfb.js","../../../node_modules/browserify-aes/modes/cfb8.js","../../../node_modules/browserify-aes/modes/cfb1.js","../../../node_modules/browserify-aes/modes/ofb.js","../../../node_modules/browserify-aes/incr32.js","../../../node_modules/browserify-aes/modes/ctr.js","../../../node_modules/browserify-aes/modes/index.js","../../../node_modules/browserify-aes/aes.js","../../../node_modules/browserify-aes/ghash.js","../../../node_modules/browserify-aes/authCipher.js","../../../node_modules/browserify-aes/streamCipher.js","../../../node_modules/evp_bytestokey/index.js","../../../node_modules/browserify-aes/encrypter.js","../../../node_modules/browserify-aes/decrypter.js","../../../node_modules/browserify-aes/browser.js","../../../node_modules/browserify-des/modes.js","../../../node_modules/browserify-cipher/browser.js","../../../__vite-browser-external","../../../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","../../../node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","../../../node_modules/brorand/index.js","../../../node_modules/miller-rabin/lib/mr.js","../../../node_modules/diffie-hellman/lib/generatePrime.js","../../../node_modules/diffie-hellman/lib/dh.js","../../../node_modules/diffie-hellman/browser.js","../../../node_modules/process-nextick-args/index.js","../../../node_modules/browserify-sign/node_modules/isarray/index.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../../../node_modules/browserify-sign/node_modules/readable-stream/node_modules/safe-buffer/index.js","../../../node_modules/core-util-is/lib/util.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/BufferList.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","../../../node_modules/browserify-sign/node_modules/string_decoder/node_modules/safe-buffer/index.js","../../../node_modules/browserify-sign/node_modules/string_decoder/lib/string_decoder.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js","../../../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js","../../../node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js","../../../node_modules/bn.js/lib/bn.js","../../../node_modules/browserify-rsa/index.js","../../../node_modules/elliptic/node_modules/bn.js/lib/bn.js","../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../node_modules/elliptic/lib/elliptic/utils.js","../../../node_modules/elliptic/lib/elliptic/curve/base.js","../../../node_modules/elliptic/lib/elliptic/curve/short.js","../../../node_modules/elliptic/lib/elliptic/curve/mont.js","../../../node_modules/elliptic/lib/elliptic/curve/edwards.js","../../../node_modules/elliptic/lib/elliptic/curve/index.js","../../../node_modules/hash.js/lib/hash/utils.js","../../../node_modules/hash.js/lib/hash/common.js","../../../node_modules/hash.js/lib/hash/sha/common.js","../../../node_modules/hash.js/lib/hash/sha/1.js","../../../node_modules/hash.js/lib/hash/sha/256.js","../../../node_modules/hash.js/lib/hash/sha/224.js","../../../node_modules/hash.js/lib/hash/sha/512.js","../../../node_modules/hash.js/lib/hash/sha/384.js","../../../node_modules/hash.js/lib/hash/sha.js","../../../node_modules/hash.js/lib/hash/ripemd.js","../../../node_modules/hash.js/lib/hash/hmac.js","../../../node_modules/hash.js/lib/hash.js","../../../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../../../node_modules/elliptic/lib/elliptic/curves.js","../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../node_modules/elliptic/lib/elliptic/ec/key.js","../../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../../node_modules/elliptic/lib/elliptic/ec/index.js","../../../node_modules/elliptic/lib/elliptic/eddsa/key.js","../../../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../../../node_modules/elliptic/lib/elliptic/eddsa/index.js","../../../node_modules/elliptic/lib/elliptic.js","../../../node_modules/asn1.js/node_modules/bn.js/lib/bn.js","../../../node_modules/asn1.js/lib/asn1/api.js","../../../node_modules/asn1.js/lib/asn1/base/reporter.js","../../../node_modules/asn1.js/lib/asn1/base/buffer.js","../../../node_modules/asn1.js/lib/asn1/base/node.js","../../../node_modules/asn1.js/lib/asn1/base/index.js","../../../node_modules/asn1.js/lib/asn1/constants/der.js","../../../node_modules/asn1.js/lib/asn1/constants/index.js","../../../node_modules/asn1.js/lib/asn1/decoders/der.js","../../../node_modules/asn1.js/lib/asn1/decoders/pem.js","../../../node_modules/asn1.js/lib/asn1/decoders/index.js","../../../node_modules/asn1.js/lib/asn1/encoders/der.js","../../../node_modules/asn1.js/lib/asn1/encoders/pem.js","../../../node_modules/asn1.js/lib/asn1/encoders/index.js","../../../node_modules/asn1.js/lib/asn1.js","../../../node_modules/parse-asn1/certificate.js","../../../node_modules/parse-asn1/asn1.js","../../../node_modules/parse-asn1/fixProc.js","../../../node_modules/parse-asn1/index.js","../../../node_modules/browserify-sign/browser/sign.js","../../../node_modules/browserify-sign/browser/verify.js","../../../node_modules/browserify-sign/browser/index.js","../../../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","../../../node_modules/create-ecdh/browser.js","../../../node_modules/public-encrypt/mgf.js","../../../node_modules/public-encrypt/xor.js","../../../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","../../../node_modules/public-encrypt/withPublic.js","../../../node_modules/public-encrypt/publicEncrypt.js","../../../node_modules/public-encrypt/privateDecrypt.js","../../../node_modules/public-encrypt/browser.js","../../../node_modules/randomfill/browser.js","../../../node_modules/crypto-browserify/index.js","../../../src/shims/crypto.ts","../../../node_modules/lodash-es/_freeGlobal.js","../../../node_modules/lodash-es/_root.js","../../../node_modules/lodash-es/_Symbol.js","../../../node_modules/lodash-es/_getRawTag.js","../../../node_modules/lodash-es/_objectToString.js","../../../node_modules/lodash-es/_baseGetTag.js","../../../node_modules/lodash-es/isObjectLike.js","../../../node_modules/lodash-es/isSymbol.js","../../../node_modules/lodash-es/_arrayMap.js","../../../node_modules/lodash-es/isArray.js","../../../node_modules/lodash-es/_baseToString.js","../../../node_modules/lodash-es/_trimmedEndIndex.js","../../../node_modules/lodash-es/_baseTrim.js","../../../node_modules/lodash-es/isObject.js","../../../node_modules/lodash-es/toNumber.js","../../../node_modules/lodash-es/toFinite.js","../../../node_modules/lodash-es/toInteger.js","../../../node_modules/lodash-es/isFunction.js","../../../node_modules/lodash-es/_coreJsData.js","../../../node_modules/lodash-es/_isMasked.js","../../../node_modules/lodash-es/_toSource.js","../../../node_modules/lodash-es/_baseIsNative.js","../../../node_modules/lodash-es/_getValue.js","../../../node_modules/lodash-es/_getNative.js","../../../node_modules/lodash-es/_WeakMap.js","../../../node_modules/lodash-es/isLength.js","../../../node_modules/lodash-es/isArrayLike.js","../../../node_modules/lodash-es/_isPrototype.js","../../../node_modules/lodash-es/_baseIsArguments.js","../../../node_modules/lodash-es/isArguments.js","../../../node_modules/lodash-es/stubFalse.js","../../../node_modules/lodash-es/isBuffer.js","../../../node_modules/lodash-es/_baseIsTypedArray.js","../../../node_modules/lodash-es/_baseUnary.js","../../../node_modules/lodash-es/_nodeUtil.js","../../../node_modules/lodash-es/isTypedArray.js","../../../node_modules/lodash-es/_overArg.js","../../../node_modules/lodash-es/_nativeKeys.js","../../../node_modules/lodash-es/_baseKeys.js","../../../node_modules/lodash-es/_Map.js","../../../node_modules/lodash-es/toString.js","../../../node_modules/lodash-es/_DataView.js","../../../node_modules/lodash-es/_Promise.js","../../../node_modules/lodash-es/_Set.js","../../../node_modules/lodash-es/_getTag.js","../../../node_modules/lodash-es/_baseInRange.js","../../../node_modules/lodash-es/inRange.js","../../../node_modules/lodash-es/isString.js","../../../node_modules/lodash-es/_baseIsDate.js","../../../node_modules/lodash-es/isDate.js","../../../node_modules/lodash-es/isEmpty.js","../../../node_modules/lodash-es/isInteger.js","../../../node_modules/lodash-es/isNumber.js","../../../node_modules/lodash-es/isNil.js","../../../node_modules/lodash-es/isNull.js","../../../node_modules/lodash-es/isUndefined.js","../../../node_modules/lodash-es/parseInt.js","../../../node_modules/js-big-decimal/dist/esm/big-decimal.js","../../../node_modules/base-x/src/esm/index.js","../../../node_modules/bs58/src/esm/index.js","../../../node_modules/libnexa-ts/dist/index.web.mjs","../../../node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/@noble/hashes/esm/utils.js","../../../node_modules/@noble/hashes/esm/_md.js","../../../node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/@noble/hashes/esm/sha2.js","../../../node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/@noble/hashes/esm/sha512.js","../../../node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/@noble/hashes/esm/pbkdf2.js","../../../node_modules/bip39/src/_wordlists.js","../../../node_modules/bip39/src/index.js","../../../node_modules/ms/index.js","../../../node_modules/debug/src/common.js","../../../node_modules/debug/src/browser.js","../../../node_modules/isomorphic-ws/browser.js","../../../node_modules/lossless-json/lib/esm/utils.js","../../../node_modules/lossless-json/lib/esm/LosslessNumber.js","../../../node_modules/lossless-json/lib/esm/numberParsers.js","../../../node_modules/lossless-json/lib/esm/revive.js","../../../node_modules/lossless-json/lib/esm/parse.js","../../../node_modules/@vgrunner/electrum-cash/dist/index.mjs.js","../../../node_modules/wallet-comms-sdk/node_modules/isomorphic-ws/browser.js","../../../node_modules/wallet-comms-sdk/dist/index.mjs","../../../node_modules/nexa-wallet-sdk/dist/index.web.mjs"],"sourcesContent":["/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n","'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n","'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n","'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n","'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n","'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n","'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n","'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n","'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n","'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n","'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n","'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n","'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n","'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n","'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n","'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bound');\n\nvar $toString = callBound('Object.prototype.toString');\n\n/** @type {import('.')} */\nvar isStandardArguments = function isArguments(value) {\n\tif (\n\t\thasToStringTag\n\t\t&& value\n\t\t&& typeof value === 'object'\n\t\t&& Symbol.toStringTag in value\n\t) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\n/** @type {import('.')} */\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null\n\t\t&& typeof value === 'object'\n\t\t&& 'length' in value\n\t\t&& typeof value.length === 'number'\n\t\t&& value.length >= 0\n\t\t&& $toString(value) !== '[object Array]'\n\t\t&& 'callee' in value\n\t\t&& $toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\n// @ts-expect-error TODO make this not error\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\n/** @type {import('.')} */\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar callBound = require('call-bound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar hasOwn = require('hasown');\nvar gOPD = require('gopd');\n\n/** @type {import('.')} */\nvar fn;\n\nif (hasToStringTag) {\n\t/** @type {(receiver: ThisParameterType<typeof RegExp.prototype.exec>, ...args: Parameters<typeof RegExp.prototype.exec>) => ReturnType<typeof RegExp.prototype.exec>} */\n\tvar $exec = callBound('RegExp.prototype.exec');\n\t/** @type {object} */\n\tvar isRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\t/** @type {{ toString(): never, valueOf(): never, [Symbol.toPrimitive]?(): never }} */\n\tvar badStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n\n\t/** @type {import('.')} */\n\t// @ts-expect-error TS can't figure out that the $exec call always throws\n\t// eslint-disable-next-line consistent-return\n\tfn = function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {NonNullable<typeof gOPD>} */ (gOPD)(/** @type {{ lastIndex?: unknown }} */ (value), 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && hasOwn(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t$exec(value, /** @type {string} */ (/** @type {unknown} */ (badStringifier)));\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t};\n} else {\n\t/** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */\n\tvar $toString = callBound('Object.prototype.toString');\n\t/** @const @type {'[object RegExp]'} */\n\tvar regexClass = '[object RegExp]';\n\n\t/** @type {import('.')} */\n\tfn = function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n}\n\nmodule.exports = fn;\n","'use strict';\n\nvar callBound = require('call-bound');\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = require('es-errors/type');\n\n/** @type {import('.')} */\nmodule.exports = function regexTester(regex) {\n\tif (!isRegex(regex)) {\n\t\tthrow new $TypeError('`regex` must be a RegExp');\n\t}\n\treturn function test(s) {\n\t\treturn $exec(regex, s) !== null;\n\t};\n};\n","'use strict';\n\nvar callBound = require('call-bound');\nvar safeRegexTest = require('safe-regex-test');\nvar isFnRegex = safeRegexTest(/^\\s*(?:function)?\\*/);\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = require('get-proto');\n\nvar toStr = callBound('Object.prototype.toString');\nvar fnToStr = callBound('Function.prototype.toString');\n\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\n/** @type {undefined | false | null | GeneratorFunctionConstructor} */\nvar GeneratorFunction;\n\n/** @type {import('.')} */\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex(fnToStr(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t? /** @type {GeneratorFunctionConstructor} */ (getProto(generatorFunc))\n\t\t\t: false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/** @type {<This, A extends readonly unknown[]>(arr: A, iterator: (this: This | void, value: A[number], index: number, arr: A) => void, receiver: This | undefined) => void} */\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\n/** @type {<This, S extends string>(string: S, iterator: (this: This | void, value: S[number], index: number, string: S) => void, receiver: This | undefined) => void} */\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\n/** @type {<This, O>(obj: O, iterator: (this: This | void, value: O[keyof O], index: keyof O, obj: O) => void, receiver: This | undefined) => void} */\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\n/** @type {(x: unknown) => x is readonly unknown[]} */\nfunction isArray(x) {\n    return toStr.call(x) === '[object Array]';\n}\n\n/** @type {import('.')._internal} */\nmodule.exports = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (isArray(list)) {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float16Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n","'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar $apply = require('./functionApply');\nvar actualApply = require('./actualApply');\n\n/** @type {import('./applyBind')} */\nmodule.exports = function applyBind() {\n\treturn actualApply(bind, $apply, arguments);\n};\n","'use strict';\n\nvar setFunctionLength = require('set-function-length');\n\nvar $defineProperty = require('es-define-property');\n\nvar callBindBasic = require('call-bind-apply-helpers');\nvar applyBind = require('call-bind-apply-helpers/applyBind');\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = callBindBasic(arguments);\n\tvar adjustedLength = originalFunction.length - (arguments.length - 1);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + (adjustedLength > 0 ? adjustedLength : 0),\n\t\ttrue\n\t);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\nvar gOPD = require('gopd');\nvar getProto = require('get-proto');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {import('./types').Getter} Getter */\n/** @type {import('./types').Cache} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getProto) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr && getProto) {\n\t\t\tvar proto = getProto(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor && proto) {\n\t\t\t\tvar superProto = getProto(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\tcache[\n\t\t\t\t/** @type {`$${import('.').TypedArrayName}`} */ ('$' + typedArray)\n\t\t\t] = /** @type {import('./types').BoundSlice | import('./types').BoundSet} */ (\n\t\t\t\t// @ts-expect-error TODO FIXME\n\t\t\t\tcallBind(fn)\n\t\t\t);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(typedArray, 1));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t/** @type {Record<`\\$${import('.').TypedArrayName}`, Getter>} */(cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error a throw is fine here\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = /** @type {import('.').TypedArrayName} */ ($slice(name, 1));\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nvar useUint8Array = typeof Uint8Array !== 'undefined'\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined' &&\n  typeof Uint8Array !== 'undefined' &&\n  ArrayBuffer.isView &&\n  (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT)\n\nfunction toBuffer (data, encoding) {\n  // No need to do anything for exact instance\n  // This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n  if (data instanceof Buffer) return data\n\n  // Convert strings to Buffer\n  if (typeof data === 'string') return Buffer.from(data, encoding)\n\n  /*\n   * Wrap any TypedArray instances and DataViews\n   * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n   */\n  if (useArrayBuffer && ArrayBuffer.isView(data)) {\n    if (data.byteLength === 0) return Buffer.alloc(0) // Bug in Node.js <6.3.1, which treats this as out-of-bounds\n    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n    // Recheck result size, as offset/length doesn't work on Node.js <5.10\n    // We just go to Uint8Array case if this fails\n    if (res.byteLength === data.byteLength) return res\n  }\n\n  /*\n   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n   * Doesn't make sense with other TypedArray instances\n   */\n  if (useUint8Array && data instanceof Uint8Array) return Buffer.from(data)\n\n  /*\n   * Old Buffer polyfill on an engine that doesn't have TypedArray support\n   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n   * Convert to our current Buffer implementation\n   */\n  if (\n    Buffer.isBuffer(data) &&\n    data.constructor &&\n    typeof data.constructor.isBuffer === 'function' &&\n    data.constructor.isBuffer(data)\n  ) {\n    return Buffer.from(data)\n  }\n\n  throw new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n\n  data = toBuffer(data, encoding) // asserts correct input type\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar callBound = require('call-bound');\n\n/** @type {undefined | ((thisArg: import('.').TypedArray) => Buffer<ArrayBufferLike>)} */\nvar $typedArrayBuffer = callBound('TypedArray.prototype.buffer', true);\n\nvar isTypedArray = require('is-typed-array');\n\n/** @type {import('.')} */\n// node <= 0.10, < 0.11.4 has a nonconfigurable own property instead of a prototype getter\nmodule.exports = $typedArrayBuffer || function typedArrayBuffer(x) {\n\tif (!isTypedArray(x)) {\n\t\tthrow new $TypeError('Not a Typed Array');\n\t}\n\treturn x.buffer;\n};\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar isArray = require('isarray');\nvar typedArrayBuffer = require('typed-array-buffer');\n\nvar isView = ArrayBuffer.isView || function isView(obj) {\n\ttry {\n\t\ttypedArrayBuffer(obj);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined'\n\t&& typeof Uint8Array !== 'undefined';\nvar useFromArrayBuffer = useArrayBuffer && (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);\n\nmodule.exports = function toBuffer(data, encoding) {\n\t/*\n\t * No need to do anything for exact instance\n\t * This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n\t */\n\tif (data instanceof Buffer) {\n\t\treturn data;\n\t}\n\n\tif (typeof data === 'string') {\n\t\treturn Buffer.from(data, encoding);\n\t}\n\n\t/*\n\t * Wrap any TypedArray instances and DataViews\n\t * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n\t */\n\tif (useArrayBuffer && isView(data)) {\n\t\t// Bug in Node.js <6.3.1, which treats this as out-of-bounds\n\t\tif (data.byteLength === 0) {\n\t\t\treturn Buffer.alloc(0);\n\t\t}\n\n\t\t// When Buffer is based on Uint8Array, we can just construct it from ArrayBuffer\n\t\tif (useFromArrayBuffer) {\n\t\t\tvar res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n\t\t\t/*\n\t\t\t * Recheck result size, as offset/length doesn't work on Node.js <5.10\n\t\t\t * We just go to Uint8Array case if this fails\n\t\t\t */\n\t\t\tif (res.byteLength === data.byteLength) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\n\t\t// Convert to Uint8Array bytes and then to Buffer\n\t\tvar uint8 = data instanceof Uint8Array ? data : new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n\t\tvar result = Buffer.from(uint8);\n\n\t\t/*\n\t\t * Let's recheck that conversion succeeded\n\t\t * We have .length but not .byteLength when useFromArrayBuffer is false\n\t\t */\n\t\tif (result.length === data.byteLength) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/*\n\t * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n\t * Doesn't make sense with other TypedArray instances\n\t */\n\tif (useUint8Array && data instanceof Uint8Array) {\n\t\treturn Buffer.from(data);\n\t}\n\n\tvar isArr = isArray(data);\n\tif (isArr) {\n\t\tfor (var i = 0; i < data.length; i += 1) {\n\t\t\tvar x = data[i];\n\t\t\tif (\n\t\t\t\ttypeof x !== 'number'\n\t\t\t\t|| x < 0\n\t\t\t\t|| x > 255\n\t\t\t\t|| ~~x !== x // NaN and integer check\n\t\t\t) {\n\t\t\t\tthrow new RangeError('Array items must be numbers in the range 0-255.');\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t * Old Buffer polyfill on an engine that doesn't have TypedArray support\n\t * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n\t * Convert to our current Buffer implementation\n\t */\n\tif (\n\t\tisArr || (\n\t\t\tBuffer.isBuffer(data)\n\t\t\t\t&& data.constructor\n\t\t\t\t&& typeof data.constructor.isBuffer === 'function'\n\t\t\t\t&& data.constructor.isBuffer(data)\n\t\t)\n\t) {\n\t\treturn Buffer.from(data);\n\t}\n\n\tthrow new TypeError('The \"data\" argument must be a string, an Array, a Buffer, a Uint8Array, or a DataView.');\n};\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('to-buffer');\n\n// prototype class for hash functions\nfunction Hash(blockSize, finalSize) {\n\tthis._block = Buffer.alloc(blockSize);\n\tthis._finalSize = finalSize;\n\tthis._blockSize = blockSize;\n\tthis._len = 0;\n}\n\nHash.prototype.update = function (data, enc) {\n\t/* eslint no-param-reassign: 0 */\n\tdata = toBuffer(data, enc || 'utf8');\n\n\tvar block = this._block;\n\tvar blockSize = this._blockSize;\n\tvar length = data.length;\n\tvar accum = this._len;\n\n\tfor (var offset = 0; offset < length;) {\n\t\tvar assigned = accum % blockSize;\n\t\tvar remainder = Math.min(length - offset, blockSize - assigned);\n\n\t\tfor (var i = 0; i < remainder; i++) {\n\t\t\tblock[assigned + i] = data[offset + i];\n\t\t}\n\n\t\taccum += remainder;\n\t\toffset += remainder;\n\n\t\tif ((accum % blockSize) === 0) {\n\t\t\tthis._update(block);\n\t\t}\n\t}\n\n\tthis._len += length;\n\treturn this;\n};\n\nHash.prototype.digest = function (enc) {\n\tvar rem = this._len % this._blockSize;\n\n\tthis._block[rem] = 0x80;\n\n\t/*\n\t * zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n\t * non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n\t */\n\tthis._block.fill(0, rem + 1);\n\n\tif (rem >= this._finalSize) {\n\t\tthis._update(this._block);\n\t\tthis._block.fill(0);\n\t}\n\n\tvar bits = this._len * 8;\n\n\t// uint32\n\tif (bits <= 0xffffffff) {\n\t\tthis._block.writeUInt32BE(bits, this._blockSize - 4);\n\n\t\t// uint64\n\t} else {\n\t\tvar lowBits = (bits & 0xffffffff) >>> 0;\n\t\tvar highBits = (bits - lowBits) / 0x100000000;\n\n\t\tthis._block.writeUInt32BE(highBits, this._blockSize - 8);\n\t\tthis._block.writeUInt32BE(lowBits, this._blockSize - 4);\n\t}\n\n\tthis._update(this._block);\n\tvar hash = this._hash();\n\n\treturn enc ? hash.toString(enc) : hash;\n};\n\nHash.prototype._update = function () {\n\tthrow new Error('_update must be implemented by subclass');\n};\n\nmodule.exports = Hash;\n","'use strict';\n\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits');\nvar Hash = require('./hash');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar K = [\n\t0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n];\n\nvar W = new Array(80);\n\nfunction Sha() {\n\tthis.init();\n\tthis._w = W;\n\n\tHash.call(this, 64, 56);\n}\n\ninherits(Sha, Hash);\n\nSha.prototype.init = function () {\n\tthis._a = 0x67452301;\n\tthis._b = 0xefcdab89;\n\tthis._c = 0x98badcfe;\n\tthis._d = 0x10325476;\n\tthis._e = 0xc3d2e1f0;\n\n\treturn this;\n};\n\nfunction rotl5(num) {\n\treturn (num << 5) | (num >>> 27);\n}\n\nfunction rotl30(num) {\n\treturn (num << 30) | (num >>> 2);\n}\n\nfunction ft(s, b, c, d) {\n\tif (s === 0) {\n\t\treturn (b & c) | (~b & d);\n\t}\n\tif (s === 2) {\n\t\treturn (b & c) | (b & d) | (c & d);\n\t}\n\treturn b ^ c ^ d;\n}\n\nSha.prototype._update = function (M) {\n\tvar w = this._w;\n\n\tvar a = this._a | 0;\n\tvar b = this._b | 0;\n\tvar c = this._c | 0;\n\tvar d = this._d | 0;\n\tvar e = this._e | 0;\n\n\tfor (var i = 0; i < 16; ++i) {\n\t\tw[i] = M.readInt32BE(i * 4);\n\t}\n\tfor (; i < 80; ++i) {\n\t\tw[i] = w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16];\n\t}\n\n\tfor (var j = 0; j < 80; ++j) {\n\t\tvar s = ~~(j / 20);\n\t\tvar t = (rotl5(a) + ft(s, b, c, d) + e + w[j] + K[s]) | 0;\n\n\t\te = d;\n\t\td = c;\n\t\tc = rotl30(b);\n\t\tb = a;\n\t\ta = t;\n\t}\n\n\tthis._a = (a + this._a) | 0;\n\tthis._b = (b + this._b) | 0;\n\tthis._c = (c + this._c) | 0;\n\tthis._d = (d + this._d) | 0;\n\tthis._e = (e + this._e) | 0;\n};\n\nSha.prototype._hash = function () {\n\tvar H = Buffer.allocUnsafe(20);\n\n\tH.writeInt32BE(this._a | 0, 0);\n\tH.writeInt32BE(this._b | 0, 4);\n\tH.writeInt32BE(this._c | 0, 8);\n\tH.writeInt32BE(this._d | 0, 12);\n\tH.writeInt32BE(this._e | 0, 16);\n\n\treturn H;\n};\n\nmodule.exports = Sha;\n","'use strict';\n\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits');\nvar Hash = require('./hash');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar K = [\n\t0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n];\n\nvar W = new Array(80);\n\nfunction Sha1() {\n\tthis.init();\n\tthis._w = W;\n\n\tHash.call(this, 64, 56);\n}\n\ninherits(Sha1, Hash);\n\nSha1.prototype.init = function () {\n\tthis._a = 0x67452301;\n\tthis._b = 0xefcdab89;\n\tthis._c = 0x98badcfe;\n\tthis._d = 0x10325476;\n\tthis._e = 0xc3d2e1f0;\n\n\treturn this;\n};\n\nfunction rotl1(num) {\n\treturn (num << 1) | (num >>> 31);\n}\n\nfunction rotl5(num) {\n\treturn (num << 5) | (num >>> 27);\n}\n\nfunction rotl30(num) {\n\treturn (num << 30) | (num >>> 2);\n}\n\nfunction ft(s, b, c, d) {\n\tif (s === 0) {\n\t\treturn (b & c) | (~b & d);\n\t}\n\tif (s === 2) {\n\t\treturn (b & c) | (b & d) | (c & d);\n\t}\n\treturn b ^ c ^ d;\n}\n\nSha1.prototype._update = function (M) {\n\tvar w = this._w;\n\n\tvar a = this._a | 0;\n\tvar b = this._b | 0;\n\tvar c = this._c | 0;\n\tvar d = this._d | 0;\n\tvar e = this._e | 0;\n\n\tfor (var i = 0; i < 16; ++i) {\n\t\tw[i] = M.readInt32BE(i * 4);\n\t}\n\tfor (; i < 80; ++i) {\n\t\tw[i] = rotl1(w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n\t}\n\n\tfor (var j = 0; j < 80; ++j) {\n\t\tvar s = ~~(j / 20);\n\t\tvar t = (rotl5(a) + ft(s, b, c, d) + e + w[j] + K[s]) | 0;\n\n\t\te = d;\n\t\td = c;\n\t\tc = rotl30(b);\n\t\tb = a;\n\t\ta = t;\n\t}\n\n\tthis._a = (a + this._a) | 0;\n\tthis._b = (b + this._b) | 0;\n\tthis._c = (c + this._c) | 0;\n\tthis._d = (d + this._d) | 0;\n\tthis._e = (e + this._e) | 0;\n};\n\nSha1.prototype._hash = function () {\n\tvar H = Buffer.allocUnsafe(20);\n\n\tH.writeInt32BE(this._a | 0, 0);\n\tH.writeInt32BE(this._b | 0, 4);\n\tH.writeInt32BE(this._c | 0, 8);\n\tH.writeInt32BE(this._d | 0, 12);\n\tH.writeInt32BE(this._e | 0, 16);\n\n\treturn H;\n};\n\nmodule.exports = Sha1;\n","'use strict';\n\n/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits');\nvar Hash = require('./hash');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar K = [\n\t0x428A2F98,\n\t0x71374491,\n\t0xB5C0FBCF,\n\t0xE9B5DBA5,\n\t0x3956C25B,\n\t0x59F111F1,\n\t0x923F82A4,\n\t0xAB1C5ED5,\n\t0xD807AA98,\n\t0x12835B01,\n\t0x243185BE,\n\t0x550C7DC3,\n\t0x72BE5D74,\n\t0x80DEB1FE,\n\t0x9BDC06A7,\n\t0xC19BF174,\n\t0xE49B69C1,\n\t0xEFBE4786,\n\t0x0FC19DC6,\n\t0x240CA1CC,\n\t0x2DE92C6F,\n\t0x4A7484AA,\n\t0x5CB0A9DC,\n\t0x76F988DA,\n\t0x983E5152,\n\t0xA831C66D,\n\t0xB00327C8,\n\t0xBF597FC7,\n\t0xC6E00BF3,\n\t0xD5A79147,\n\t0x06CA6351,\n\t0x14292967,\n\t0x27B70A85,\n\t0x2E1B2138,\n\t0x4D2C6DFC,\n\t0x53380D13,\n\t0x650A7354,\n\t0x766A0ABB,\n\t0x81C2C92E,\n\t0x92722C85,\n\t0xA2BFE8A1,\n\t0xA81A664B,\n\t0xC24B8B70,\n\t0xC76C51A3,\n\t0xD192E819,\n\t0xD6990624,\n\t0xF40E3585,\n\t0x106AA070,\n\t0x19A4C116,\n\t0x1E376C08,\n\t0x2748774C,\n\t0x34B0BCB5,\n\t0x391C0CB3,\n\t0x4ED8AA4A,\n\t0x5B9CCA4F,\n\t0x682E6FF3,\n\t0x748F82EE,\n\t0x78A5636F,\n\t0x84C87814,\n\t0x8CC70208,\n\t0x90BEFFFA,\n\t0xA4506CEB,\n\t0xBEF9A3F7,\n\t0xC67178F2\n];\n\nvar W = new Array(64);\n\nfunction Sha256() {\n\tthis.init();\n\n\tthis._w = W; // new Array(64)\n\n\tHash.call(this, 64, 56);\n}\n\ninherits(Sha256, Hash);\n\nSha256.prototype.init = function () {\n\tthis._a = 0x6a09e667;\n\tthis._b = 0xbb67ae85;\n\tthis._c = 0x3c6ef372;\n\tthis._d = 0xa54ff53a;\n\tthis._e = 0x510e527f;\n\tthis._f = 0x9b05688c;\n\tthis._g = 0x1f83d9ab;\n\tthis._h = 0x5be0cd19;\n\n\treturn this;\n};\n\nfunction ch(x, y, z) {\n\treturn z ^ (x & (y ^ z));\n}\n\nfunction maj(x, y, z) {\n\treturn (x & y) | (z & (x | y));\n}\n\nfunction sigma0(x) {\n\treturn ((x >>> 2) | (x << 30)) ^ ((x >>> 13) | (x << 19)) ^ ((x >>> 22) | (x << 10));\n}\n\nfunction sigma1(x) {\n\treturn ((x >>> 6) | (x << 26)) ^ ((x >>> 11) | (x << 21)) ^ ((x >>> 25) | (x << 7));\n}\n\nfunction gamma0(x) {\n\treturn ((x >>> 7) | (x << 25)) ^ ((x >>> 18) | (x << 14)) ^ (x >>> 3);\n}\n\nfunction gamma1(x) {\n\treturn ((x >>> 17) | (x << 15)) ^ ((x >>> 19) | (x << 13)) ^ (x >>> 10);\n}\n\nSha256.prototype._update = function (M) {\n\tvar w = this._w;\n\n\tvar a = this._a | 0;\n\tvar b = this._b | 0;\n\tvar c = this._c | 0;\n\tvar d = this._d | 0;\n\tvar e = this._e | 0;\n\tvar f = this._f | 0;\n\tvar g = this._g | 0;\n\tvar h = this._h | 0;\n\n\tfor (var i = 0; i < 16; ++i) {\n\t\tw[i] = M.readInt32BE(i * 4);\n\t}\n\tfor (; i < 64; ++i) {\n\t\tw[i] = (gamma1(w[i - 2]) + w[i - 7] + gamma0(w[i - 15]) + w[i - 16]) | 0;\n\t}\n\n\tfor (var j = 0; j < 64; ++j) {\n\t\tvar T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + w[j]) | 0;\n\t\tvar T2 = (sigma0(a) + maj(a, b, c)) | 0;\n\n\t\th = g;\n\t\tg = f;\n\t\tf = e;\n\t\te = (d + T1) | 0;\n\t\td = c;\n\t\tc = b;\n\t\tb = a;\n\t\ta = (T1 + T2) | 0;\n\t}\n\n\tthis._a = (a + this._a) | 0;\n\tthis._b = (b + this._b) | 0;\n\tthis._c = (c + this._c) | 0;\n\tthis._d = (d + this._d) | 0;\n\tthis._e = (e + this._e) | 0;\n\tthis._f = (f + this._f) | 0;\n\tthis._g = (g + this._g) | 0;\n\tthis._h = (h + this._h) | 0;\n};\n\nSha256.prototype._hash = function () {\n\tvar H = Buffer.allocUnsafe(32);\n\n\tH.writeInt32BE(this._a, 0);\n\tH.writeInt32BE(this._b, 4);\n\tH.writeInt32BE(this._c, 8);\n\tH.writeInt32BE(this._d, 12);\n\tH.writeInt32BE(this._e, 16);\n\tH.writeInt32BE(this._f, 20);\n\tH.writeInt32BE(this._g, 24);\n\tH.writeInt32BE(this._h, 28);\n\n\treturn H;\n};\n\nmodule.exports = Sha256;\n","'use strict';\n\n/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits');\nvar Sha256 = require('./sha256');\nvar Hash = require('./hash');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar W = new Array(64);\n\nfunction Sha224() {\n\tthis.init();\n\n\tthis._w = W; // new Array(64)\n\n\tHash.call(this, 64, 56);\n}\n\ninherits(Sha224, Sha256);\n\nSha224.prototype.init = function () {\n\tthis._a = 0xc1059ed8;\n\tthis._b = 0x367cd507;\n\tthis._c = 0x3070dd17;\n\tthis._d = 0xf70e5939;\n\tthis._e = 0xffc00b31;\n\tthis._f = 0x68581511;\n\tthis._g = 0x64f98fa7;\n\tthis._h = 0xbefa4fa4;\n\n\treturn this;\n};\n\nSha224.prototype._hash = function () {\n\tvar H = Buffer.allocUnsafe(28);\n\n\tH.writeInt32BE(this._a, 0);\n\tH.writeInt32BE(this._b, 4);\n\tH.writeInt32BE(this._c, 8);\n\tH.writeInt32BE(this._d, 12);\n\tH.writeInt32BE(this._e, 16);\n\tH.writeInt32BE(this._f, 20);\n\tH.writeInt32BE(this._g, 24);\n\n\treturn H;\n};\n\nmodule.exports = Sha224;\n","'use strict';\n\nvar inherits = require('inherits');\nvar Hash = require('./hash');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar K = [\n\t0x428a2f98,\n\t0xd728ae22,\n\t0x71374491,\n\t0x23ef65cd,\n\t0xb5c0fbcf,\n\t0xec4d3b2f,\n\t0xe9b5dba5,\n\t0x8189dbbc,\n\t0x3956c25b,\n\t0xf348b538,\n\t0x59f111f1,\n\t0xb605d019,\n\t0x923f82a4,\n\t0xaf194f9b,\n\t0xab1c5ed5,\n\t0xda6d8118,\n\t0xd807aa98,\n\t0xa3030242,\n\t0x12835b01,\n\t0x45706fbe,\n\t0x243185be,\n\t0x4ee4b28c,\n\t0x550c7dc3,\n\t0xd5ffb4e2,\n\t0x72be5d74,\n\t0xf27b896f,\n\t0x80deb1fe,\n\t0x3b1696b1,\n\t0x9bdc06a7,\n\t0x25c71235,\n\t0xc19bf174,\n\t0xcf692694,\n\t0xe49b69c1,\n\t0x9ef14ad2,\n\t0xefbe4786,\n\t0x384f25e3,\n\t0x0fc19dc6,\n\t0x8b8cd5b5,\n\t0x240ca1cc,\n\t0x77ac9c65,\n\t0x2de92c6f,\n\t0x592b0275,\n\t0x4a7484aa,\n\t0x6ea6e483,\n\t0x5cb0a9dc,\n\t0xbd41fbd4,\n\t0x76f988da,\n\t0x831153b5,\n\t0x983e5152,\n\t0xee66dfab,\n\t0xa831c66d,\n\t0x2db43210,\n\t0xb00327c8,\n\t0x98fb213f,\n\t0xbf597fc7,\n\t0xbeef0ee4,\n\t0xc6e00bf3,\n\t0x3da88fc2,\n\t0xd5a79147,\n\t0x930aa725,\n\t0x06ca6351,\n\t0xe003826f,\n\t0x14292967,\n\t0x0a0e6e70,\n\t0x27b70a85,\n\t0x46d22ffc,\n\t0x2e1b2138,\n\t0x5c26c926,\n\t0x4d2c6dfc,\n\t0x5ac42aed,\n\t0x53380d13,\n\t0x9d95b3df,\n\t0x650a7354,\n\t0x8baf63de,\n\t0x766a0abb,\n\t0x3c77b2a8,\n\t0x81c2c92e,\n\t0x47edaee6,\n\t0x92722c85,\n\t0x1482353b,\n\t0xa2bfe8a1,\n\t0x4cf10364,\n\t0xa81a664b,\n\t0xbc423001,\n\t0xc24b8b70,\n\t0xd0f89791,\n\t0xc76c51a3,\n\t0x0654be30,\n\t0xd192e819,\n\t0xd6ef5218,\n\t0xd6990624,\n\t0x5565a910,\n\t0xf40e3585,\n\t0x5771202a,\n\t0x106aa070,\n\t0x32bbd1b8,\n\t0x19a4c116,\n\t0xb8d2d0c8,\n\t0x1e376c08,\n\t0x5141ab53,\n\t0x2748774c,\n\t0xdf8eeb99,\n\t0x34b0bcb5,\n\t0xe19b48a8,\n\t0x391c0cb3,\n\t0xc5c95a63,\n\t0x4ed8aa4a,\n\t0xe3418acb,\n\t0x5b9cca4f,\n\t0x7763e373,\n\t0x682e6ff3,\n\t0xd6b2b8a3,\n\t0x748f82ee,\n\t0x5defb2fc,\n\t0x78a5636f,\n\t0x43172f60,\n\t0x84c87814,\n\t0xa1f0ab72,\n\t0x8cc70208,\n\t0x1a6439ec,\n\t0x90befffa,\n\t0x23631e28,\n\t0xa4506ceb,\n\t0xde82bde9,\n\t0xbef9a3f7,\n\t0xb2c67915,\n\t0xc67178f2,\n\t0xe372532b,\n\t0xca273ece,\n\t0xea26619c,\n\t0xd186b8c7,\n\t0x21c0c207,\n\t0xeada7dd6,\n\t0xcde0eb1e,\n\t0xf57d4f7f,\n\t0xee6ed178,\n\t0x06f067aa,\n\t0x72176fba,\n\t0x0a637dc5,\n\t0xa2c898a6,\n\t0x113f9804,\n\t0xbef90dae,\n\t0x1b710b35,\n\t0x131c471b,\n\t0x28db77f5,\n\t0x23047d84,\n\t0x32caab7b,\n\t0x40c72493,\n\t0x3c9ebe0a,\n\t0x15c9bebc,\n\t0x431d67c4,\n\t0x9c100d4c,\n\t0x4cc5d4be,\n\t0xcb3e42b6,\n\t0x597f299c,\n\t0xfc657e2a,\n\t0x5fcb6fab,\n\t0x3ad6faec,\n\t0x6c44198c,\n\t0x4a475817\n];\n\nvar W = new Array(160);\n\nfunction Sha512() {\n\tthis.init();\n\tthis._w = W;\n\n\tHash.call(this, 128, 112);\n}\n\ninherits(Sha512, Hash);\n\nSha512.prototype.init = function () {\n\tthis._ah = 0x6a09e667;\n\tthis._bh = 0xbb67ae85;\n\tthis._ch = 0x3c6ef372;\n\tthis._dh = 0xa54ff53a;\n\tthis._eh = 0x510e527f;\n\tthis._fh = 0x9b05688c;\n\tthis._gh = 0x1f83d9ab;\n\tthis._hh = 0x5be0cd19;\n\n\tthis._al = 0xf3bcc908;\n\tthis._bl = 0x84caa73b;\n\tthis._cl = 0xfe94f82b;\n\tthis._dl = 0x5f1d36f1;\n\tthis._el = 0xade682d1;\n\tthis._fl = 0x2b3e6c1f;\n\tthis._gl = 0xfb41bd6b;\n\tthis._hl = 0x137e2179;\n\n\treturn this;\n};\n\nfunction Ch(x, y, z) {\n\treturn z ^ (x & (y ^ z));\n}\n\nfunction maj(x, y, z) {\n\treturn (x & y) | (z & (x | y));\n}\n\nfunction sigma0(x, xl) {\n\treturn ((x >>> 28) | (xl << 4)) ^ ((xl >>> 2) | (x << 30)) ^ ((xl >>> 7) | (x << 25));\n}\n\nfunction sigma1(x, xl) {\n\treturn ((x >>> 14) | (xl << 18)) ^ ((x >>> 18) | (xl << 14)) ^ ((xl >>> 9) | (x << 23));\n}\n\nfunction Gamma0(x, xl) {\n\treturn ((x >>> 1) | (xl << 31)) ^ ((x >>> 8) | (xl << 24)) ^ (x >>> 7);\n}\n\nfunction Gamma0l(x, xl) {\n\treturn ((x >>> 1) | (xl << 31)) ^ ((x >>> 8) | (xl << 24)) ^ ((x >>> 7) | (xl << 25));\n}\n\nfunction Gamma1(x, xl) {\n\treturn ((x >>> 19) | (xl << 13)) ^ ((xl >>> 29) | (x << 3)) ^ (x >>> 6);\n}\n\nfunction Gamma1l(x, xl) {\n\treturn ((x >>> 19) | (xl << 13)) ^ ((xl >>> 29) | (x << 3)) ^ ((x >>> 6) | (xl << 26));\n}\n\nfunction getCarry(a, b) {\n\treturn (a >>> 0) < (b >>> 0) ? 1 : 0;\n}\n\nSha512.prototype._update = function (M) {\n\tvar w = this._w;\n\n\tvar ah = this._ah | 0;\n\tvar bh = this._bh | 0;\n\tvar ch = this._ch | 0;\n\tvar dh = this._dh | 0;\n\tvar eh = this._eh | 0;\n\tvar fh = this._fh | 0;\n\tvar gh = this._gh | 0;\n\tvar hh = this._hh | 0;\n\n\tvar al = this._al | 0;\n\tvar bl = this._bl | 0;\n\tvar cl = this._cl | 0;\n\tvar dl = this._dl | 0;\n\tvar el = this._el | 0;\n\tvar fl = this._fl | 0;\n\tvar gl = this._gl | 0;\n\tvar hl = this._hl | 0;\n\n\tfor (var i = 0; i < 32; i += 2) {\n\t\tw[i] = M.readInt32BE(i * 4);\n\t\tw[i + 1] = M.readInt32BE((i * 4) + 4);\n\t}\n\tfor (; i < 160; i += 2) {\n\t\tvar xh = w[i - (15 * 2)];\n\t\tvar xl = w[i - (15 * 2) + 1];\n\t\tvar gamma0 = Gamma0(xh, xl);\n\t\tvar gamma0l = Gamma0l(xl, xh);\n\n\t\txh = w[i - (2 * 2)];\n\t\txl = w[i - (2 * 2) + 1];\n\t\tvar gamma1 = Gamma1(xh, xl);\n\t\tvar gamma1l = Gamma1l(xl, xh);\n\n\t\t// w[i] = gamma0 + w[i - 7] + gamma1 + w[i - 16]\n\t\tvar Wi7h = w[i - (7 * 2)];\n\t\tvar Wi7l = w[i - (7 * 2) + 1];\n\n\t\tvar Wi16h = w[i - (16 * 2)];\n\t\tvar Wi16l = w[i - (16 * 2) + 1];\n\n\t\tvar Wil = (gamma0l + Wi7l) | 0;\n\t\tvar Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0;\n\t\tWil = (Wil + gamma1l) | 0;\n\t\tWih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0;\n\t\tWil = (Wil + Wi16l) | 0;\n\t\tWih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0;\n\n\t\tw[i] = Wih;\n\t\tw[i + 1] = Wil;\n\t}\n\n\tfor (var j = 0; j < 160; j += 2) {\n\t\tWih = w[j];\n\t\tWil = w[j + 1];\n\n\t\tvar majh = maj(ah, bh, ch);\n\t\tvar majl = maj(al, bl, cl);\n\n\t\tvar sigma0h = sigma0(ah, al);\n\t\tvar sigma0l = sigma0(al, ah);\n\t\tvar sigma1h = sigma1(eh, el);\n\t\tvar sigma1l = sigma1(el, eh);\n\n\t\t// t1 = h + sigma1 + ch + K[j] + w[j]\n\t\tvar Kih = K[j];\n\t\tvar Kil = K[j + 1];\n\n\t\tvar chh = Ch(eh, fh, gh);\n\t\tvar chl = Ch(el, fl, gl);\n\n\t\tvar t1l = (hl + sigma1l) | 0;\n\t\tvar t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0;\n\t\tt1l = (t1l + chl) | 0;\n\t\tt1h = (t1h + chh + getCarry(t1l, chl)) | 0;\n\t\tt1l = (t1l + Kil) | 0;\n\t\tt1h = (t1h + Kih + getCarry(t1l, Kil)) | 0;\n\t\tt1l = (t1l + Wil) | 0;\n\t\tt1h = (t1h + Wih + getCarry(t1l, Wil)) | 0;\n\n\t\t// t2 = sigma0 + maj\n\t\tvar t2l = (sigma0l + majl) | 0;\n\t\tvar t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0;\n\n\t\thh = gh;\n\t\thl = gl;\n\t\tgh = fh;\n\t\tgl = fl;\n\t\tfh = eh;\n\t\tfl = el;\n\t\tel = (dl + t1l) | 0;\n\t\teh = (dh + t1h + getCarry(el, dl)) | 0;\n\t\tdh = ch;\n\t\tdl = cl;\n\t\tch = bh;\n\t\tcl = bl;\n\t\tbh = ah;\n\t\tbl = al;\n\t\tal = (t1l + t2l) | 0;\n\t\tah = (t1h + t2h + getCarry(al, t1l)) | 0;\n\t}\n\n\tthis._al = (this._al + al) | 0;\n\tthis._bl = (this._bl + bl) | 0;\n\tthis._cl = (this._cl + cl) | 0;\n\tthis._dl = (this._dl + dl) | 0;\n\tthis._el = (this._el + el) | 0;\n\tthis._fl = (this._fl + fl) | 0;\n\tthis._gl = (this._gl + gl) | 0;\n\tthis._hl = (this._hl + hl) | 0;\n\n\tthis._ah = (this._ah + ah + getCarry(this._al, al)) | 0;\n\tthis._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0;\n\tthis._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0;\n\tthis._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0;\n\tthis._eh = (this._eh + eh + getCarry(this._el, el)) | 0;\n\tthis._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0;\n\tthis._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0;\n\tthis._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0;\n};\n\nSha512.prototype._hash = function () {\n\tvar H = Buffer.allocUnsafe(64);\n\n\tfunction writeInt64BE(h, l, offset) {\n\t\tH.writeInt32BE(h, offset);\n\t\tH.writeInt32BE(l, offset + 4);\n\t}\n\n\twriteInt64BE(this._ah, this._al, 0);\n\twriteInt64BE(this._bh, this._bl, 8);\n\twriteInt64BE(this._ch, this._cl, 16);\n\twriteInt64BE(this._dh, this._dl, 24);\n\twriteInt64BE(this._eh, this._el, 32);\n\twriteInt64BE(this._fh, this._fl, 40);\n\twriteInt64BE(this._gh, this._gl, 48);\n\twriteInt64BE(this._hh, this._hl, 56);\n\n\treturn H;\n};\n\nmodule.exports = Sha512;\n","'use strict';\n\nvar inherits = require('inherits');\nvar SHA512 = require('./sha512');\nvar Hash = require('./hash');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar W = new Array(160);\n\nfunction Sha384() {\n\tthis.init();\n\tthis._w = W;\n\n\tHash.call(this, 128, 112);\n}\n\ninherits(Sha384, SHA512);\n\nSha384.prototype.init = function () {\n\tthis._ah = 0xcbbb9d5d;\n\tthis._bh = 0x629a292a;\n\tthis._ch = 0x9159015a;\n\tthis._dh = 0x152fecd8;\n\tthis._eh = 0x67332667;\n\tthis._fh = 0x8eb44a87;\n\tthis._gh = 0xdb0c2e0d;\n\tthis._hh = 0x47b5481d;\n\n\tthis._al = 0xc1059ed8;\n\tthis._bl = 0x367cd507;\n\tthis._cl = 0x3070dd17;\n\tthis._dl = 0xf70e5939;\n\tthis._el = 0xffc00b31;\n\tthis._fl = 0x68581511;\n\tthis._gl = 0x64f98fa7;\n\tthis._hl = 0xbefa4fa4;\n\n\treturn this;\n};\n\nSha384.prototype._hash = function () {\n\tvar H = Buffer.allocUnsafe(48);\n\n\tfunction writeInt64BE(h, l, offset) {\n\t\tH.writeInt32BE(h, offset);\n\t\tH.writeInt32BE(l, offset + 4);\n\t}\n\n\twriteInt64BE(this._ah, this._al, 0);\n\twriteInt64BE(this._bh, this._bl, 8);\n\twriteInt64BE(this._ch, this._cl, 16);\n\twriteInt64BE(this._dh, this._dl, 24);\n\twriteInt64BE(this._eh, this._el, 32);\n\twriteInt64BE(this._fh, this._fl, 40);\n\n\treturn H;\n};\n\nmodule.exports = Sha384;\n","'use strict';\n\nmodule.exports = function SHA(algorithm) {\n\tvar alg = algorithm.toLowerCase();\n\n\tvar Algorithm = module.exports[alg];\n\tif (!Algorithm) {\n\t\tthrow new Error(alg + ' is not supported (we accept pull requests)');\n\t}\n\n\treturn new Algorithm();\n};\n\nmodule.exports.sha = require('./sha');\nmodule.exports.sha1 = require('./sha1');\nmodule.exports.sha224 = require('./sha224');\nmodule.exports.sha256 = require('./sha256');\nmodule.exports.sha384 = require('./sha384');\nmodule.exports.sha512 = require('./sha512');\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar StringDecoder = require('string_decoder').StringDecoder;\nvar inherits = require('inherits');\n\nfunction CipherBase(hashMode) {\n\tTransform.call(this);\n\tthis.hashMode = typeof hashMode === 'string';\n\tif (this.hashMode) {\n\t\tthis[hashMode] = this._finalOrDigest;\n\t} else {\n\t\tthis['final'] = this._finalOrDigest;\n\t}\n\tif (this._final) {\n\t\tthis.__final = this._final;\n\t\tthis._final = null;\n\t}\n\tthis._decoder = null;\n\tthis._encoding = null;\n}\ninherits(CipherBase, Transform);\n\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined'\n\t&& typeof Uint8Array !== 'undefined'\n\t&& ArrayBuffer.isView\n\t&& (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);\n\nfunction toBuffer(data, encoding) {\n\t/*\n\t * No need to do anything for exact instance\n\t * This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n\t */\n\tif (data instanceof Buffer) {\n\t\treturn data;\n\t}\n\n\t// Convert strings to Buffer\n\tif (typeof data === 'string') {\n\t\treturn Buffer.from(data, encoding);\n\t}\n\n\t/*\n\t * Wrap any TypedArray instances and DataViews\n\t * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n\t */\n\tif (useArrayBuffer && ArrayBuffer.isView(data)) {\n\t\t// Bug in Node.js <6.3.1, which treats this as out-of-bounds\n\t\tif (data.byteLength === 0) {\n\t\t\treturn Buffer.alloc(0);\n\t\t}\n\n\t\tvar res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n\t\t/*\n\t\t * Recheck result size, as offset/length doesn't work on Node.js <5.10\n\t\t * We just go to Uint8Array case if this fails\n\t\t */\n\t\tif (res.byteLength === data.byteLength) {\n\t\t\treturn res;\n\t\t}\n\t}\n\n\t/*\n\t * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n\t * Doesn't make sense with other TypedArray instances\n\t */\n\tif (useUint8Array && data instanceof Uint8Array) {\n\t\treturn Buffer.from(data);\n\t}\n\n\t/*\n\t * Old Buffer polyfill on an engine that doesn't have TypedArray support\n\t * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n\t * Convert to our current Buffer implementation\n\t */\n\tif (\n\t\tBuffer.isBuffer(data)\n\t\t\t&& data.constructor\n\t\t\t&& typeof data.constructor.isBuffer === 'function'\n\t\t\t&& data.constructor.isBuffer(data)\n\t) {\n\t\treturn Buffer.from(data);\n\t}\n\n\tthrow new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');\n}\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n\tvar bufferData = toBuffer(data, inputEnc); // asserts correct input type\n\tvar outData = this._update(bufferData);\n\tif (this.hashMode) {\n\t\treturn this;\n\t}\n\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc);\n\t}\n\n\treturn outData;\n};\n\nCipherBase.prototype.setAutoPadding = function () {};\nCipherBase.prototype.getAuthTag = function () {\n\tthrow new Error('trying to get auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAuthTag = function () {\n\tthrow new Error('trying to set auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAAD = function () {\n\tthrow new Error('trying to set aad in unsupported state');\n};\n\nCipherBase.prototype._transform = function (data, _, next) {\n\tvar err;\n\ttry {\n\t\tif (this.hashMode) {\n\t\t\tthis._update(data);\n\t\t} else {\n\t\t\tthis.push(this._update(data));\n\t\t}\n\t} catch (e) {\n\t\terr = e;\n\t} finally {\n\t\tnext(err);\n\t}\n};\nCipherBase.prototype._flush = function (done) {\n\tvar err;\n\ttry {\n\t\tthis.push(this.__final());\n\t} catch (e) {\n\t\terr = e;\n\t}\n\n\tdone(err);\n};\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n\tvar outData = this.__final() || Buffer.alloc(0);\n\tif (outputEnc) {\n\t\toutData = this._toString(outData, outputEnc, true);\n\t}\n\treturn outData;\n};\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n\tif (!this._decoder) {\n\t\tthis._decoder = new StringDecoder(enc);\n\t\tthis._encoding = enc;\n\t}\n\n\tif (this._encoding !== enc) {\n\t\tthrow new Error('can’t switch encodings');\n\t}\n\n\tvar out = this._decoder.write(value);\n\tif (fin) {\n\t\tout += this._decoder.end();\n\t}\n\n\treturn out;\n};\n\nmodule.exports = CipherBase;\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","'use strict';\n\nmodule.exports = require('./browser/algorithms.json');\n","'use strict';\n\nvar MAX_ALLOC = Math.pow(2, 30) - 1; // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n\tif (typeof iterations !== 'number') {\n\t\tthrow new TypeError('Iterations not a number');\n\t}\n\n\tif (iterations < 0) {\n\t\tthrow new TypeError('Bad iterations');\n\t}\n\n\tif (typeof keylen !== 'number') {\n\t\tthrow new TypeError('Key length not a number');\n\t}\n\n\tif (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n\t\tthrow new TypeError('Bad key length');\n\t}\n};\n","'use strict';\n\nvar defaultEncoding;\n/* istanbul ignore next */\nif (global.process && global.process.browser) {\n\tdefaultEncoding = 'utf-8';\n} else if (global.process && global.process.version) {\n\tvar pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10);\n\n\tdefaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary';\n} else {\n\tdefaultEncoding = 'utf-8';\n}\nmodule.exports = defaultEncoding;\n","'use strict'\nvar intSize = 4\nvar zeroBuffer = new Buffer(intSize)\nzeroBuffer.fill(0)\n\nvar charSize = 8\nvar hashSize = 16\n\nfunction toArray (buf) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize))\n    buf = Buffer.concat([buf, zeroBuffer], len)\n  }\n\n  var arr = new Array(buf.length >>> 2)\n  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {\n    arr[j] = buf.readInt32LE(i)\n  }\n\n  return arr\n}\n\nmodule.exports = function hash (buf, fn) {\n  var arr = fn(toArray(buf), buf.length * charSize)\n  buf = new Buffer(hashSize)\n  for (var i = 0; i < arr.length; i++) {\n    buf.writeInt32LE(arr[i], i << 2, true)\n  }\n  return buf\n}\n","'use strict'\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\nvar makeHash = require('./make-hash')\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5 (x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32)\n  x[(((len + 64) >>> 9) << 4) + 14] = len\n\n  var a = 1732584193\n  var b = -271733879\n  var c = -1732584194\n  var d = 271733878\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a\n    var oldb = b\n    var oldc = c\n    var oldd = d\n\n    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936)\n    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)\n    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)\n    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)\n    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)\n    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)\n    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)\n    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)\n    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)\n    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)\n    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)\n    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)\n    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)\n    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)\n    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)\n    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)\n\n    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)\n    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)\n    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)\n    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302)\n    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)\n    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)\n    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)\n    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)\n    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)\n    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)\n    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)\n    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)\n    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)\n    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)\n    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)\n    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)\n\n    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)\n    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)\n    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)\n    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)\n    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)\n    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)\n    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)\n    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)\n    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)\n    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222)\n    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)\n    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)\n    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)\n    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)\n    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)\n    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)\n\n    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844)\n    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)\n    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)\n    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)\n    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)\n    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)\n    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)\n    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)\n    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)\n    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)\n    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)\n    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)\n    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)\n    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)\n    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)\n    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)\n\n    a = safe_add(a, olda)\n    b = safe_add(b, oldb)\n    c = safe_add(c, oldc)\n    d = safe_add(d, oldd)\n  }\n\n  return [a, b, c, d]\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn (q, a, b, x, s, t) {\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)\n}\n\nfunction md5_ff (a, b, c, d, x, s, t) {\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)\n}\n\nfunction md5_gg (a, b, c, d, x, s, t) {\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)\n}\n\nfunction md5_hh (a, b, c, d, x, s, t) {\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t)\n}\n\nfunction md5_ii (a, b, c, d, x, s, t) {\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add (x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF)\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16)\n  return (msw << 16) | (lsw & 0xFFFF)\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol (num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt))\n}\n\nmodule.exports = function md5 (buf) {\n  return makeHash(buf, core_md5)\n}\n","'use strict'\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = new Buffer(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    if (encoding !== 'buffer') chunk = new Buffer(chunk, encoding)\n    this.update(chunk)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this._digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = new Buffer(data, encoding || 'binary')\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function (data) {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var m = new Array(16)\n  for (var i = 0; i < 16; ++i) m[i] = this._block.readInt32LE(i * 4)\n\n  var al = this._a\n  var bl = this._b\n  var cl = this._c\n  var dl = this._d\n  var el = this._e\n\n  // Mj = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15\n  // K = 0x00000000\n  // Sj = 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8\n  al = fn1(al, bl, cl, dl, el, m[0], 0x00000000, 11); cl = rotl(cl, 10)\n  el = fn1(el, al, bl, cl, dl, m[1], 0x00000000, 14); bl = rotl(bl, 10)\n  dl = fn1(dl, el, al, bl, cl, m[2], 0x00000000, 15); al = rotl(al, 10)\n  cl = fn1(cl, dl, el, al, bl, m[3], 0x00000000, 12); el = rotl(el, 10)\n  bl = fn1(bl, cl, dl, el, al, m[4], 0x00000000, 5); dl = rotl(dl, 10)\n  al = fn1(al, bl, cl, dl, el, m[5], 0x00000000, 8); cl = rotl(cl, 10)\n  el = fn1(el, al, bl, cl, dl, m[6], 0x00000000, 7); bl = rotl(bl, 10)\n  dl = fn1(dl, el, al, bl, cl, m[7], 0x00000000, 9); al = rotl(al, 10)\n  cl = fn1(cl, dl, el, al, bl, m[8], 0x00000000, 11); el = rotl(el, 10)\n  bl = fn1(bl, cl, dl, el, al, m[9], 0x00000000, 13); dl = rotl(dl, 10)\n  al = fn1(al, bl, cl, dl, el, m[10], 0x00000000, 14); cl = rotl(cl, 10)\n  el = fn1(el, al, bl, cl, dl, m[11], 0x00000000, 15); bl = rotl(bl, 10)\n  dl = fn1(dl, el, al, bl, cl, m[12], 0x00000000, 6); al = rotl(al, 10)\n  cl = fn1(cl, dl, el, al, bl, m[13], 0x00000000, 7); el = rotl(el, 10)\n  bl = fn1(bl, cl, dl, el, al, m[14], 0x00000000, 9); dl = rotl(dl, 10)\n  al = fn1(al, bl, cl, dl, el, m[15], 0x00000000, 8); cl = rotl(cl, 10)\n\n  // Mj = 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8\n  // K = 0x5a827999\n  // Sj = 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12\n  el = fn2(el, al, bl, cl, dl, m[7], 0x5a827999, 7); bl = rotl(bl, 10)\n  dl = fn2(dl, el, al, bl, cl, m[4], 0x5a827999, 6); al = rotl(al, 10)\n  cl = fn2(cl, dl, el, al, bl, m[13], 0x5a827999, 8); el = rotl(el, 10)\n  bl = fn2(bl, cl, dl, el, al, m[1], 0x5a827999, 13); dl = rotl(dl, 10)\n  al = fn2(al, bl, cl, dl, el, m[10], 0x5a827999, 11); cl = rotl(cl, 10)\n  el = fn2(el, al, bl, cl, dl, m[6], 0x5a827999, 9); bl = rotl(bl, 10)\n  dl = fn2(dl, el, al, bl, cl, m[15], 0x5a827999, 7); al = rotl(al, 10)\n  cl = fn2(cl, dl, el, al, bl, m[3], 0x5a827999, 15); el = rotl(el, 10)\n  bl = fn2(bl, cl, dl, el, al, m[12], 0x5a827999, 7); dl = rotl(dl, 10)\n  al = fn2(al, bl, cl, dl, el, m[0], 0x5a827999, 12); cl = rotl(cl, 10)\n  el = fn2(el, al, bl, cl, dl, m[9], 0x5a827999, 15); bl = rotl(bl, 10)\n  dl = fn2(dl, el, al, bl, cl, m[5], 0x5a827999, 9); al = rotl(al, 10)\n  cl = fn2(cl, dl, el, al, bl, m[2], 0x5a827999, 11); el = rotl(el, 10)\n  bl = fn2(bl, cl, dl, el, al, m[14], 0x5a827999, 7); dl = rotl(dl, 10)\n  al = fn2(al, bl, cl, dl, el, m[11], 0x5a827999, 13); cl = rotl(cl, 10)\n  el = fn2(el, al, bl, cl, dl, m[8], 0x5a827999, 12); bl = rotl(bl, 10)\n\n  // Mj = 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12\n  // K = 0x6ed9eba1\n  // Sj = 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5\n  dl = fn3(dl, el, al, bl, cl, m[3], 0x6ed9eba1, 11); al = rotl(al, 10)\n  cl = fn3(cl, dl, el, al, bl, m[10], 0x6ed9eba1, 13); el = rotl(el, 10)\n  bl = fn3(bl, cl, dl, el, al, m[14], 0x6ed9eba1, 6); dl = rotl(dl, 10)\n  al = fn3(al, bl, cl, dl, el, m[4], 0x6ed9eba1, 7); cl = rotl(cl, 10)\n  el = fn3(el, al, bl, cl, dl, m[9], 0x6ed9eba1, 14); bl = rotl(bl, 10)\n  dl = fn3(dl, el, al, bl, cl, m[15], 0x6ed9eba1, 9); al = rotl(al, 10)\n  cl = fn3(cl, dl, el, al, bl, m[8], 0x6ed9eba1, 13); el = rotl(el, 10)\n  bl = fn3(bl, cl, dl, el, al, m[1], 0x6ed9eba1, 15); dl = rotl(dl, 10)\n  al = fn3(al, bl, cl, dl, el, m[2], 0x6ed9eba1, 14); cl = rotl(cl, 10)\n  el = fn3(el, al, bl, cl, dl, m[7], 0x6ed9eba1, 8); bl = rotl(bl, 10)\n  dl = fn3(dl, el, al, bl, cl, m[0], 0x6ed9eba1, 13); al = rotl(al, 10)\n  cl = fn3(cl, dl, el, al, bl, m[6], 0x6ed9eba1, 6); el = rotl(el, 10)\n  bl = fn3(bl, cl, dl, el, al, m[13], 0x6ed9eba1, 5); dl = rotl(dl, 10)\n  al = fn3(al, bl, cl, dl, el, m[11], 0x6ed9eba1, 12); cl = rotl(cl, 10)\n  el = fn3(el, al, bl, cl, dl, m[5], 0x6ed9eba1, 7); bl = rotl(bl, 10)\n  dl = fn3(dl, el, al, bl, cl, m[12], 0x6ed9eba1, 5); al = rotl(al, 10)\n\n  // Mj = 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2\n  // K = 0x8f1bbcdc\n  // Sj = 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12\n  cl = fn4(cl, dl, el, al, bl, m[1], 0x8f1bbcdc, 11); el = rotl(el, 10)\n  bl = fn4(bl, cl, dl, el, al, m[9], 0x8f1bbcdc, 12); dl = rotl(dl, 10)\n  al = fn4(al, bl, cl, dl, el, m[11], 0x8f1bbcdc, 14); cl = rotl(cl, 10)\n  el = fn4(el, al, bl, cl, dl, m[10], 0x8f1bbcdc, 15); bl = rotl(bl, 10)\n  dl = fn4(dl, el, al, bl, cl, m[0], 0x8f1bbcdc, 14); al = rotl(al, 10)\n  cl = fn4(cl, dl, el, al, bl, m[8], 0x8f1bbcdc, 15); el = rotl(el, 10)\n  bl = fn4(bl, cl, dl, el, al, m[12], 0x8f1bbcdc, 9); dl = rotl(dl, 10)\n  al = fn4(al, bl, cl, dl, el, m[4], 0x8f1bbcdc, 8); cl = rotl(cl, 10)\n  el = fn4(el, al, bl, cl, dl, m[13], 0x8f1bbcdc, 9); bl = rotl(bl, 10)\n  dl = fn4(dl, el, al, bl, cl, m[3], 0x8f1bbcdc, 14); al = rotl(al, 10)\n  cl = fn4(cl, dl, el, al, bl, m[7], 0x8f1bbcdc, 5); el = rotl(el, 10)\n  bl = fn4(bl, cl, dl, el, al, m[15], 0x8f1bbcdc, 6); dl = rotl(dl, 10)\n  al = fn4(al, bl, cl, dl, el, m[14], 0x8f1bbcdc, 8); cl = rotl(cl, 10)\n  el = fn4(el, al, bl, cl, dl, m[5], 0x8f1bbcdc, 6); bl = rotl(bl, 10)\n  dl = fn4(dl, el, al, bl, cl, m[6], 0x8f1bbcdc, 5); al = rotl(al, 10)\n  cl = fn4(cl, dl, el, al, bl, m[2], 0x8f1bbcdc, 12); el = rotl(el, 10)\n\n  // Mj = 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n  // K = 0xa953fd4e\n  // Sj = 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n  bl = fn5(bl, cl, dl, el, al, m[4], 0xa953fd4e, 9); dl = rotl(dl, 10)\n  al = fn5(al, bl, cl, dl, el, m[0], 0xa953fd4e, 15); cl = rotl(cl, 10)\n  el = fn5(el, al, bl, cl, dl, m[5], 0xa953fd4e, 5); bl = rotl(bl, 10)\n  dl = fn5(dl, el, al, bl, cl, m[9], 0xa953fd4e, 11); al = rotl(al, 10)\n  cl = fn5(cl, dl, el, al, bl, m[7], 0xa953fd4e, 6); el = rotl(el, 10)\n  bl = fn5(bl, cl, dl, el, al, m[12], 0xa953fd4e, 8); dl = rotl(dl, 10)\n  al = fn5(al, bl, cl, dl, el, m[2], 0xa953fd4e, 13); cl = rotl(cl, 10)\n  el = fn5(el, al, bl, cl, dl, m[10], 0xa953fd4e, 12); bl = rotl(bl, 10)\n  dl = fn5(dl, el, al, bl, cl, m[14], 0xa953fd4e, 5); al = rotl(al, 10)\n  cl = fn5(cl, dl, el, al, bl, m[1], 0xa953fd4e, 12); el = rotl(el, 10)\n  bl = fn5(bl, cl, dl, el, al, m[3], 0xa953fd4e, 13); dl = rotl(dl, 10)\n  al = fn5(al, bl, cl, dl, el, m[8], 0xa953fd4e, 14); cl = rotl(cl, 10)\n  el = fn5(el, al, bl, cl, dl, m[11], 0xa953fd4e, 11); bl = rotl(bl, 10)\n  dl = fn5(dl, el, al, bl, cl, m[6], 0xa953fd4e, 8); al = rotl(al, 10)\n  cl = fn5(cl, dl, el, al, bl, m[15], 0xa953fd4e, 5); el = rotl(el, 10)\n  bl = fn5(bl, cl, dl, el, al, m[13], 0xa953fd4e, 6); dl = rotl(dl, 10)\n\n  var ar = this._a\n  var br = this._b\n  var cr = this._c\n  var dr = this._d\n  var er = this._e\n\n  // M'j = 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12\n  // K' = 0x50a28be6\n  // S'j = 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6\n  ar = fn5(ar, br, cr, dr, er, m[5], 0x50a28be6, 8); cr = rotl(cr, 10)\n  er = fn5(er, ar, br, cr, dr, m[14], 0x50a28be6, 9); br = rotl(br, 10)\n  dr = fn5(dr, er, ar, br, cr, m[7], 0x50a28be6, 9); ar = rotl(ar, 10)\n  cr = fn5(cr, dr, er, ar, br, m[0], 0x50a28be6, 11); er = rotl(er, 10)\n  br = fn5(br, cr, dr, er, ar, m[9], 0x50a28be6, 13); dr = rotl(dr, 10)\n  ar = fn5(ar, br, cr, dr, er, m[2], 0x50a28be6, 15); cr = rotl(cr, 10)\n  er = fn5(er, ar, br, cr, dr, m[11], 0x50a28be6, 15); br = rotl(br, 10)\n  dr = fn5(dr, er, ar, br, cr, m[4], 0x50a28be6, 5); ar = rotl(ar, 10)\n  cr = fn5(cr, dr, er, ar, br, m[13], 0x50a28be6, 7); er = rotl(er, 10)\n  br = fn5(br, cr, dr, er, ar, m[6], 0x50a28be6, 7); dr = rotl(dr, 10)\n  ar = fn5(ar, br, cr, dr, er, m[15], 0x50a28be6, 8); cr = rotl(cr, 10)\n  er = fn5(er, ar, br, cr, dr, m[8], 0x50a28be6, 11); br = rotl(br, 10)\n  dr = fn5(dr, er, ar, br, cr, m[1], 0x50a28be6, 14); ar = rotl(ar, 10)\n  cr = fn5(cr, dr, er, ar, br, m[10], 0x50a28be6, 14); er = rotl(er, 10)\n  br = fn5(br, cr, dr, er, ar, m[3], 0x50a28be6, 12); dr = rotl(dr, 10)\n  ar = fn5(ar, br, cr, dr, er, m[12], 0x50a28be6, 6); cr = rotl(cr, 10)\n\n  // M'j = 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2\n  // K' = 0x5c4dd124\n  // S'j = 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11\n  er = fn4(er, ar, br, cr, dr, m[6], 0x5c4dd124, 9); br = rotl(br, 10)\n  dr = fn4(dr, er, ar, br, cr, m[11], 0x5c4dd124, 13); ar = rotl(ar, 10)\n  cr = fn4(cr, dr, er, ar, br, m[3], 0x5c4dd124, 15); er = rotl(er, 10)\n  br = fn4(br, cr, dr, er, ar, m[7], 0x5c4dd124, 7); dr = rotl(dr, 10)\n  ar = fn4(ar, br, cr, dr, er, m[0], 0x5c4dd124, 12); cr = rotl(cr, 10)\n  er = fn4(er, ar, br, cr, dr, m[13], 0x5c4dd124, 8); br = rotl(br, 10)\n  dr = fn4(dr, er, ar, br, cr, m[5], 0x5c4dd124, 9); ar = rotl(ar, 10)\n  cr = fn4(cr, dr, er, ar, br, m[10], 0x5c4dd124, 11); er = rotl(er, 10)\n  br = fn4(br, cr, dr, er, ar, m[14], 0x5c4dd124, 7); dr = rotl(dr, 10)\n  ar = fn4(ar, br, cr, dr, er, m[15], 0x5c4dd124, 7); cr = rotl(cr, 10)\n  er = fn4(er, ar, br, cr, dr, m[8], 0x5c4dd124, 12); br = rotl(br, 10)\n  dr = fn4(dr, er, ar, br, cr, m[12], 0x5c4dd124, 7); ar = rotl(ar, 10)\n  cr = fn4(cr, dr, er, ar, br, m[4], 0x5c4dd124, 6); er = rotl(er, 10)\n  br = fn4(br, cr, dr, er, ar, m[9], 0x5c4dd124, 15); dr = rotl(dr, 10)\n  ar = fn4(ar, br, cr, dr, er, m[1], 0x5c4dd124, 13); cr = rotl(cr, 10)\n  er = fn4(er, ar, br, cr, dr, m[2], 0x5c4dd124, 11); br = rotl(br, 10)\n\n  // M'j = 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13\n  // K' = 0x6d703ef3\n  // S'j = 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5\n  dr = fn3(dr, er, ar, br, cr, m[15], 0x6d703ef3, 9); ar = rotl(ar, 10)\n  cr = fn3(cr, dr, er, ar, br, m[5], 0x6d703ef3, 7); er = rotl(er, 10)\n  br = fn3(br, cr, dr, er, ar, m[1], 0x6d703ef3, 15); dr = rotl(dr, 10)\n  ar = fn3(ar, br, cr, dr, er, m[3], 0x6d703ef3, 11); cr = rotl(cr, 10)\n  er = fn3(er, ar, br, cr, dr, m[7], 0x6d703ef3, 8); br = rotl(br, 10)\n  dr = fn3(dr, er, ar, br, cr, m[14], 0x6d703ef3, 6); ar = rotl(ar, 10)\n  cr = fn3(cr, dr, er, ar, br, m[6], 0x6d703ef3, 6); er = rotl(er, 10)\n  br = fn3(br, cr, dr, er, ar, m[9], 0x6d703ef3, 14); dr = rotl(dr, 10)\n  ar = fn3(ar, br, cr, dr, er, m[11], 0x6d703ef3, 12); cr = rotl(cr, 10)\n  er = fn3(er, ar, br, cr, dr, m[8], 0x6d703ef3, 13); br = rotl(br, 10)\n  dr = fn3(dr, er, ar, br, cr, m[12], 0x6d703ef3, 5); ar = rotl(ar, 10)\n  cr = fn3(cr, dr, er, ar, br, m[2], 0x6d703ef3, 14); er = rotl(er, 10)\n  br = fn3(br, cr, dr, er, ar, m[10], 0x6d703ef3, 13); dr = rotl(dr, 10)\n  ar = fn3(ar, br, cr, dr, er, m[0], 0x6d703ef3, 13); cr = rotl(cr, 10)\n  er = fn3(er, ar, br, cr, dr, m[4], 0x6d703ef3, 7); br = rotl(br, 10)\n  dr = fn3(dr, er, ar, br, cr, m[13], 0x6d703ef3, 5); ar = rotl(ar, 10)\n\n  // M'j = 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14\n  // K' = 0x7a6d76e9\n  // S'j = 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8\n  cr = fn2(cr, dr, er, ar, br, m[8], 0x7a6d76e9, 15); er = rotl(er, 10)\n  br = fn2(br, cr, dr, er, ar, m[6], 0x7a6d76e9, 5); dr = rotl(dr, 10)\n  ar = fn2(ar, br, cr, dr, er, m[4], 0x7a6d76e9, 8); cr = rotl(cr, 10)\n  er = fn2(er, ar, br, cr, dr, m[1], 0x7a6d76e9, 11); br = rotl(br, 10)\n  dr = fn2(dr, er, ar, br, cr, m[3], 0x7a6d76e9, 14); ar = rotl(ar, 10)\n  cr = fn2(cr, dr, er, ar, br, m[11], 0x7a6d76e9, 14); er = rotl(er, 10)\n  br = fn2(br, cr, dr, er, ar, m[15], 0x7a6d76e9, 6); dr = rotl(dr, 10)\n  ar = fn2(ar, br, cr, dr, er, m[0], 0x7a6d76e9, 14); cr = rotl(cr, 10)\n  er = fn2(er, ar, br, cr, dr, m[5], 0x7a6d76e9, 6); br = rotl(br, 10)\n  dr = fn2(dr, er, ar, br, cr, m[12], 0x7a6d76e9, 9); ar = rotl(ar, 10)\n  cr = fn2(cr, dr, er, ar, br, m[2], 0x7a6d76e9, 12); er = rotl(er, 10)\n  br = fn2(br, cr, dr, er, ar, m[13], 0x7a6d76e9, 9); dr = rotl(dr, 10)\n  ar = fn2(ar, br, cr, dr, er, m[9], 0x7a6d76e9, 12); cr = rotl(cr, 10)\n  er = fn2(er, ar, br, cr, dr, m[7], 0x7a6d76e9, 5); br = rotl(br, 10)\n  dr = fn2(dr, er, ar, br, cr, m[10], 0x7a6d76e9, 15); ar = rotl(ar, 10)\n  cr = fn2(cr, dr, er, ar, br, m[14], 0x7a6d76e9, 8); er = rotl(er, 10)\n\n  // M'j = 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n  // K' = 0x00000000\n  // S'j = 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n  br = fn1(br, cr, dr, er, ar, m[12], 0x00000000, 8); dr = rotl(dr, 10)\n  ar = fn1(ar, br, cr, dr, er, m[15], 0x00000000, 5); cr = rotl(cr, 10)\n  er = fn1(er, ar, br, cr, dr, m[10], 0x00000000, 12); br = rotl(br, 10)\n  dr = fn1(dr, er, ar, br, cr, m[4], 0x00000000, 9); ar = rotl(ar, 10)\n  cr = fn1(cr, dr, er, ar, br, m[1], 0x00000000, 12); er = rotl(er, 10)\n  br = fn1(br, cr, dr, er, ar, m[5], 0x00000000, 5); dr = rotl(dr, 10)\n  ar = fn1(ar, br, cr, dr, er, m[8], 0x00000000, 14); cr = rotl(cr, 10)\n  er = fn1(er, ar, br, cr, dr, m[7], 0x00000000, 6); br = rotl(br, 10)\n  dr = fn1(dr, er, ar, br, cr, m[6], 0x00000000, 8); ar = rotl(ar, 10)\n  cr = fn1(cr, dr, er, ar, br, m[2], 0x00000000, 13); er = rotl(er, 10)\n  br = fn1(br, cr, dr, er, ar, m[13], 0x00000000, 6); dr = rotl(dr, 10)\n  ar = fn1(ar, br, cr, dr, er, m[14], 0x00000000, 5); cr = rotl(cr, 10)\n  er = fn1(er, ar, br, cr, dr, m[0], 0x00000000, 15); br = rotl(br, 10)\n  dr = fn1(dr, er, ar, br, cr, m[3], 0x00000000, 13); ar = rotl(ar, 10)\n  cr = fn1(cr, dr, er, ar, br, m[9], 0x00000000, 11); er = rotl(er, 10)\n  br = fn1(br, cr, dr, er, ar, m[11], 0x00000000, 11); dr = rotl(dr, 10)\n\n  // change state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar toBuffer = require('to-buffer');\n\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = useUint8Array && typeof ArrayBuffer !== 'undefined';\nvar isView = useArrayBuffer && ArrayBuffer.isView;\n\nmodule.exports = function (thing, encoding, name) {\n\tif (\n\t\ttypeof thing === 'string'\n\t\t|| Buffer.isBuffer(thing)\n\t\t|| (useUint8Array && thing instanceof Uint8Array)\n\t\t|| (isView && isView(thing))\n\t) {\n\t\treturn toBuffer(thing, encoding);\n\t}\n\tthrow new TypeError(name + ' must be a string, a Buffer, a Uint8Array, or a DataView');\n};\n","'use strict';\n\nvar md5 = require('create-hash/md5');\nvar RIPEMD160 = require('ripemd160');\nvar sha = require('sha.js');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar checkParameters = require('./precondition');\nvar defaultEncoding = require('./default-encoding');\nvar toBuffer = require('./to-buffer');\n\nvar ZEROS = Buffer.alloc(128);\nvar sizes = {\n\t__proto__: null,\n\tmd5: 16,\n\tsha1: 20,\n\tsha224: 28,\n\tsha256: 32,\n\tsha384: 48,\n\tsha512: 64,\n\t'sha512-256': 32,\n\tripemd160: 20,\n\trmd160: 20\n};\n\nvar mapping = {\n\t__proto__: null,\n\t'sha-1': 'sha1',\n\t'sha-224': 'sha224',\n\t'sha-256': 'sha256',\n\t'sha-384': 'sha384',\n\t'sha-512': 'sha512',\n\t'ripemd-160': 'ripemd160'\n};\n\nfunction rmd160Func(data) {\n\treturn new RIPEMD160().update(data).digest();\n}\n\nfunction getDigest(alg) {\n\tfunction shaFunc(data) {\n\t\treturn sha(alg).update(data).digest();\n\t}\n\n\tif (alg === 'rmd160' || alg === 'ripemd160') {\n\t\treturn rmd160Func;\n\t}\n\tif (alg === 'md5') {\n\t\treturn md5;\n\t}\n\treturn shaFunc;\n}\n\nfunction Hmac(alg, key, saltLen) {\n\tvar hash = getDigest(alg);\n\tvar blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n\n\tif (key.length > blocksize) {\n\t\tkey = hash(key);\n\t} else if (key.length < blocksize) {\n\t\tkey = Buffer.concat([key, ZEROS], blocksize);\n\t}\n\n\tvar ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n\tvar opad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n\tfor (var i = 0; i < blocksize; i++) {\n\t\tipad[i] = key[i] ^ 0x36;\n\t\topad[i] = key[i] ^ 0x5C;\n\t}\n\n\tvar ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);\n\tipad.copy(ipad1, 0, 0, blocksize);\n\tthis.ipad1 = ipad1;\n\tthis.ipad2 = ipad;\n\tthis.opad = opad;\n\tthis.alg = alg;\n\tthis.blocksize = blocksize;\n\tthis.hash = hash;\n\tthis.size = sizes[alg];\n}\n\nHmac.prototype.run = function (data, ipad) {\n\tdata.copy(ipad, this.blocksize);\n\tvar h = this.hash(ipad);\n\th.copy(this.opad, this.blocksize);\n\treturn this.hash(this.opad);\n};\n\nfunction pbkdf2(password, salt, iterations, keylen, digest) {\n\tcheckParameters(iterations, keylen);\n\tpassword = toBuffer(password, defaultEncoding, 'Password');\n\tsalt = toBuffer(salt, defaultEncoding, 'Salt');\n\n\tvar lowerDigest = (digest || 'sha1').toLowerCase();\n\tvar mappedDigest = mapping[lowerDigest] || lowerDigest;\n\tvar size = sizes[mappedDigest];\n\tif (typeof size !== 'number' || !size) {\n\t\tthrow new TypeError('Digest algorithm not supported: ' + digest);\n\t}\n\n\tvar hmac = new Hmac(mappedDigest, password, salt.length);\n\n\tvar DK = Buffer.allocUnsafe(keylen);\n\tvar block1 = Buffer.allocUnsafe(salt.length + 4);\n\tsalt.copy(block1, 0, 0, salt.length);\n\n\tvar destPos = 0;\n\tvar hLen = size;\n\tvar l = Math.ceil(keylen / hLen);\n\n\tfor (var i = 1; i <= l; i++) {\n\t\tblock1.writeUInt32BE(i, salt.length);\n\n\t\tvar T = hmac.run(block1, hmac.ipad1);\n\t\tvar U = T;\n\n\t\tfor (var j = 1; j < iterations; j++) {\n\t\t\tU = hmac.run(U, hmac.ipad2);\n\t\t\tfor (var k = 0; k < hLen; k++) {\n\t\t\t\tT[k] ^= U[k];\n\t\t\t}\n\t\t}\n\n\t\tT.copy(DK, destPos);\n\t\tdestPos += hLen;\n\t}\n\n\treturn DK;\n}\n\nmodule.exports = pbkdf2;\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar checkParameters = require('./precondition');\nvar defaultEncoding = require('./default-encoding');\nvar sync = require('./sync');\nvar toBuffer = require('./to-buffer');\n\nvar ZERO_BUF;\nvar subtle = global.crypto && global.crypto.subtle;\nvar toBrowser = {\n\tsha: 'SHA-1',\n\t'sha-1': 'SHA-1',\n\tsha1: 'SHA-1',\n\tsha256: 'SHA-256',\n\t'sha-256': 'SHA-256',\n\tsha384: 'SHA-384',\n\t'sha-384': 'SHA-384',\n\t'sha-512': 'SHA-512',\n\tsha512: 'SHA-512'\n};\nvar checks = [];\nvar nextTick;\nfunction getNextTick() {\n\tif (nextTick) {\n\t\treturn nextTick;\n\t}\n\tif (global.process && global.process.nextTick) {\n\t\tnextTick = global.process.nextTick;\n\t} else if (global.queueMicrotask) {\n\t\tnextTick = global.queueMicrotask;\n\t} else if (global.setImmediate) {\n\t\tnextTick = global.setImmediate;\n\t} else {\n\t\tnextTick = global.setTimeout;\n\t}\n\treturn nextTick;\n}\nfunction browserPbkdf2(password, salt, iterations, length, algo) {\n\treturn subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveBits']).then(function (key) {\n\t\treturn subtle.deriveBits({\n\t\t\tname: 'PBKDF2',\n\t\t\tsalt: salt,\n\t\t\titerations: iterations,\n\t\t\thash: {\n\t\t\t\tname: algo\n\t\t\t}\n\t\t}, key, length << 3);\n\t}).then(function (res) {\n\t\treturn Buffer.from(res);\n\t});\n}\nfunction checkNative(algo) {\n\tif (global.process && !global.process.browser) {\n\t\treturn Promise.resolve(false);\n\t}\n\tif (!subtle || !subtle.importKey || !subtle.deriveBits) {\n\t\treturn Promise.resolve(false);\n\t}\n\tif (checks[algo] !== undefined) {\n\t\treturn checks[algo];\n\t}\n\tZERO_BUF = ZERO_BUF || Buffer.alloc(8);\n\tvar prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n\t\t.then(\n\t\t\tfunction () { return true; },\n\t\t\tfunction () { return false; }\n\t\t);\n\tchecks[algo] = prom;\n\treturn prom;\n}\n\nfunction resolvePromise(promise, callback) {\n\tpromise.then(function (out) {\n\t\tgetNextTick()(function () {\n\t\t\tcallback(null, out);\n\t\t});\n\t}, function (e) {\n\t\tgetNextTick()(function () {\n\t\t\tcallback(e);\n\t\t});\n\t});\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n\tif (typeof digest === 'function') {\n\t\tcallback = digest;\n\t\tdigest = undefined;\n\t}\n\n\tdigest = digest || 'sha1';\n\tvar algo = toBrowser[digest.toLowerCase()];\n\n\tif (!algo || typeof global.Promise !== 'function') {\n\t\tgetNextTick()(function () {\n\t\t\tvar out;\n\t\t\ttry {\n\t\t\t\tout = sync(password, salt, iterations, keylen, digest);\n\t\t\t} catch (e) {\n\t\t\t\tcallback(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallback(null, out);\n\t\t});\n\t\treturn;\n\t}\n\n\tcheckParameters(iterations, keylen);\n\tpassword = toBuffer(password, defaultEncoding, 'Password');\n\tsalt = toBuffer(salt, defaultEncoding, 'Salt');\n\tif (typeof callback !== 'function') {\n\t\tthrow new Error('No callback provided to pbkdf2');\n\t}\n\n\tresolvePromise(checkNative(algo).then(function (resp) {\n\t\tif (resp) {\n\t\t\treturn browserPbkdf2(password, salt, iterations, keylen, algo);\n\t\t}\n\n\t\treturn sync(password, salt, iterations, keylen, digest);\n\t}), callback);\n};\n","'use strict';\n\nexports.pbkdf2 = require('./lib/async');\nexports.pbkdf2Sync = require('./lib/sync');\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n  this.padding = options.padding !== false\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar utils = require('./utils');\nvar Cipher = require('./cipher');\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  if (this.padding === false) {\n    return false;\n  }\n\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  if (this.padding === false) {\n    return buffer;\n  }\n\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","export default {}","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('buffer').Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        pna.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        pna.nextTick(emitErrorNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        pna.nextTick(emitErrorNT, _this, err);\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar BN = require('bn.js');\nvar randomBytes = require('randombytes');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction getr(priv) {\n\tvar len = priv.modulus.byteLength();\n\tvar r;\n\tdo {\n\t\tr = new BN(randomBytes(len));\n\t} while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));\n\treturn r;\n}\n\nfunction blind(priv) {\n\tvar r = getr(priv);\n\tvar blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();\n\treturn { blinder: blinder, unblinder: r.invm(priv.modulus) };\n}\n\nfunction crt(msg, priv) {\n\tvar blinds = blind(priv);\n\tvar len = priv.modulus.byteLength();\n\tvar blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);\n\tvar c1 = blinded.toRed(BN.mont(priv.prime1));\n\tvar c2 = blinded.toRed(BN.mont(priv.prime2));\n\tvar qinv = priv.coefficient;\n\tvar p = priv.prime1;\n\tvar q = priv.prime2;\n\tvar m1 = c1.redPow(priv.exponent1).fromRed();\n\tvar m2 = c2.redPow(priv.exponent2).fromRed();\n\tvar h = m1.isub(m2).imul(qinv).umod(p).imul(q);\n\treturn m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);\n}\ncrt.getr = getr;\n\nmodule.exports = crt;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',\n      'Expected message to be an array-like, a hex string, or a BN instance');\n    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer\n    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n  }\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Would fail further checks, but let's make the error message clear\n  assert(!msg.isNeg(), 'Can not sign a negative message');\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Recheck nonce to be bijective to msg\n  assert((new BN(nonce)).eq(msg), 'Can not sign message');\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar DecoderBuffer = require('../base').DecoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n","var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n","var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict';\n\nvar asn = require('asn1.js');\n\nvar Time = asn.define('Time', function () {\n\tthis.choice({\n\t\tutcTime: this.utctime(),\n\t\tgeneralTime: this.gentime()\n\t});\n});\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n\tthis.seq().obj(\n\t\tthis.key('type').objid(),\n\t\tthis.key('value').any()\n\t);\n});\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('parameters').optional(),\n\t\tthis.key('curve').objid().optional()\n\t);\n});\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n\tthis.setof(AttributeTypeValue);\n});\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n\tthis.seqof(RelativeDistinguishedName);\n});\n\nvar Name = asn.define('Name', function () {\n\tthis.choice({\n\t\trdnSequence: this.use(RDNSequence)\n\t});\n});\n\nvar Validity = asn.define('Validity', function () {\n\tthis.seq().obj(\n\t\tthis.key('notBefore').use(Time),\n\t\tthis.key('notAfter').use(Time)\n\t);\n});\n\nvar Extension = asn.define('Extension', function () {\n\tthis.seq().obj(\n\t\tthis.key('extnID').objid(),\n\t\tthis.key('critical').bool().def(false),\n\t\tthis.key('extnValue').octstr()\n\t);\n});\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('version').explicit(0)['int']().optional(),\n\t\tthis.key('serialNumber')['int'](),\n\t\tthis.key('signature').use(AlgorithmIdentifier),\n\t\tthis.key('issuer').use(Name),\n\t\tthis.key('validity').use(Validity),\n\t\tthis.key('subject').use(Name),\n\t\tthis.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n\t\tthis.key('issuerUniqueID').implicit(1).bitstr().optional(),\n\t\tthis.key('subjectUniqueID').implicit(2).bitstr().optional(),\n\t\tthis.key('extensions').explicit(3).seqof(Extension).optional()\n\t);\n});\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('tbsCertificate').use(TBSCertificate),\n\t\tthis.key('signatureAlgorithm').use(AlgorithmIdentifier),\n\t\tthis.key('signatureValue').bitstr()\n\t);\n});\n\nmodule.exports = X509Certificate;\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n'use strict';\n\nvar asn1 = require('asn1.js');\n\nexports.certificate = require('./certificate');\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int'](),\n\t\tthis.key('privateExponent')['int'](),\n\t\tthis.key('prime1')['int'](),\n\t\tthis.key('prime2')['int'](),\n\t\tthis.key('exponent1')['int'](),\n\t\tthis.key('exponent2')['int'](),\n\t\tthis.key('coefficient')['int']()\n\t);\n});\nexports.RSAPrivateKey = RSAPrivateKey;\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int']()\n\t);\n});\nexports.RSAPublicKey = RSAPublicKey;\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('none').null_().optional(),\n\t\tthis.key('curve').objid().optional(),\n\t\tthis.key('params').seq().obj(\n\t\t\tthis.key('p')['int'](),\n\t\t\tthis.key('q')['int'](),\n\t\t\tthis.key('g')['int']()\n\t\t).optional()\n\t);\n});\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\nexports.PublicKey = PublicKey;\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\nexports.PrivateKey = PrivateKeyInfo;\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').seq().obj(\n\t\t\tthis.key('id').objid(),\n\t\t\tthis.key('decrypt').seq().obj(\n\t\t\t\tthis.key('kde').seq().obj(\n\t\t\t\t\tthis.key('id').objid(),\n\t\t\t\t\tthis.key('kdeparams').seq().obj(\n\t\t\t\t\t\tthis.key('salt').octstr(),\n\t\t\t\t\t\tthis.key('iters')['int']()\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tthis.key('cipher').seq().obj(\n\t\t\t\t\tthis.key('algo').objid(),\n\t\t\t\t\tthis.key('iv').octstr()\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('p')['int'](),\n\t\tthis.key('q')['int'](),\n\t\tthis.key('g')['int'](),\n\t\tthis.key('pub_key')['int'](),\n\t\tthis.key('priv_key')['int']()\n\t);\n});\nexports.DSAPrivateKey = DSAPrivateKey;\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n\tthis['int']();\n});\n\nvar ECParameters = asn1.define('ECParameters', function () {\n\tthis.choice({\n\t\tnamedCurve: this.objid()\n\t});\n});\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('privateKey').octstr(),\n\t\tthis.key('parameters').optional().explicit(0).use(ECParameters),\n\t\tthis.key('publicKey').optional().explicit(1).bitstr()\n\t);\n});\nexports.ECPrivateKey = ECPrivateKey;\n\nexports.signature = asn1.define('signature', function () {\n\tthis.seq().obj(\n\t\tthis.key('r')['int'](),\n\t\tthis.key('s')['int']()\n\t);\n});\n","'use strict';\n\n// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m;\nvar evp = require('evp_bytestokey');\nvar ciphers = require('browserify-aes');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = function (okey, password) {\n\tvar key = okey.toString();\n\tvar match = key.match(findProc);\n\tvar decrypted;\n\tif (!match) {\n\t\tvar match2 = key.match(fullRegex);\n\t\tdecrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n\t} else {\n\t\tvar suite = 'aes' + match[1];\n\t\tvar iv = Buffer.from(match[2], 'hex');\n\t\tvar cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n\t\tvar cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n\t\tvar out = [];\n\t\tvar cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n\t\tout.push(cipher.update(cipherText));\n\t\tout.push(cipher['final']());\n\t\tdecrypted = Buffer.concat(out);\n\t}\n\tvar tag = key.match(startRegex)[1];\n\treturn {\n\t\ttag: tag,\n\t\tdata: decrypted\n\t};\n};\n","'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction decrypt(data, password) {\n\tvar salt = data.algorithm.decrypt.kde.kdeparams.salt;\n\tvar iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n\tvar algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n\tvar iv = data.algorithm.decrypt.cipher.iv;\n\tvar cipherText = data.subjectPrivateKey;\n\tvar keylen = parseInt(algo.split('-')[1], 10) / 8;\n\tvar key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n\tvar cipher = ciphers.createDecipheriv(algo, key, iv);\n\tvar out = [];\n\tout.push(cipher.update(cipherText));\n\tout.push(cipher['final']());\n\treturn Buffer.concat(out);\n}\n\nfunction parseKeys(buffer) {\n\tvar password;\n\tif (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n\t\tpassword = buffer.passphrase;\n\t\tbuffer = buffer.key;\n\t}\n\tif (typeof buffer === 'string') {\n\t\tbuffer = Buffer.from(buffer);\n\t}\n\n\tvar stripped = fixProc(buffer, password);\n\n\tvar type = stripped.tag;\n\tvar data = stripped.data;\n\tvar subtype, ndata;\n\tswitch (type) {\n\t\tcase 'CERTIFICATE':\n\t\t\tndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n\t\t\t// falls through\n\t\tcase 'PUBLIC KEY':\n\t\t\tif (!ndata) {\n\t\t\t\tndata = asn1.PublicKey.decode(data, 'der');\n\t\t\t}\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\tndata.subjectPrivateKey = ndata.subjectPublicKey;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'ec',\n\t\t\t\t\t\tdata: ndata\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tdata: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'ENCRYPTED PRIVATE KEY':\n\t\t\tdata = asn1.EncryptedPrivateKey.decode(data, 'der');\n\t\t\tdata = decrypt(data, password);\n\t\t\t// falls through\n\t\tcase 'PRIVATE KEY':\n\t\t\tndata = asn1.PrivateKey.decode(data, 'der');\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcurve: ndata.algorithm.curve,\n\t\t\t\t\t\tprivateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tparams: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'RSA PUBLIC KEY':\n\t\t\treturn asn1.RSAPublicKey.decode(data, 'der');\n\t\tcase 'RSA PRIVATE KEY':\n\t\t\treturn asn1.RSAPrivateKey.decode(data, 'der');\n\t\tcase 'DSA PRIVATE KEY':\n\t\t\treturn {\n\t\t\t\ttype: 'dsa',\n\t\t\t\tparams: asn1.DSAPrivateKey.decode(data, 'der')\n\t\t\t};\n\t\tcase 'EC PRIVATE KEY':\n\t\t\tdata = asn1.ECPrivateKey.decode(data, 'der');\n\t\t\treturn {\n\t\t\t\tcurve: data.parameters.value,\n\t\t\t\tprivateKey: data.privateKey\n\t\t\t};\n\t\tdefault: throw new Error('unknown key type ' + type);\n\t}\n}\nparseKeys.signature = asn1.signature;\n\nmodule.exports = parseKeys;\n","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar createHmac = require('create-hmac');\nvar crt = require('browserify-rsa');\nvar EC = require('elliptic').ec;\nvar BN = require('bn.js');\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nvar RSA_PKCS1_PADDING = 1;\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong private key type'); }\n    return dsaSign(hash, priv, hashType);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) { throw new Error('illegal or unsupported padding mode'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n  while (hash.length + pad.length + 1 < len) { pad.push(0xff); }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) { pad.push(hash[i]); }\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + priv.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n\n  return Buffer.from(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) { r = [0].concat(r); }\n  if (s[0] & 0x80) { s = [0].concat(s); }\n\n  var total = r.length + s.length + 4;\n  var res = [\n    0x30, total, 0x02, r.length\n  ];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return { k: k, v: v };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) { bits.ishrn(shift); }\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = Buffer.alloc(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;\n","'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nfunction verify(sig, hash, key, signType, tag) {\n  var pub = parseKeys(key);\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n    return ecVerify(sig, hash, pub);\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong public key type'); }\n    return dsaVerify(sig, hash, pub);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong public key type'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = pub.modulus.byteLength();\n  var pad = [1];\n  var padNum = 0;\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff);\n    padNum += 1;\n  }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n  pad = Buffer.from(pad);\n  var red = BN.mont(pub.modulus);\n  sig = new BN(sig).toRed(red);\n\n  sig = sig.redPow(new BN(pub.publicExponent));\n  sig = Buffer.from(sig.fromRed().toArray());\n  var out = padNum < 8 ? 1 : 0;\n  len = Math.min(sig.length, pad.length);\n  if (sig.length !== pad.length) { out = 1; }\n\n  i = -1;\n  while (++i < len) { out |= sig[i] ^ pad[i]; }\n  return out === 0;\n}\n\nfunction ecVerify(sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var pubkey = pub.data.subjectPrivateKey.data;\n\n  return curve.verify(hash, sig, pubkey);\n}\n\nfunction dsaVerify(sig, hash, pub) {\n  var p = pub.data.p;\n  var q = pub.data.q;\n  var g = pub.data.g;\n  var y = pub.data.pub_key;\n  var unpacked = parseKeys.signature.decode(sig, 'der');\n  var s = unpacked.s;\n  var r = unpacked.r;\n  checkValue(s, q);\n  checkValue(r, q);\n  var montp = BN.mont(p);\n  var w = s.invm(q);\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q);\n  return v.cmp(r) === 0;\n}\n\nfunction checkValue(b, q) {\n  if (b.cmpn(0) <= 0) { throw new Error('invalid sig'); }\n  if (b.cmp(q) >= 0) { throw new Error('invalid sig'); }\n}\n\nmodule.exports = verify;\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar createHash = require('create-hash');\nvar stream = require('readable-stream');\nvar inherits = require('inherits');\nvar sign = require('./sign');\nvar verify = require('./verify');\n\nvar algorithms = require('./algorithms.json');\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n  var hash = this._hash.digest();\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;\n\n  this.end();\n  var hash = this._hash.digest();\n  return verify(sigBuffer, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","'use strict';\n\n// eslint-disable-next-line no-multi-assign\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes');\n\n// eslint-disable-next-line no-multi-assign\nexports.createHash = exports.Hash = require('create-hash');\n\n// eslint-disable-next-line no-multi-assign\nexports.createHmac = exports.Hmac = require('create-hmac');\n\nvar algos = require('browserify-sign/algos');\nvar algoKeys = Object.keys(algos);\nvar hashes = [\n\t'sha1',\n\t'sha224',\n\t'sha256',\n\t'sha384',\n\t'sha512',\n\t'md5',\n\t'rmd160'\n].concat(algoKeys);\n\nexports.getHashes = function () {\n\treturn hashes;\n};\n\nvar p = require('pbkdf2');\nexports.pbkdf2 = p.pbkdf2;\nexports.pbkdf2Sync = p.pbkdf2Sync;\n\nvar aes = require('browserify-cipher');\n\nexports.Cipher = aes.Cipher;\nexports.createCipher = aes.createCipher;\nexports.Cipheriv = aes.Cipheriv;\nexports.createCipheriv = aes.createCipheriv;\nexports.Decipher = aes.Decipher;\nexports.createDecipher = aes.createDecipher;\nexports.Decipheriv = aes.Decipheriv;\nexports.createDecipheriv = aes.createDecipheriv;\nexports.getCiphers = aes.getCiphers;\nexports.listCiphers = aes.listCiphers;\n\nvar dh = require('diffie-hellman');\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup;\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;\nexports.getDiffieHellman = dh.getDiffieHellman;\nexports.createDiffieHellman = dh.createDiffieHellman;\nexports.DiffieHellman = dh.DiffieHellman;\n\nvar sign = require('browserify-sign');\n\nexports.createSign = sign.createSign;\nexports.Sign = sign.Sign;\nexports.createVerify = sign.createVerify;\nexports.Verify = sign.Verify;\n\nexports.createECDH = require('create-ecdh');\n\nvar publicEncrypt = require('public-encrypt');\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt;\nexports.privateEncrypt = publicEncrypt.privateEncrypt;\nexports.publicDecrypt = publicEncrypt.publicDecrypt;\nexports.privateDecrypt = publicEncrypt.privateDecrypt;\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// [\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error('sorry, ' + name + ' is not implemented yet\\nwe accept pull requests\\nhttps://github.com/browserify/crypto-browserify');\n//   };\n// });\n\nvar rf = require('randomfill');\n\nexports.randomFill = rf.randomFill;\nexports.randomFillSync = rf.randomFillSync;\n\nexports.createCredentials = function () {\n\tthrow new Error('sorry, createCredentials is not implemented yet\\nwe accept pull requests\\nhttps://github.com/browserify/crypto-browserify');\n};\n\nexports.constants = {\n\tDH_CHECK_P_NOT_SAFE_PRIME: 2,\n\tDH_CHECK_P_NOT_PRIME: 1,\n\tDH_UNABLE_TO_CHECK_GENERATOR: 4,\n\tDH_NOT_SUITABLE_GENERATOR: 8,\n\tNPN_ENABLED: 1,\n\tALPN_ENABLED: 1,\n\tRSA_PKCS1_PADDING: 1,\n\tRSA_SSLV23_PADDING: 2,\n\tRSA_NO_PADDING: 3,\n\tRSA_PKCS1_OAEP_PADDING: 4,\n\tRSA_X931_PADDING: 5,\n\tRSA_PKCS1_PSS_PADDING: 6,\n\tPOINT_CONVERSION_COMPRESSED: 2,\n\tPOINT_CONVERSION_UNCOMPRESSED: 4,\n\tPOINT_CONVERSION_HYBRID: 6\n};\n","// src/shims/crypto.ts\r\nimport * as c from 'crypto-browserify';\r\n\r\nexport const createHash  = c.createHash;\r\nexport const createHmac  = c.createHmac;\r\nexport const randomBytes = c.randomBytes;\r\nexport const pbkdf2      = c.pbkdf2;\r\nexport const pbkdf2Sync  = c.pbkdf2Sync;\r\n\r\nexport default { createHash, createHmac, randomBytes, pbkdf2, pbkdf2Sync };","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.inRange` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to check.\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n */\nfunction baseInRange(number, start, end) {\n  return number >= nativeMin(start, end) && number < nativeMax(start, end);\n}\n\nexport default baseInRange;\n","import baseInRange from './_baseInRange.js';\nimport toFinite from './toFinite.js';\nimport toNumber from './toNumber.js';\n\n/**\n * Checks if `n` is between `start` and up to, but not including, `end`. If\n * `end` is not specified, it's set to `start` with `start` then set to `0`.\n * If `start` is greater than `end` the params are swapped to support\n * negative ranges.\n *\n * @static\n * @memberOf _\n * @since 3.3.0\n * @category Number\n * @param {number} number The number to check.\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n * @see _.range, _.rangeRight\n * @example\n *\n * _.inRange(3, 2, 4);\n * // => true\n *\n * _.inRange(4, 8);\n * // => true\n *\n * _.inRange(4, 2);\n * // => false\n *\n * _.inRange(2, 2);\n * // => false\n *\n * _.inRange(1.2, 2);\n * // => true\n *\n * _.inRange(5.2, 4);\n * // => false\n *\n * _.inRange(-3, -2, -6);\n * // => true\n */\nfunction inRange(number, start, end) {\n  start = toFinite(start);\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  } else {\n    end = toFinite(end);\n  }\n  number = toNumber(number);\n  return baseInRange(number, start, end);\n}\n\nexport default inRange;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nexport default baseIsDate;\n","import baseIsDate from './_baseIsDate.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nexport default isDate;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n","import toInteger from './toInteger.js';\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\nexport default isInteger;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nexport default isNumber;\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nexport default isNull;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","import root from './_root.js';\nimport toString from './toString.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeParseInt = root.parseInt;\n\n/**\n * Converts `string` to an integer of the specified radix. If `radix` is\n * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n * hexadecimal, in which case a `radix` of `16` is used.\n *\n * **Note:** This method aligns with the\n * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category String\n * @param {string} string The string to convert.\n * @param {number} [radix=10] The radix to interpret `value` by.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.parseInt('08');\n * // => 8\n *\n * _.map(['6', '08', '10'], _.parseInt);\n * // => [6, 8, 10]\n */\nfunction parseInt(string, radix, guard) {\n  if (guard || radix == null) {\n    radix = 0;\n  } else if (radix) {\n    radix = +radix;\n  }\n  return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n}\n\nexport default parseInt;\n","//function add {\nfunction add(number1, number2) {\n    var _a;\n    if (number2 === void 0) { number2 = \"0\"; }\n    var neg = 0, ind = -1;\n    //check for negatives\n    if (number1[0] == \"-\") {\n        number1 = number1.substring(1);\n        if (!testZero(number1)) {\n            neg++;\n            ind = 1;\n            number1.length;\n        }\n    }\n    if (number2[0] == \"-\") {\n        number2 = number2.substring(1);\n        if (!testZero(number2)) {\n            neg++;\n            ind = 2;\n            number2.length;\n        }\n    }\n    number1 = trim(number1);\n    number2 = trim(number2);\n    _a = pad(trim(number1), trim(number2)), number1 = _a[0], number2 = _a[1];\n    if (neg == 1) {\n        if (ind === 1)\n            number1 = compliment(number1);\n        else if (ind === 2)\n            number2 = compliment(number2);\n    }\n    var res = addCore(number1, number2);\n    if (!neg)\n        return trim(res);\n    else if (neg == 2)\n        return \"-\" + trim(res);\n    else {\n        if (number1.length < res.length)\n            return trim(res.substring(1));\n        else\n            return \"-\" + trim(compliment(res));\n    }\n}\nfunction compliment(number) {\n    if (testZero(number)) {\n        return number;\n    }\n    var s = \"\", l = number.length, dec = number.split(\".\")[1], ld = dec ? dec.length : 0;\n    for (var i = 0; i < l; i++) {\n        if (number[i] >= \"0\" && number[i] <= \"9\")\n            s += 9 - parseInt(number[i]);\n        else\n            s += number[i];\n    }\n    var one = ld > 0 ? \"0.\" + new Array(ld).join(\"0\") + \"1\" : \"1\";\n    return addCore(s, one);\n}\nfunction trim(number) {\n    var parts = number.split(\".\");\n    if (!parts[0])\n        parts[0] = \"0\";\n    while (parts[0][0] == \"0\" && parts[0].length > 1)\n        parts[0] = parts[0].substring(1);\n    return parts[0] + (parts[1] ? \".\" + parts[1] : \"\");\n}\nfunction pad(number1, number2) {\n    var parts1 = number1.split(\".\"), parts2 = number2.split(\".\");\n    //pad integral part\n    var length1 = parts1[0].length, length2 = parts2[0].length;\n    if (length1 > length2) {\n        parts2[0] =\n            new Array(Math.abs(length1 - length2) + 1).join(\"0\") +\n                (parts2[0] ? parts2[0] : \"\");\n    }\n    else {\n        parts1[0] =\n            new Array(Math.abs(length1 - length2) + 1).join(\"0\") +\n                (parts1[0] ? parts1[0] : \"\");\n    }\n    //pad fractional part\n    (length1 = parts1[1] ? parts1[1].length : 0),\n        (length2 = parts2[1] ? parts2[1].length : 0);\n    if (length1 || length2) {\n        if (length1 > length2) {\n            parts2[1] =\n                (parts2[1] ? parts2[1] : \"\") +\n                    new Array(Math.abs(length1 - length2) + 1).join(\"0\");\n        }\n        else {\n            parts1[1] =\n                (parts1[1] ? parts1[1] : \"\") +\n                    new Array(Math.abs(length1 - length2) + 1).join(\"0\");\n        }\n    }\n    number1 = parts1[0] + (parts1[1] ? \".\" + parts1[1] : \"\");\n    number2 = parts2[0] + (parts2[1] ? \".\" + parts2[1] : \"\");\n    return [number1, number2];\n}\nfunction addCore(number1, number2) {\n    var _a;\n    _a = pad(number1, number2), number1 = _a[0], number2 = _a[1];\n    var sum = \"\", carry = 0;\n    for (var i = number1.length - 1; i >= 0; i--) {\n        if (number1[i] === \".\") {\n            sum = \".\" + sum;\n            continue;\n        }\n        var temp = parseInt(number1[i]) + parseInt(number2[i]) + carry;\n        sum = (temp % 10) + sum;\n        carry = Math.floor(temp / 10);\n    }\n    return carry ? carry.toString() + sum : sum;\n}\nfunction testZero(number) {\n    return /^0[0]*[.]{0,1}[0]*$/.test(number);\n}\n\nfunction abs(n) {\n    if (typeof n == \"number\" || typeof n == \"bigint\")\n        n = n.toString();\n    if (n[0] == \"-\")\n        return n.substring(1);\n    return n;\n}\n\nvar RoundingModes;\n(function (RoundingModes) {\n    /**\n     * Rounding mode to round towards positive infinity.\n     */\n    RoundingModes[RoundingModes[\"CEILING\"] = 0] = \"CEILING\";\n    /**\n     * Rounding mode to round towards zero.\n     */\n    RoundingModes[RoundingModes[\"DOWN\"] = 1] = \"DOWN\";\n    /**\n     * Rounding mode to round towards negative infinity.\n     */\n    RoundingModes[RoundingModes[\"FLOOR\"] = 2] = \"FLOOR\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round down.\n     */\n    RoundingModes[RoundingModes[\"HALF_DOWN\"] = 3] = \"HALF_DOWN\";\n    /**\n     * Rounding mode to round towards the \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case, round towards the even neighbor.\n     */\n    RoundingModes[RoundingModes[\"HALF_EVEN\"] = 4] = \"HALF_EVEN\";\n    /**\n     * Rounding mode to round towards \"nearest neighbor\" unless both neighbors are equidistant,\n     * in which case round up.\n     */\n    RoundingModes[RoundingModes[\"HALF_UP\"] = 5] = \"HALF_UP\";\n    /**\n     * Rounding mode to assert that the requested operation has an exact result, hence no rounding is necessary.\n     * UNIMPLEMENTED\n     */\n    RoundingModes[RoundingModes[\"UNNECESSARY\"] = 6] = \"UNNECESSARY\";\n    /**\n     * Rounding mode to round away from zero.\n     */\n    RoundingModes[RoundingModes[\"UP\"] = 7] = \"UP\";\n})(RoundingModes || (RoundingModes = {}));\n\n/**\n *\n * @param input the number to round\n * @param n precision\n * @param mode Rounding Mode\n */\nfunction roundOff(input, n, mode) {\n    if (n === void 0) { n = 0; }\n    if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n    if (mode === RoundingModes.UNNECESSARY) {\n        throw new Error(\"UNNECESSARY Rounding Mode has not yet been implemented\");\n    }\n    if (typeof (input) == 'number' || typeof (input) == 'bigint')\n        input = input.toString();\n    var neg = false;\n    if (input[0] === '-') {\n        neg = true;\n        input = input.substring(1);\n    }\n    var parts = input.split('.'), partInt = parts[0], partDec = parts[1];\n    //handle case of -ve n: roundOff(12564,-2)=12600\n    if (n < 0) {\n        n = -n;\n        if (partInt.length <= n)\n            return '0';\n        else {\n            var prefix = partInt.substr(0, partInt.length - n);\n            input = prefix + '.' + partInt.substr(partInt.length - n) + partDec;\n            prefix = roundOff(input, 0, mode);\n            return (neg ? '-' : '') + prefix + (new Array(n + 1).join('0'));\n        }\n    }\n    // handle case when integer output is desired\n    if (n == 0) {\n        partInt.length;\n        if (greaterThanFive(parts[1], partInt, neg, mode)) {\n            partInt = increment(partInt);\n        }\n        return (neg && parseInt(partInt) ? '-' : '') + partInt;\n    }\n    // handle case when n>0\n    if (!parts[1]) {\n        return (neg ? '-' : '') + partInt + '.' + (new Array(n + 1).join('0'));\n    }\n    else if (parts[1].length < n) {\n        return (neg ? '-' : '') + partInt + '.' + parts[1] + (new Array(n - parts[1].length + 1).join('0'));\n    }\n    partDec = parts[1].substring(0, n);\n    var rem = parts[1].substring(n);\n    if (rem && greaterThanFive(rem, partDec, neg, mode)) {\n        partDec = increment(partDec);\n        if (partDec.length > n) {\n            return (neg ? '-' : '') + increment(partInt, parseInt(partDec[0])) + '.' + partDec.substring(1);\n        }\n    }\n    return (neg && (parseInt(partInt) || parseInt(partDec)) ? '-' : '') + partInt + '.' + partDec;\n}\nfunction greaterThanFive(part, pre, neg, mode) {\n    if (!part || part === new Array(part.length + 1).join('0'))\n        return false;\n    // #region UP, DOWN, CEILING, FLOOR \n    if (mode === RoundingModes.DOWN || (!neg && mode === RoundingModes.FLOOR) ||\n        (neg && mode === RoundingModes.CEILING))\n        return false;\n    if (mode === RoundingModes.UP || (neg && mode === RoundingModes.FLOOR) ||\n        (!neg && mode === RoundingModes.CEILING))\n        return true;\n    // #endregion\n    // case when part !== five\n    var five = '5' + (new Array(part.length).join('0'));\n    if (part > five)\n        return true;\n    else if (part < five)\n        return false;\n    // case when part === five\n    switch (mode) {\n        case RoundingModes.HALF_DOWN: return false;\n        case RoundingModes.HALF_UP: return true;\n        case RoundingModes.HALF_EVEN:\n        default: return (parseInt(pre[pre.length - 1]) % 2 == 1);\n    }\n}\nfunction increment(part, c) {\n    if (c === void 0) { c = 0; }\n    if (!c)\n        c = 1;\n    if (typeof (part) == 'number')\n        part.toString();\n    var l = part.length - 1, s = '';\n    for (var i = l; i >= 0; i--) {\n        var x = parseInt(part[i]) + c;\n        if (x == 10) {\n            c = 1;\n            x = 0;\n        }\n        else {\n            c = 0;\n        }\n        s += x;\n    }\n    if (c)\n        s += c;\n    return s.split('').reverse().join('');\n}\n\n/*\n* Removes zero from front and back*/\nfunction stripTrailingZero(number) {\n    var isNegative = number[0] === '-';\n    if (isNegative) {\n        number = number.substr(1);\n    }\n    while (number[0] == '0') {\n        number = number.substr(1);\n    }\n    if (number.indexOf('.') != -1) {\n        while (number[number.length - 1] == '0') {\n            number = number.substr(0, number.length - 1);\n        }\n    }\n    if (number == \"\" || number == \".\") {\n        number = '0';\n    }\n    else if (number[number.length - 1] == '.') {\n        number = number.substr(0, number.length - 1);\n    }\n    if (number[0] == '.') {\n        number = '0' + number;\n    }\n    if (isNegative && number != '0') {\n        number = '-' + number;\n    }\n    return number;\n}\n\nfunction multiply(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    /*Filter numbers*/\n    var negative = 0;\n    if (number1[0] == '-') {\n        negative++;\n        number1 = number1.substr(1);\n    }\n    if (number2[0] == '-') {\n        negative++;\n        number2 = number2.substr(1);\n    }\n    number1 = stripTrailingZero(number1);\n    number2 = stripTrailingZero(number2);\n    var decimalLength1 = 0;\n    var decimalLength2 = 0;\n    if (number1.indexOf('.') != -1) {\n        decimalLength1 = number1.length - number1.indexOf('.') - 1;\n    }\n    if (number2.indexOf('.') != -1) {\n        decimalLength2 = number2.length - number2.indexOf('.') - 1;\n    }\n    var decimalLength = decimalLength1 + decimalLength2;\n    number1 = stripTrailingZero(number1.replace('.', ''));\n    number2 = stripTrailingZero(number2.replace('.', ''));\n    if (number1.length < number2.length) {\n        var temp = number1;\n        number1 = number2;\n        number2 = temp;\n    }\n    if (number2 == '0') {\n        return '0';\n    }\n    /*\n    * Core multiplication\n    */\n    var length = number2.length;\n    var carry = 0;\n    var positionVector = [];\n    var currentPosition = length - 1;\n    var result = \"\";\n    for (var i = 0; i < length; i++) {\n        positionVector[i] = number1.length - 1;\n    }\n    for (var i = 0; i < 2 * number1.length; i++) {\n        var sum = 0;\n        for (var j = number2.length - 1; j >= currentPosition && j >= 0; j--) {\n            if (positionVector[j] > -1 && positionVector[j] < number1.length) {\n                sum += parseInt(number1[positionVector[j]--]) * parseInt(number2[j]);\n            }\n        }\n        sum += carry;\n        carry = Math.floor(sum / 10);\n        result = sum % 10 + result;\n        currentPosition--;\n    }\n    /*\n    * Formatting result\n    */\n    result = stripTrailingZero(adjustDecimal(result, decimalLength));\n    if (negative == 1) {\n        result = '-' + result;\n    }\n    return result;\n}\n/*\n* Add decimal point\n*/\nfunction adjustDecimal(number, decimal) {\n    if (decimal == 0)\n        return number;\n    else {\n        number = (decimal >= number.length) ? ((new Array(decimal - number.length + 1)).join('0') + number) : number;\n        return number.substr(0, number.length - decimal) + '.' + number.substr(number.length - decimal, decimal);\n    }\n}\n\nfunction divide(dividend, divisor, precission, mode) {\n    if (precission === void 0) { precission = 8; }\n    if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    // remove trailing zeros in decimal ISSUE#18\n    dividend = dividend.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    divisor = divisor.replace(/(\\.\\d*?[1-9])0+$/g, \"$1\").replace(/\\.0+$/, \"\");\n    if (dividend == 0)\n        return '0';\n    var neg = 0;\n    if (divisor[0] == '-') {\n        divisor = divisor.substring(1);\n        neg++;\n    }\n    if (dividend[0] == '-') {\n        dividend = dividend.substring(1);\n        neg++;\n    }\n    var pt_dvsr = divisor.indexOf('.') > 0 ? divisor.length - divisor.indexOf('.') - 1 : -1;\n    divisor = trim(divisor.replace('.', ''));\n    if (pt_dvsr >= 0) {\n        var pt_dvnd = dividend.indexOf('.') > 0 ? dividend.length - dividend.indexOf('.') - 1 : -1;\n        if (pt_dvnd == -1) {\n            dividend = trim(dividend + (new Array(pt_dvsr + 1)).join('0'));\n        }\n        else {\n            if (pt_dvsr > pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                dividend = trim(dividend + (new Array(pt_dvsr - pt_dvnd + 1)).join('0'));\n            }\n            else if (pt_dvsr < pt_dvnd) {\n                dividend = dividend.replace('.', '');\n                var loc = dividend.length - pt_dvnd + pt_dvsr;\n                dividend = trim(dividend.substring(0, loc) + '.' + dividend.substring(loc));\n            }\n            else if (pt_dvsr == pt_dvnd) {\n                dividend = trim(dividend.replace('.', ''));\n            }\n        }\n    }\n    var prec = 0, dl = divisor.length, quotent = '';\n    var dvnd = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(0, dl + 1) : dividend.substring(0, dl);\n    dividend = (dividend.indexOf('.') > -1 && dividend.indexOf('.') < dl) ? dividend.substring(dl + 1) : dividend.substring(dl);\n    if (dvnd.indexOf('.') > -1) {\n        var shift = dvnd.length - dvnd.indexOf('.') - 1;\n        dvnd = dvnd.replace('.', '');\n        if (dl > dvnd.length) {\n            shift += dl - dvnd.length;\n            dvnd = dvnd + (new Array(dl - dvnd.length + 1)).join('0');\n        }\n        prec = shift;\n        quotent = '0.' + (new Array(shift)).join('0');\n    }\n    precission = precission + 2;\n    while (prec <= precission) {\n        var qt = 0;\n        while (parseInt(dvnd) >= parseInt(divisor)) {\n            dvnd = add(dvnd, '-' + divisor);\n            qt++;\n        }\n        quotent += qt;\n        if (!dividend) {\n            if (!prec)\n                quotent += '.';\n            prec++;\n            dvnd = dvnd + '0';\n        }\n        else {\n            if (dividend[0] == '.') {\n                quotent += '.';\n                prec++;\n                dividend = dividend.substring(1);\n            }\n            dvnd = dvnd + dividend.substring(0, 1);\n            dividend = dividend.substring(1);\n        }\n    }\n    return ((neg == 1) ? '-' : '') + trim(roundOff(quotent, precission - 2, mode));\n}\n\nfunction subtract(number1, number2) {\n    number1 = number1.toString();\n    number2 = number2.toString();\n    number2 = negate(number2);\n    return add(number1, number2);\n}\nfunction negate(number) {\n    if (number[0] == '-') {\n        number = number.substr(1);\n    }\n    else {\n        number = '-' + number;\n    }\n    return number;\n}\n\nfunction modulus(dividend, divisor) {\n    if (divisor == 0) {\n        throw new Error('Cannot divide by 0');\n    }\n    dividend = dividend.toString();\n    divisor = divisor.toString();\n    validate(dividend);\n    validate(divisor);\n    var sign = '';\n    if (dividend[0] == '-') {\n        sign = '-';\n        dividend = dividend.substr(1);\n    }\n    if (divisor[0] == '-') {\n        divisor = divisor.substr(1);\n    }\n    var result = subtract(dividend, multiply(divisor, roundOff(divide(dividend, divisor), 0, RoundingModes.FLOOR)));\n    return sign + result;\n}\nfunction validate(oparand) {\n    if (oparand.indexOf('.') != -1) {\n        throw new Error('Modulus of non-integers not supported');\n    }\n}\n\nfunction compareTo(number1, number2) {\n    var _a, _b;\n    var negative = false;\n    _a = [number1, number2].map(function (n) { return stripTrailingZero(n); }), number1 = _a[0], number2 = _a[1];\n    if (number1[0] == '-' && number2[0] != \"-\") {\n        return -1;\n    }\n    else if (number1[0] != '-' && number2[0] == '-') {\n        return 1;\n    }\n    else if (number1[0] == '-' && number2[0] == '-') {\n        number1 = number1.substr(1);\n        number2 = number2.substr(1);\n        negative = true;\n    }\n    _b = pad(number1, number2), number1 = _b[0], number2 = _b[1];\n    if (number1.localeCompare(number2) == 0) {\n        return 0;\n    }\n    for (var i = 0; i < number1.length; i++) {\n        if (number1[i] == number2[i]) {\n            continue;\n        }\n        else if (number1[i] > number2[i]) {\n            if (negative) {\n                return -1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            if (negative) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n    }\n    return 0;\n}\n\nvar bigDecimal = /** @class */ (function () {\n    function bigDecimal(number) {\n        if (number === void 0) { number = \"0\"; }\n        this.value = bigDecimal.validate(number);\n    }\n    bigDecimal.validate = function (number) {\n        if (number) {\n            number = number.toString();\n            if (isNaN(number))\n                throw Error(\"Parameter is not a number: \" + number);\n            if (number[0] == \"+\")\n                number = number.substring(1);\n        }\n        else\n            number = \"0\";\n        //handle missing leading zero\n        if (number.startsWith(\".\"))\n            number = \"0\" + number;\n        else if (number.startsWith(\"-.\"))\n            number = \"-0\" + number.substr(1);\n        //handle exponentiation\n        if (/e/i.test(number)) {\n            var _a = number.split(/[eE]/), mantisa = _a[0], exponent = _a[1];\n            mantisa = trim(mantisa);\n            var sign = \"\";\n            if (mantisa[0] == \"-\") {\n                sign = \"-\";\n                mantisa = mantisa.substring(1);\n            }\n            if (mantisa.indexOf(\".\") >= 0) {\n                exponent = parseInt(exponent) + mantisa.indexOf(\".\");\n                mantisa = mantisa.replace(\".\", \"\");\n            }\n            else {\n                exponent = parseInt(exponent) + mantisa.length;\n            }\n            if (mantisa.length < exponent) {\n                number =\n                    sign + mantisa + new Array(exponent - mantisa.length + 1).join(\"0\");\n            }\n            else if (mantisa.length >= exponent && exponent > 0) {\n                number =\n                    sign +\n                        trim(mantisa.substring(0, exponent)) +\n                        (mantisa.length > exponent ? \".\" + mantisa.substring(exponent) : \"\");\n            }\n            else {\n                number = sign + \"0.\" + new Array(-exponent + 1).join(\"0\") + mantisa;\n            }\n        }\n        return number;\n    };\n    bigDecimal.prototype.getValue = function () {\n        return this.value;\n    };\n    bigDecimal.prototype.setValue = function (num) {\n        this.value = bigDecimal.validate(num);\n    };\n    bigDecimal.getPrettyValue = function (number, digits, separator) {\n        if (digits === void 0) { digits = 3; }\n        if (separator === void 0) { separator = \",\"; }\n        // if (!(digits || separator)) {\n        //     digits = 3;\n        //     separator = ',';\n        // } else if (!(digits && separator)) {\n        //     throw Error('Illegal Arguments. Should pass both digits and separator or pass none');\n        // }\n        number = bigDecimal.validate(number);\n        var neg = number.charAt(0) == \"-\";\n        if (neg)\n            number = number.substring(1);\n        var len = number.indexOf(\".\");\n        len = len > 0 ? len : number.length;\n        var temp = \"\";\n        for (var i = len; i > 0;) {\n            if (i < digits) {\n                digits = i;\n                i = 0;\n            }\n            else\n                i -= digits;\n            temp =\n                number.substring(i, i + digits) +\n                    (i < len - digits && i >= 0 ? separator : \"\") +\n                    temp;\n        }\n        return (neg ? \"-\" : \"\") + temp + number.substring(len);\n    };\n    bigDecimal.prototype.getPrettyValue = function (digits, separator) {\n        if (digits === void 0) { digits = 3; }\n        if (separator === void 0) { separator = \",\"; }\n        return bigDecimal.getPrettyValue(this.value, digits, separator);\n    };\n    bigDecimal.round = function (number, precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n        number = bigDecimal.validate(number);\n        // console.log(number)\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return roundOff(number, precision, mode);\n    };\n    bigDecimal.prototype.round = function (precision, mode) {\n        if (precision === void 0) { precision = 0; }\n        if (mode === void 0) { mode = RoundingModes.HALF_EVEN; }\n        if (isNaN(precision))\n            throw Error(\"Precision is not a number: \" + precision);\n        return new bigDecimal(roundOff(this.value, precision, mode));\n    };\n    bigDecimal.abs = function (number) {\n        number = bigDecimal.validate(number);\n        return abs(number);\n    };\n    bigDecimal.prototype.abs = function () {\n        return new bigDecimal(abs(this.value));\n    };\n    bigDecimal.floor = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf(\".\") === -1)\n            return number;\n        return bigDecimal.round(number, 0, RoundingModes.FLOOR);\n    };\n    bigDecimal.prototype.floor = function () {\n        if (this.value.indexOf(\".\") === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, RoundingModes.FLOOR);\n    };\n    bigDecimal.ceil = function (number) {\n        number = bigDecimal.validate(number);\n        if (number.indexOf(\".\") === -1)\n            return number;\n        return bigDecimal.round(number, 0, RoundingModes.CEILING);\n    };\n    bigDecimal.prototype.ceil = function () {\n        if (this.value.indexOf(\".\") === -1)\n            return new bigDecimal(this.value);\n        return new bigDecimal(this.value).round(0, RoundingModes.CEILING);\n    };\n    bigDecimal.add = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return add(number1, number2);\n    };\n    bigDecimal.prototype.add = function (number) {\n        return new bigDecimal(add(this.value, number.getValue()));\n    };\n    bigDecimal.subtract = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return subtract(number1, number2);\n    };\n    bigDecimal.prototype.subtract = function (number) {\n        return new bigDecimal(subtract(this.value, number.getValue()));\n    };\n    bigDecimal.multiply = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return multiply(number1, number2);\n    };\n    bigDecimal.prototype.multiply = function (number) {\n        return new bigDecimal(multiply(this.value, number.getValue()));\n    };\n    bigDecimal.divide = function (number1, number2, precision, mode) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return divide(number1, number2, precision, mode);\n    };\n    bigDecimal.prototype.divide = function (number, precision, mode) {\n        return new bigDecimal(divide(this.value, number.getValue(), precision, mode));\n    };\n    bigDecimal.modulus = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return modulus(number1, number2);\n    };\n    bigDecimal.prototype.modulus = function (number) {\n        return new bigDecimal(modulus(this.value, number.getValue()));\n    };\n    bigDecimal.compareTo = function (number1, number2) {\n        number1 = bigDecimal.validate(number1);\n        number2 = bigDecimal.validate(number2);\n        return compareTo(number1, number2);\n    };\n    bigDecimal.prototype.compareTo = function (number) {\n        return compareTo(this.value, number.getValue());\n    };\n    bigDecimal.negate = function (number) {\n        number = bigDecimal.validate(number);\n        return negate(number);\n    };\n    bigDecimal.prototype.negate = function () {\n        return new bigDecimal(negate(this.value));\n    };\n    bigDecimal.stripTrailingZero = function (number) {\n        number = bigDecimal.validate(number);\n        return stripTrailingZero(number);\n    };\n    bigDecimal.prototype.stripTrailingZero = function () {\n        return new bigDecimal(stripTrailingZero(this.value));\n    };\n    bigDecimal.RoundingModes = RoundingModes;\n    return bigDecimal;\n}());\n\nexport { bigDecimal, bigDecimal as default };\n//# sourceMappingURL=big-decimal.js.map\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  const BASE_MAP = new Uint8Array(256)\n  for (let j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    // eslint-disable-next-line no-empty\n    if (source instanceof Uint8Array) { } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n    // Skip leading zeroes in base58 result.\n    let it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    let psz = 0\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n    // Process the characters.\n    while (psz < source.length) {\n      // Find code of next character\n      const charCode = source.charCodeAt(psz)\n      // Base map can not be indexed using char code\n      if (charCode > 255) { return }\n      // Decode character\n      let carry = BASE_MAP[charCode]\n      // Invalid character\n      if (carry === 255) { return }\n      let i = 0\n      for (let it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n    // Skip leading zeroes in b256.\n    let it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    const vch = new Uint8Array(zeroes + (size - it4))\n    let j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode,\n    decodeUnsafe,\n    decode\n  }\n}\nexport default base\n","import basex from 'base-x';\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nexport default basex(ALPHABET);\n","import $hgUW1$crypto from \"crypto\";\nimport {isString as $hgUW1$isString, isNumber as $hgUW1$isNumber, isUndefined as $hgUW1$isUndefined, isObject as $hgUW1$isObject, isNil as $hgUW1$isNil, isInteger as $hgUW1$isInteger, isArray as $hgUW1$isArray, inRange as $hgUW1$inRange, isNull as $hgUW1$isNull, isEmpty as $hgUW1$isEmpty, isDate as $hgUW1$isDate} from \"lodash-es\";\nimport $hgUW1$bnjs from \"bn.js\";\nimport $hgUW1$jsbigdecimal from \"js-big-decimal\";\nimport $hgUW1$elliptic from \"elliptic\";\nimport $hgUW1$bs58 from \"bs58\";\n\n\n      var $parcel$global = globalThis;\n    var $df64573ef6d51081$exports = {};\n$df64573ef6d51081$exports = JSON.parse(\"{\\\"name\\\":\\\"libnexa-ts\\\",\\\"version\\\":\\\"1.0.6\\\",\\\"description\\\":\\\"A pure and powerful Nexa SDK library.\\\",\\\"type\\\":\\\"module\\\",\\\"source\\\":\\\"src/index.ts\\\",\\\"types\\\":\\\"dist/index.d.ts\\\",\\\"main\\\":\\\"dist/index.cjs\\\",\\\"module\\\":\\\"dist/index.mjs\\\",\\\"browser\\\":\\\"dist/index.web.mjs\\\",\\\"exports\\\":{\\\"types\\\":\\\"./dist/index.d.ts\\\",\\\"node\\\":{\\\"import\\\":\\\"./dist/index.mjs\\\",\\\"require\\\":\\\"./dist/index.cjs\\\"},\\\"browser\\\":\\\"./dist/index.web.mjs\\\",\\\"default\\\":\\\"./dist/index.mjs\\\"},\\\"targets\\\":{\\\"main\\\":{\\\"context\\\":\\\"node\\\",\\\"outputFormat\\\":\\\"commonjs\\\",\\\"distDir\\\":\\\"dist\\\",\\\"isLibrary\\\":true,\\\"includeNodeModules\\\":[\\\"lodash-es\\\"]},\\\"module\\\":{\\\"context\\\":\\\"node\\\",\\\"outputFormat\\\":\\\"esmodule\\\",\\\"distDir\\\":\\\"dist\\\",\\\"isLibrary\\\":true},\\\"browser\\\":{\\\"context\\\":\\\"browser\\\",\\\"outputFormat\\\":\\\"esmodule\\\",\\\"distDir\\\":\\\"dist\\\",\\\"isLibrary\\\":true}},\\\"files\\\":[\\\"dist\\\"],\\\"scripts\\\":{\\\"check\\\":\\\"tsc --noEmit && npm run madge\\\",\\\"build\\\":\\\"del-cli ./dist && parcel build\\\",\\\"lint\\\":\\\"eslint .\\\",\\\"madge\\\":\\\"madge --circular src/index.ts\\\",\\\"test\\\":\\\"vitest run --dir tests\\\",\\\"coverage\\\":\\\"del-cli ./coverage && npm test -- --coverage --reporter=verbose --reporter=junit\\\",\\\"docs\\\":\\\"typedoc\\\"},\\\"keywords\\\":[\\\"nexa\\\",\\\"blockchain\\\"],\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://gitlab.com/nexa/libnexa-ts\\\"},\\\"author\\\":\\\"vgrunner\\\",\\\"license\\\":\\\"MIT\\\",\\\"dependencies\\\":{\\\"bn.js\\\":\\\"^5.2.2\\\",\\\"bs58\\\":\\\"^6.0.0\\\",\\\"elliptic\\\":\\\"^6.6.1\\\",\\\"js-big-decimal\\\":\\\"^2.2.0\\\",\\\"lodash-es\\\":\\\"^4.17.21\\\"},\\\"devDependencies\\\":{\\\"@parcel/packager-ts\\\":\\\"^2.15.4\\\",\\\"@parcel/transformer-typescript-types\\\":\\\"^2.15.4\\\",\\\"@types/bn.js\\\":\\\"^5.2.0\\\",\\\"@types/elliptic\\\":\\\"^6.4.18\\\",\\\"@types/lodash-es\\\":\\\"^4.17.12\\\",\\\"@types/node\\\":\\\"^24.0.8\\\",\\\"@vitest/coverage-v8\\\":\\\"^3.2.4\\\",\\\"del-cli\\\":\\\"^6.0.0\\\",\\\"eslint\\\":\\\"^9.30.0\\\",\\\"madge\\\":\\\"^8.0.0\\\",\\\"parcel\\\":\\\"^2.15.4\\\",\\\"typedoc\\\":\\\"^0.28.7\\\",\\\"typedoc-plugin-markdown\\\":\\\"^4.7.0\\\",\\\"typedoc-plugin-rename-defaults\\\":\\\"^0.7.3\\\",\\\"typescript\\\":\\\"^5.8.3\\\",\\\"typescript-eslint\\\":\\\"^8.35.1\\\",\\\"vitest\\\":\\\"^3.0.6\\\"},\\\"@parcel/resolver-default\\\":{\\\"packageExports\\\":true},\\\"madge\\\":{\\\"detectiveOptions\\\":{\\\"ts\\\":{\\\"skipTypeImports\\\":true}}}}\");\n\n\n\n\n\nclass $e44f707fde477092$export$2e2bcd8739ae039 {\n    static validateState(condition, message) {\n        if (!condition) throw new Error(`Invalid State: ${message}`);\n    }\n    static validateArgument(condition, argumentName, message = \"\") {\n        if (!condition) throw new Error(`Invalid Argument: ${argumentName}. ${message}`);\n    }\n    static validateArgumentType(argument, type, argumentName) {\n        argumentName = argumentName || '(unknown name)';\n        if ((0, $hgUW1$isString)(type)) {\n            if (type === 'Buffer') {\n                if (!Buffer.isBuffer(argument)) throw new TypeError(`Invalid Argument for ${argumentName}, expected ${type} but got ${typeof argument}`);\n            } else if (typeof argument !== type) throw new TypeError(`Invalid Argument for ${argumentName}, expected ${type} but got ${typeof argument}`);\n        } else {\n            if (!(argument instanceof type)) throw new TypeError(`Invalid Argument for ${argumentName}, expected ${type} but got ${typeof argument}`);\n        }\n    }\n}\n\n\nclass $9f918c10ad4fef51$export$2e2bcd8739ae039 {\n    /**\n   * Fill a buffer with a value.\n   *\n   * @param buffer\n   * @param value\n   * @return filled buffer\n   * \n   * @deprecated use `buffer.fill(value)`\n   */ static fill(buffer, value) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(buffer, 'Buffer', 'buffer');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(value, 'number', 'value');\n        return buffer.fill(value);\n    }\n    /**\n   *\n   * @param original buffer\n   * @return Return a copy of a buffer\n   * \n   * @deprecated use `Buffer.from(original) or Buffer.copyBytesFrom(original)`\n   */ static copy(original) {\n        let buffer = Buffer.alloc(original.length);\n        original.copy(buffer);\n        return buffer;\n    }\n    /**\n   * Tests for both node's Buffer and Uint8Array\n   *\n   * @param arg\n   * @return Returns true if the given argument is an instance of a buffer. \n   */ static isBuffer(arg) {\n        return Buffer.isBuffer(arg) || arg instanceof Uint8Array;\n    }\n    /**\n   * Tests for both node's Buffer and Uint8Array\n   *\n   * @param arg\n   * @return Returns true if the given argument is an instance of a hash160 or hash256 buffer. \n   */ static isHashBuffer(arg) {\n        return this.isBuffer(arg) && (arg.length === 20 || arg.length === 32);\n    }\n    /**\n   * Returns a zero-filled byte array\n   *\n   * @param length\n   * \n   * @deprecated use `Buffer.alloc(length)`\n   */ static emptyBuffer(length) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(length, 'number', 'length');\n        return Buffer.alloc(length);\n    }\n    /**\n   * Reverse a buffer\n   * @param param\n   * @return new reversed buffer\n   */ static reverse(param) {\n        return Buffer.from(param).reverse();\n    }\n    /**\n   * Transforms a buffer into a string with a number in hexa representation\n   *\n   * Shorthand for <tt>buffer.toString('hex')</tt>\n   *\n   * @param buffer\n   * @return string\n   */ static bufferToHex(buffer) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(buffer, 'Buffer', 'buffer');\n        return buffer.toString('hex');\n    }\n    /**\n   * Transforms a number from 0 to 255 into a Buffer of size 1 with that value\n   *\n   * @param integer\n   * @return Buffer\n   */ static integerAsSingleByteBuffer(integer) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(integer, 'number', 'integer');\n        return Buffer.from([\n            integer & 0xff\n        ]);\n    }\n    /**\n   * Transforms the first byte of an array into a number ranging from -128 to 127\n   * \n   * @param buffer\n   * @return number\n   */ static integerFromSingleByteBuffer(buffer) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(buffer, 'Buffer', 'buffer');\n        return buffer[0];\n    }\n    /**\n   * Transform a 4-byte integer into a Buffer of length 4.\n   *\n   * @param integer\n   * @return Buffer\n   */ static integerAsBuffer(integer) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(integer, 'number', 'integer');\n        let bytes = [];\n        bytes.push(integer >> 24 & 0xff);\n        bytes.push(integer >> 16 & 0xff);\n        bytes.push(integer >> 8 & 0xff);\n        bytes.push(integer & 0xff);\n        return Buffer.from(bytes);\n    }\n    /**\n   * Transform the first 4 values of a Buffer into a number, in little endian encoding\n   *\n   * @param buffer\n   * @return integer\n   */ static integerFromBuffer(buffer) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(buffer, 'Buffer', 'buffer');\n        return buffer[0] << 24 | buffer[1] << 16 | buffer[2] << 8 | buffer[3];\n    }\n    /* secure random bytes that sometimes throws an error due to lack of entropy */ static getRandomBuffer(size) {\n        return (0, $hgUW1$crypto).randomBytes(size);\n    }\n}\n\n\n\nvar $62ca61b6ba036e1b$var$SHA_BLOCKSIZE = /*#__PURE__*/ function(SHA_BLOCKSIZE) {\n    SHA_BLOCKSIZE[SHA_BLOCKSIZE[\"SHA256\"] = 512] = \"SHA256\";\n    SHA_BLOCKSIZE[SHA_BLOCKSIZE[\"SHA512\"] = 1024] = \"SHA512\";\n    return SHA_BLOCKSIZE;\n}($62ca61b6ba036e1b$var$SHA_BLOCKSIZE || {});\nclass $62ca61b6ba036e1b$export$2e2bcd8739ae039 {\n    static sha1(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\", \"Must be Buffer\");\n        return (0, $hgUW1$crypto).createHash('sha1').update(buf).digest();\n    }\n    static sha256(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\", \"Must be Buffer\");\n        return (0, $hgUW1$crypto).createHash('sha256').update(buf).digest();\n    }\n    static sha512(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\", \"Must be Buffer\");\n        return (0, $hgUW1$crypto).createHash('sha512').update(buf).digest();\n    }\n    static ripemd160(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\", \"Must be Buffer\");\n        return (0, $hgUW1$crypto).createHash('ripemd160').update(buf).digest();\n    }\n    static sha256sha256(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\", \"Must be Buffer\");\n        return this.sha256(this.sha256(buf));\n    }\n    static sha256ripemd160(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\", \"Must be Buffer\");\n        return this.ripemd160(this.sha256(buf));\n    }\n    static sha256hmac(data, key) {\n        return $62ca61b6ba036e1b$export$2e2bcd8739ae039.hmac($62ca61b6ba036e1b$export$2e2bcd8739ae039.sha256, 512, data, key);\n    }\n    static sha512hmac(data, key) {\n        return $62ca61b6ba036e1b$export$2e2bcd8739ae039.hmac($62ca61b6ba036e1b$export$2e2bcd8739ae039.sha512, 1024, data, key);\n    }\n    static hmac(hashf, size, data, key) {\n        //http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n        //http://tools.ietf.org/html/rfc4868#section-2\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data), \"data\", \"Must be Buffer\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(key), \"key\", \"Must be Buffer\");\n        let blocksize = size / 8;\n        if (key.length > blocksize) key = hashf(key);\n        else if (key.length < blocksize) {\n            let fill = Buffer.alloc(blocksize);\n            fill.fill(0);\n            key.copy(fill);\n            key = fill;\n        }\n        let o_key = Buffer.alloc(blocksize);\n        o_key.fill(0x5c);\n        let i_key = Buffer.alloc(blocksize);\n        i_key.fill(0x36);\n        let o_key_pad = Buffer.alloc(blocksize);\n        let i_key_pad = Buffer.alloc(blocksize);\n        for(let i = 0; i < blocksize; i++){\n            o_key_pad[i] = o_key[i] ^ key[i];\n            i_key_pad[i] = i_key[i] ^ key[i];\n        }\n        return hashf(Buffer.concat([\n            o_key_pad,\n            hashf(Buffer.concat([\n                i_key_pad,\n                data\n            ]))\n        ]));\n    }\n}\n\n\n\n\nclass $c337f7a9455509cf$export$2e2bcd8739ae039 {\n    /**\n   * Determines whether a string contains only hexadecimal values\n   * \n   * @param value\n   * @returns true if the string is the hexa representation of a number\n   */ static isHexa(value) {\n        return (0, $hgUW1$isString)(value) && value.length % 2 === 0 && /^[0-9a-fA-F]+$/.test(value);\n    }\n    /**\n   * Test if an argument is a valid JSON object. If it is, returns a truthy\n   * value (the json object decoded), so no double JSON.parse call is necessary\n   *\n   * @param arg\n   * @return false if the argument is not a JSON string.\n   */ static isValidJSON(arg) {\n        if (!(0, $hgUW1$isString)(arg)) return false;\n        try {\n            return JSON.parse(arg);\n        } catch  {\n            return false;\n        }\n    }\n    static cloneArray(array) {\n        return [\n            ...array\n        ];\n    }\n    /**\n   * Checks that a value is a natural number.\n   *\n   * @param value\n   * @return true if a positive integer or zero.\n   */ static isNaturalNumber(value) {\n        return typeof value === 'number' && isFinite(value) && Math.floor(value) === value && value >= 0;\n    }\n    /**\n   * Checks that a value is a natural number.\n   *\n   * @param value\n   * @return true if a positive integer or zero.\n   */ static isNaturalBigInt(value) {\n        return typeof value === 'bigint' && value >= 0n;\n    }\n}\n\n\n\n\n\n\nclass $5aa97aebe18a7924$export$2e2bcd8739ae039 extends (0, $hgUW1$bnjs) {\n    static{\n        this.Zero = new $5aa97aebe18a7924$export$2e2bcd8739ae039(0);\n    }\n    static{\n        this.One = new $5aa97aebe18a7924$export$2e2bcd8739ae039(1);\n    }\n    static{\n        this.Minus1 = new $5aa97aebe18a7924$export$2e2bcd8739ae039(-1);\n    }\n    static fromNumber(num) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNumber)(num), \"num\");\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(num);\n    }\n    static fromBigInt(num) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(typeof num === 'bigint', \"num\");\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(num.toString());\n    }\n    static fromString(str, base) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(str), \"str\");\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(str, base);\n    }\n    static fromBuffer(buf, opts) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\");\n        if (opts?.endian === 'little') buf = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(buf);\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(buf.toString('hex'), 16);\n    }\n    /**\n   * Create a BN from a \"ScriptNum\":\n   * This is analogous to the constructor for CScriptNum in nexad. Many ops in\n   * nexad's script interpreter use CScriptNum, which is not really a proper\n   * bignum. Instead, an error is thrown if trying to input a number bigger than\n   * 4 bytes. We copy that behavior here. A third argument, `size`, is provided to\n   * extend the hard limit of 4 bytes, as some usages require more than 4 bytes.\n   */ static fromScriptNumBuffer(buf, fRequireMinimal, size) {\n        let nMaxNumSize = size || 4;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(buf.length <= nMaxNumSize, 'script number overflow');\n        if (fRequireMinimal && buf.length > 0) // Check that the number is encoded with the minimum possible\n        // number of bytes.\n        //\n        // If the most-significant-byte - excluding the sign bit - is zero\n        // then we're not minimal. Note how this test also rejects the\n        // negative-zero encoding, 0x80.\n        {\n            if ((buf[buf.length - 1] & 0x7f) === 0) {\n                // One exception: if there's more than one byte and the most\n                // significant bit of the second-most-significant-byte is set\n                // it would conflict with the sign bit. An example of this case\n                // is +-255, which encode to 0xff00 and 0xff80 respectively.\n                // (big-endian).\n                if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) throw new Error('non-minimally encoded script number');\n            }\n        }\n        return $5aa97aebe18a7924$export$2e2bcd8739ae039.fromSM(buf, {\n            endian: 'little'\n        });\n    }\n    // Override arithmetic methods to ensure they return BNExtended instances\n    add(b) {\n        const result = super.add(b).toString();\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(result);\n    }\n    sub(b) {\n        const result = super.sub(b).toString();\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(result);\n    }\n    mul(b) {\n        const result = super.mul(b).toString();\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(result);\n    }\n    mod(b) {\n        const result = super.mod(b).toString();\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(result);\n    }\n    umod(b) {\n        const result = super.umod(b).toString();\n        return new $5aa97aebe18a7924$export$2e2bcd8739ae039(result);\n    }\n    toNumber() {\n        return parseInt(this.toString(10), 10);\n    }\n    toBigInt() {\n        return BigInt(this.toString(10));\n    }\n    toBuffer(opts, length) {\n        if ((0, $hgUW1$isString)(opts)) // compatability with override\n        return super.toBuffer(opts, length);\n        let hex = this.toString(16, 2);\n        let buf = Buffer.from(hex, 'hex');\n        if (opts?.size) {\n            let natlen = hex.length / 2;\n            if (natlen > opts.size) buf = $5aa97aebe18a7924$export$2e2bcd8739ae039.trim(buf, natlen);\n            else if (natlen < opts.size) buf = $5aa97aebe18a7924$export$2e2bcd8739ae039.pad(buf, natlen, opts.size);\n        }\n        if (opts?.endian === 'little') buf = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(buf);\n        return buf;\n    }\n    /**\n   * The corollary to the above, with the notable exception that we do not throw\n   * an error if the output is larger than four bytes. (Which can happen if\n   * performing a numerical operation that results in an overflow to more than 4\n   * bytes).\n   */ toScriptNumBuffer() {\n        return this.toSM({\n            endian: 'little'\n        });\n    }\n    toScriptBigNumBuffer() {\n        return this.toSM({\n            endian: 'little',\n            bignum: true\n        });\n    }\n    getSize() {\n        const bin = this.toString(2).replace('-', '');\n        const numBits = bin.length + 1;\n        return numBits / 8;\n    }\n    safeAdd(bigNumToAdd, maxSize) {\n        const sum = this.add(bigNumToAdd);\n        this.checkOperationForOverflow(bigNumToAdd, sum, maxSize);\n        return sum;\n    }\n    safeSub(bigNumToSubtract, maxSize) {\n        const difference = this.sub(bigNumToSubtract);\n        this.checkOperationForOverflow(bigNumToSubtract, difference, maxSize);\n        return difference;\n    }\n    safeMul(bigNumToMultiply, maxSize) {\n        const product = this.mul(bigNumToMultiply);\n        this.checkOperationForOverflow(bigNumToMultiply, product, maxSize);\n        return product;\n    }\n    checkOperationForOverflow(operand, result, maxSize) {\n        if (this.getSize() > maxSize || operand.getSize() > maxSize || result.getSize() > 8) throw new Error('overflow');\n    }\n    toSMBigEndian() {\n        let buf;\n        if (this.cmp($5aa97aebe18a7924$export$2e2bcd8739ae039.Zero) === -1) {\n            buf = this.neg().toBuffer();\n            if (buf[0] & 0x80) buf = Buffer.concat([\n                Buffer.from([\n                    0x80\n                ]),\n                buf\n            ]);\n            else buf[0] = buf[0] | 0x80;\n        } else {\n            buf = this.toBuffer();\n            if (buf[0] & 0x80) buf = Buffer.concat([\n                Buffer.from([\n                    0x00\n                ]),\n                buf\n            ]);\n        }\n        if (buf.length === 1 && buf[0] === 0) buf = Buffer.from([]);\n        return buf;\n    }\n    toBigNumSMBigEndian() {\n        let buf;\n        if (this.cmp($5aa97aebe18a7924$export$2e2bcd8739ae039.Zero) === -1) {\n            buf = this.neg().toBuffer();\n            buf = Buffer.concat([\n                Buffer.from([\n                    0x80\n                ]),\n                buf\n            ]);\n        } else {\n            buf = this.toBuffer();\n            buf = Buffer.concat([\n                Buffer.from([\n                    0x00\n                ]),\n                buf\n            ]);\n        }\n        return buf;\n    }\n    toSM(opts) {\n        let buf = opts?.bignum ? this.toBigNumSMBigEndian() : this.toSMBigEndian();\n        if (opts?.endian === 'little') buf = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(buf);\n        return buf;\n    }\n    /**\n * Instantiate a BigNumber from a \"signed magnitude buffer\"\n * (a buffer where the most significant bit represents the sign (0 = positive, -1 = negative))\n */ static fromSM(buf, opts) {\n        if (buf.length === 0) return this.fromBuffer(Buffer.from([\n            0\n        ]));\n        if (opts?.endian === 'little') buf = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(buf);\n        let ret;\n        if (buf[0] & 0x80) {\n            buf[0] = buf[0] & 0x7f;\n            ret = this.fromBuffer(buf);\n            ret.neg().copy(ret);\n        } else ret = this.fromBuffer(buf);\n        return ret;\n    }\n    static trim(buf, natlen) {\n        return buf.subarray(natlen - buf.length, natlen);\n    }\n    static pad(buf, natlen, size) {\n        let rbuf = Buffer.alloc(size);\n        for(let i = 0; i < buf.length; i++)rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i];\n        for(let i = 0; i < size - natlen; i++)rbuf[i] = 0;\n        return rbuf;\n    }\n}\n\n\n\n\n\n\nclass $12fea2c2eb591556$export$2e2bcd8739ae039 {\n    constructor(buf){\n        this.finished = this.eof;\n        this.buf = Buffer.from([]);\n        this.pos = 0;\n        if ((0, $hgUW1$isUndefined)(buf)) return;\n        if (Buffer.isBuffer(buf)) this.set({\n            buf: buf\n        });\n        else if ((0, $hgUW1$isString)(buf)) {\n            let b = Buffer.from(buf, 'hex');\n            if (b.length * 2 != buf.length) throw new TypeError('Invalid hex string');\n            this.set({\n                buf: b\n            });\n        } else if ((0, $hgUW1$isObject)(buf)) {\n            let obj = buf;\n            this.set(obj);\n        } else throw new TypeError('Unrecognized argument for BufferReader');\n    }\n    set(obj) {\n        this.buf = obj.buf || this.buf;\n        this.pos = obj.pos || this.pos || 0;\n        return this;\n    }\n    eof() {\n        return this.pos >= this.buf.length;\n    }\n    read(len) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(len), 'Must specify a length');\n        let buf = this.buf.subarray(this.pos, this.pos + len);\n        this.pos = this.pos + len;\n        return buf;\n    }\n    readAll() {\n        let buf = this.buf.subarray(this.pos, this.buf.length);\n        this.pos = this.buf.length;\n        return buf;\n    }\n    readUInt8() {\n        let val = this.buf.readUInt8(this.pos);\n        this.pos = this.pos + 1;\n        return val;\n    }\n    readUInt16BE() {\n        let val = this.buf.readUInt16BE(this.pos);\n        this.pos = this.pos + 2;\n        return val;\n    }\n    readUInt16LE() {\n        let val = this.buf.readUInt16LE(this.pos);\n        this.pos = this.pos + 2;\n        return val;\n    }\n    readUInt32BE() {\n        let val = this.buf.readUInt32BE(this.pos);\n        this.pos = this.pos + 4;\n        return val;\n    }\n    readUInt32LE() {\n        let val = this.buf.readUInt32LE(this.pos);\n        this.pos = this.pos + 4;\n        return val;\n    }\n    readInt32LE() {\n        let val = this.buf.readInt32LE(this.pos);\n        this.pos = this.pos + 4;\n        return val;\n    }\n    readUInt64BEBN() {\n        let buf = this.buf.subarray(this.pos, this.pos + 8);\n        let bn = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(buf);\n        this.pos = this.pos + 8;\n        return bn;\n    }\n    readUInt64LEBN() {\n        let second = this.buf.readUInt32LE(this.pos);\n        let first = this.buf.readUInt32LE(this.pos + 4);\n        let combined = first * 0x100000000 + second;\n        // Instantiating an instance of BN with a number is faster than with an\n        // array or string. However, the maximum safe number for a double precision\n        // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n        // non-floating point numbers less than this amount (52 bits). And in the case\n        // that the number is larger, we can instatiate an instance of BN by passing\n        // an array from the buffer (slower) and specifying the endianness.\n        let bn;\n        if (combined <= 0x1fffffffffffff) bn = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(combined);\n        else {\n            let data = this.buf.subarray(this.pos, this.pos + 8);\n            bn = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(data, 10, 'le');\n        }\n        this.pos = this.pos + 8;\n        return bn;\n    }\n    readVarintNum() {\n        let first = this.readUInt8();\n        switch(first){\n            case 0xFD:\n                return this.readUInt16LE();\n            case 0xFE:\n                return this.readUInt32LE();\n            case 0xFF:\n                let bn = this.readUInt64LEBN();\n                let n = bn.toNumber();\n                if (n <= Math.pow(2, 53)) return n;\n                else throw new Error('number too large to retain precision - use readVarintBN');\n        }\n        return first;\n    }\n    /**\n   * reads a length prepended buffer\n   */ readVarLengthBuffer() {\n        let len = this.readVarintNum();\n        let buf = this.read(len);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(buf.length === len, \"Invalid length while reading varlength buffer. Expected to read: \" + len + ' and read ' + buf.length);\n        return buf;\n    }\n    readVarintBuf() {\n        let first = this.buf.readUInt8(this.pos);\n        switch(first){\n            case 0xFD:\n                return this.read(3);\n            case 0xFE:\n                return this.read(5);\n            case 0xFF:\n                return this.read(9);\n            default:\n                return this.read(1);\n        }\n    }\n    readVarintBN() {\n        let first = this.readUInt8();\n        switch(first){\n            case 0xFD:\n                return new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(this.readUInt16LE());\n            case 0xFE:\n                return new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(this.readUInt32LE());\n            case 0xFF:\n                return this.readUInt64LEBN();\n            default:\n                return new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(first);\n        }\n    }\n    reverse() {\n        let buf = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(this.buf);\n        this.buf = buf;\n        return this;\n    }\n    readReverse(len) {\n        if ((0, $hgUW1$isUndefined)(len)) len = this.buf.length;\n        let buf = this.buf.subarray(this.pos, this.pos + len);\n        this.pos = this.pos + len;\n        return (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(buf);\n    }\n    readCoreVarintNum() {\n        let n = 0;\n        while(true){\n            let chData = this.readUInt8();\n            n = n << 7 | chData & 0x7F;\n            if (chData & 0x80) n++;\n            else return n;\n        }\n    }\n}\n\n\n\n\nclass $35852622c8c617e8$export$2e2bcd8739ae039 {\n    constructor(obj){\n        this.bufs = [];\n        this.bufLen = 0;\n        if (obj) this.set(obj);\n    }\n    set(obj) {\n        this.bufs = obj.bufs || this.bufs;\n        this.bufLen = this.bufs.reduce((prev, buf)=>prev + buf.length, 0);\n        return this;\n    }\n    toBuffer() {\n        return this.concat();\n    }\n    concat() {\n        return Buffer.concat(this.bufs, this.bufLen);\n    }\n    write(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\");\n        this.bufs.push(buf);\n        this.bufLen += buf.length;\n        return this;\n    }\n    writeReverse(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\");\n        this.bufs.push((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(buf));\n        this.bufLen += buf.length;\n        return this;\n    }\n    writeUInt8(n) {\n        let buf = Buffer.alloc(1);\n        buf.writeUInt8(n, 0);\n        this.write(buf);\n        return this;\n    }\n    writeUInt16BE(n) {\n        let buf = Buffer.alloc(2);\n        buf.writeUInt16BE(n, 0);\n        this.write(buf);\n        return this;\n    }\n    writeUInt16LE(n) {\n        let buf = Buffer.alloc(2);\n        buf.writeUInt16LE(n, 0);\n        this.write(buf);\n        return this;\n    }\n    writeUInt32BE(n) {\n        let buf = Buffer.alloc(4);\n        buf.writeUInt32BE(n, 0);\n        this.write(buf);\n        return this;\n    }\n    writeInt32LE(n) {\n        let buf = Buffer.alloc(4);\n        buf.writeInt32LE(n, 0);\n        this.write(buf);\n        return this;\n    }\n    writeUInt32LE(n) {\n        let buf = Buffer.alloc(4);\n        buf.writeUInt32LE(n, 0);\n        this.write(buf);\n        return this;\n    }\n    writeUInt64BEBN(bn) {\n        let buf = bn.toBuffer({\n            size: 8\n        });\n        this.write(buf);\n        return this;\n    }\n    writeUInt64LEBN(bn) {\n        let buf = bn.toBuffer({\n            size: 8\n        });\n        this.writeReverse(buf);\n        return this;\n    }\n    writeVarintNum(n) {\n        let buf = $35852622c8c617e8$export$2e2bcd8739ae039.varintBufNum(n);\n        this.write(buf);\n        return this;\n    }\n    writeVarintBN(bn) {\n        let buf = $35852622c8c617e8$export$2e2bcd8739ae039.varintBufBN(bn);\n        this.write(buf);\n        return this;\n    }\n    writeVarLengthBuf(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\");\n        this.writeVarintNum(buf.length);\n        this.write(buf);\n        return this;\n    }\n    writeCoreVarintNum(n) {\n        let tmp = [];\n        let len = 0;\n        while(true){\n            tmp.push(n & 0x7F | (len ? 0x80 : 0x00));\n            if (n <= 0x7F) break;\n            n = (n >> 7) - 1;\n            len++;\n        }\n        this.write(Buffer.from(tmp).reverse());\n        return this;\n    }\n    static varintBufNum(n) {\n        let buf = undefined;\n        if (n < 253) {\n            buf = Buffer.alloc(1);\n            buf.writeUInt8(n, 0);\n        } else if (n < 0x10000) {\n            buf = Buffer.alloc(3);\n            buf.writeUInt8(253, 0);\n            buf.writeUInt16LE(n, 1);\n        } else if (n < 0x100000000) {\n            buf = Buffer.alloc(5);\n            buf.writeUInt8(254, 0);\n            buf.writeUInt32LE(n, 1);\n        } else {\n            buf = Buffer.alloc(9);\n            buf.writeUInt8(255, 0);\n            buf.writeInt32LE(n & -1, 1);\n            buf.writeUInt32LE(Math.floor(n / 0x100000000), 5);\n        }\n        return buf;\n    }\n    static varintBufBN(bn) {\n        let buf = undefined;\n        let n = bn.toNumber();\n        if (n < 253) {\n            buf = Buffer.alloc(1);\n            buf.writeUInt8(n, 0);\n        } else if (n < 0x10000) {\n            buf = Buffer.alloc(3);\n            buf.writeUInt8(253, 0);\n            buf.writeUInt16LE(n, 1);\n        } else if (n < 0x100000000) {\n            buf = Buffer.alloc(5);\n            buf.writeUInt8(254, 0);\n            buf.writeUInt32LE(n, 1);\n        } else {\n            let bw = new $35852622c8c617e8$export$2e2bcd8739ae039();\n            bw.writeUInt8(255);\n            bw.writeUInt64LEBN(bn);\n            buf = bw.concat();\n        }\n        return buf;\n    }\n}\n\n\n\n\n\nvar $05e660d5daa855e4$export$80d48287646c9e3b = /*#__PURE__*/ function(UnitType) {\n    UnitType[UnitType[\"MEX\"] = 8] = \"MEX\";\n    UnitType[UnitType[\"KEX\"] = 5] = \"KEX\";\n    UnitType[UnitType[\"NEXA\"] = 2] = \"NEXA\";\n    return UnitType;\n}({});\nclass $05e660d5daa855e4$export$2e2bcd8739ae039 {\n    /**\n   *  Converts `value` into a decimal string, assuming `unit` decimal\n   *  places. The `unit` may be the number of decimal places or the enum of\n   *  a unit (e.g. ``UnitType.MEX`` for 8 decimal places).\n   *\n   */ static formatUnits(value, unit) {\n        let decimals = 2;\n        if (!(0, $hgUW1$isNil)(unit)) {\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isInteger)(unit) && unit >= 0, \"unit\", \"invalid unit\");\n            decimals = unit;\n        }\n        return (0, $hgUW1$jsbigdecimal).divide(value, Math.pow(10, decimals), decimals);\n    }\n    /**\n  *  Converts the decimal string `value` to a BigInt, assuming\n  *  `unit` decimal places. The `unit` may the number of decimal places\n  *  or the name of a unit (e.g. ``UnitType.KEX`` for 5 decimal places).\n  */ static parseUnits(value, unit) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(value), \"value\", \"must be a string\");\n        let decimals = 2;\n        if (!(0, $hgUW1$isNil)(unit)) {\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isInteger)(unit) && unit >= 0, \"unit\", \"invalid unit\");\n            decimals = unit;\n        }\n        return BigInt((0, $hgUW1$jsbigdecimal).multiply(value, Math.pow(10, decimals)));\n    }\n    /**\n  *  Converts `value` into a decimal string using 2 decimal places.\n  */ static formatNEXA(sats) {\n        return this.formatUnits(sats, 2);\n    }\n    /**\n  *  Converts the decimal string `NEXA` to a BigInt, using 2 decimal places.\n  */ static parseNEXA(nexa) {\n        return this.parseUnits(nexa, 2);\n    }\n}\n\n\n\n\nclass $ddbf68ec49150fba$export$95be4ae94445245a {\n    constructor(params){\n        this.name = params.name;\n        this.alias = params.alias;\n        this.prefix = params.prefix;\n        this.pubkeyhash = params.pubkeyhash;\n        this.privatekey = params.privatekey;\n        this.scripthash = params.scripthash;\n        this.xpubkey = params.xpubkey;\n        this.xprivkey = params.xprivkey;\n        this.networkMagic = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(params.networkMagic);\n        this.port = params.port;\n        this.dnsSeeds = params.dnsSeeds;\n    }\n    toString() {\n        return this.name;\n    }\n}\nconst $ddbf68ec49150fba$export$673894bea0cfc1c8 = new $ddbf68ec49150fba$export$95be4ae94445245a({\n    name: 'mainnet',\n    alias: 'livenet',\n    prefix: 'nexa',\n    pubkeyhash: 0x19,\n    privatekey: 0x23,\n    scripthash: 0x44,\n    xpubkey: 0x42696720,\n    xprivkey: 0x426c6b73,\n    networkMagic: 0x72271221,\n    port: 7228,\n    dnsSeeds: [\n        'seed.nextchain.cash',\n        'seeder.nexa.org',\n        'nexa-seeder.bitcoinunlimited.info'\n    ]\n});\nconst $ddbf68ec49150fba$export$2cc9cef11fee0dca = new $ddbf68ec49150fba$export$95be4ae94445245a({\n    name: 'testnet',\n    alias: 'testnet',\n    prefix: 'nexatest',\n    pubkeyhash: 0x6f,\n    privatekey: 0xef,\n    scripthash: 0xc4,\n    xpubkey: 0x043587cf,\n    xprivkey: 0x04358394,\n    networkMagic: 0x72271222,\n    port: 7230,\n    dnsSeeds: [\n        'nexa-testnet-seeder.bitcoinunlimited.info',\n        'testnetseeder.nexa.org'\n    ]\n});\n\n\nclass $a89918d61ea4dca0$export$2e2bcd8739ae039 {\n    static{\n        this._instance = new $a89918d61ea4dca0$export$2e2bcd8739ae039();\n    }\n    get mainnet() {\n        return 0, $ddbf68ec49150fba$export$673894bea0cfc1c8;\n    }\n    /** @deprecated use mainnet */ get livenet() {\n        return 0, $ddbf68ec49150fba$export$673894bea0cfc1c8;\n    }\n    get testnet() {\n        return 0, $ddbf68ec49150fba$export$2cc9cef11fee0dca;\n    }\n    get defaultNetwork() {\n        return this._defaultNetwork;\n    }\n    set defaultNetwork(network) {\n        this._defaultNetwork = network;\n    }\n    /**\n   * @returns the singleton instance of NetworkManager\n   */ static getInstance() {\n        return this._instance;\n    }\n    get(arg, key) {\n        if (arg instanceof (0, $ddbf68ec49150fba$export$95be4ae94445245a)) {\n            if (this.networks.includes(arg)) return arg;\n            if (this.networks.map((n)=>n.name).includes(arg.name)) return this.networks.find((n)=>n.name == arg.name);\n        }\n        if (key) return this.networks.find((network)=>{\n            if (key == 'networkMagic') return (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(network[key]) == arg;\n            else return network[key] == arg;\n        });\n        else return this.networks.find((network)=>Object.keys(network).some((prop)=>{\n                let _prop = prop;\n                if (_prop == 'networkMagic') return (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(network[_prop]) == arg;\n                else return network[_prop] == arg;\n            }));\n    }\n    create(network) {\n        return new (0, $ddbf68ec49150fba$export$95be4ae94445245a)(network);\n    }\n    add(network) {\n        if (!(network instanceof (0, $ddbf68ec49150fba$export$95be4ae94445245a))) network = new (0, $ddbf68ec49150fba$export$95be4ae94445245a)(network);\n        this.networks.push(network);\n    }\n    remove(network) {\n        if (typeof network !== 'object') {\n            network = this.get(network);\n            if (!network) return;\n        }\n        for(let i = 0; i < this.networks.length; i++)if (this.networks[i] === network || JSON.stringify(this.networks[i]) == JSON.stringify(network)) this.networks.splice(i, 1);\n    }\n    constructor(){\n        this.networks = [\n            (0, $ddbf68ec49150fba$export$673894bea0cfc1c8),\n            (0, $ddbf68ec49150fba$export$2cc9cef11fee0dca)\n        ];\n        this._defaultNetwork = (0, $ddbf68ec49150fba$export$673894bea0cfc1c8);\n    }\n}\nconst $a89918d61ea4dca0$export$f09b1917886389c3 = $a89918d61ea4dca0$export$2e2bcd8739ae039.getInstance();\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $369a157b63fbc3fd$export$2e2bcd8739ae039 {\n    constructor(params){\n        this.r = params.r;\n        this.s = params.s;\n        this.i = params.i;\n        this.compressed = params.compressed;\n    }\n    toBuffer(isSchnorr = true) {\n        if (isSchnorr) // Schnorr signatures use a 64 byte r,s format.\n        return Buffer.concat([\n            this.r.toBuffer({\n                size: 32\n            }),\n            this.s.toBuffer({\n                size: 32\n            })\n        ]);\n        let rnbuf = this.r.toBuffer();\n        let snbuf = this.s.toBuffer();\n        let rneg = rnbuf[0] & 0x80 ? true : false;\n        /* c8 ignore next */ let sneg = snbuf[0] & 0x80 ? true : false;\n        let rbuf = rneg ? Buffer.concat([\n            Buffer.from([\n                0x00\n            ]),\n            rnbuf\n        ]) : rnbuf;\n        /* c8 ignore next */ let sbuf = sneg ? Buffer.concat([\n            Buffer.from([\n                0x00\n            ]),\n            snbuf\n        ]) : snbuf;\n        let rlength = rbuf.length;\n        let slength = sbuf.length;\n        let length = 2 + rlength + 2 + slength;\n        let rheader = 0x02;\n        let sheader = 0x02;\n        let header = 0x30;\n        let der = Buffer.concat([\n            Buffer.from([\n                header,\n                length,\n                rheader,\n                rlength\n            ]),\n            rbuf,\n            Buffer.from([\n                sheader,\n                slength\n            ]),\n            sbuf\n        ]);\n        return der;\n    }\n    toTxFormat(sighashBuf) {\n        let sigbuf = this.toBuffer();\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(sighashBuf)) return Buffer.concat([\n            sigbuf,\n            sighashBuf\n        ]);\n        return sigbuf;\n    }\n    toString() {\n        return this.toBuffer().toString('hex');\n    }\n    /**\n   * Schnorr signatures are 64 bytes: r [len] 32 || s [len] 32.\n   * \n   * There can be a few more bytes that is the sighashtype. It needs to be trimmed before calling this.\n   */ static fromBuffer(buf, strict) {\n        if (buf.length === 64) {\n            let params = this.parseSchnorrEncodedSig(buf);\n            return new $369a157b63fbc3fd$export$2e2bcd8739ae039(params);\n        }\n        let obj = $369a157b63fbc3fd$export$2e2bcd8739ae039.parseDER(buf, strict);\n        return new $369a157b63fbc3fd$export$2e2bcd8739ae039({\n            r: obj.r,\n            s: obj.s\n        });\n    }\n    /**\n   * The format used in a tx.\n   * schnorr is 64 bytes, the rest are sighashtype bytes\n   * \n   * @param buf \n   */ static fromTxFormat(buf) {\n        let sigbuf = buf.subarray(0, 64);\n        return $369a157b63fbc3fd$export$2e2bcd8739ae039.fromBuffer(sigbuf);\n    }\n    /**\n   * This assumes the str is a raw signature and does not have sighashtype.\n   * Use {@link Signature.fromTxString} when decoding a tx\n   * \n   * @param str the signature hex string\n   * @see fromTxString\n   */ static fromString(str) {\n        let buf = Buffer.from(str, 'hex');\n        return $369a157b63fbc3fd$export$2e2bcd8739ae039.fromBuffer(buf);\n    }\n    /**\n   * This assumes the str might have sighashtype bytes and will trim it if needed.\n   * Use this when decoding a tx signature string\n   * \n   * @param str the tx signature hex string\n   */ static fromTxString(str, encoding = 'hex') {\n        return $369a157b63fbc3fd$export$2e2bcd8739ae039.fromTxFormat(Buffer.from(str, encoding));\n    }\n    static parseSchnorrEncodedSig(buf) {\n        let r = buf.subarray(0, 32);\n        let s = buf.subarray(32, 64);\n        return {\n            r: (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(r),\n            s: (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(s)\n        };\n    }\n    /**\n   * For ECDSA. In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n   */ static parseDER(buf, strict) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'DER formatted signature should be a buffer');\n        if ((0, $hgUW1$isUndefined)(strict)) strict = true;\n        let header = buf[0];\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(header === 0x30, 'Header byte should be 0x30');\n        let length = buf[1];\n        let buflength = buf.subarray(2).length;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!strict || length === buflength, 'Length byte should length of what follows');\n        length = length < buflength ? length : buflength;\n        let rheader = buf[2];\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(rheader === 0x02, 'Integer byte for r should be 0x02');\n        let rlength = buf[3];\n        let rbuf = buf.subarray(4, 4 + rlength);\n        let r = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(rbuf);\n        let rneg = buf[4] === 0x00 ? true : false;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(rlength === rbuf.length, 'Length of r incorrect');\n        let sheader = buf[4 + rlength + 0];\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(sheader === 0x02, 'Integer byte for s should be 0x02');\n        let slength = buf[4 + rlength + 1];\n        let sbuf = buf.subarray(4 + rlength + 2, 4 + rlength + 2 + slength);\n        let s = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(sbuf);\n        /* c8 ignore next */ let sneg = buf[4 + rlength + 2 + 2] === 0x00 ? true : false;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(slength === sbuf.length, 'Length of s incorrect');\n        let sumlength = 4 + rlength + 2 + slength;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(length === sumlength - 2, 'Length of signature incorrect');\n        let obj = {\n            header: header,\n            length: length,\n            rheader: rheader,\n            rlength: rlength,\n            rneg: rneg,\n            rbuf: rbuf,\n            r: r,\n            sheader: sheader,\n            slength: slength,\n            sneg: sneg,\n            sbuf: sbuf,\n            s: s\n        };\n        return obj;\n    }\n    /**\n   * ECDSA format. used for sign messages\n   */ toCompact(i, compressed) {\n        i = typeof i === 'number' ? i : this.i;\n        compressed = typeof compressed === 'boolean' ? compressed : this.compressed;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(i === 0 || i === 1 || i === 2 || i === 3, 'i must be equal to 0, 1, 2, or 3');\n        let val = i + 27 + 4;\n        if (compressed === false) val = val - 4;\n        let b1 = Buffer.from([\n            val\n        ]);\n        let b2 = this.r.toBuffer({\n            size: 32\n        });\n        let b3 = this.s.toBuffer({\n            size: 32\n        });\n        return Buffer.concat([\n            b1,\n            b2,\n            b3\n        ]);\n    }\n    static fromCompact(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'Argument is expected to be a Buffer');\n        let compressed = true;\n        let i = buf.subarray(0, 1)[0] - 27 - 4;\n        if (i < 0) {\n            compressed = false;\n            i = i + 4;\n        }\n        let b2 = buf.subarray(1, 33);\n        let b3 = buf.subarray(33, 65);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(i === 0 || i === 1 || i === 2 || i === 3, 'i must be 0, 1, 2, or 3');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(b2.length === 32, 'r must be 32 bytes');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(b3.length === 32, 's must be 32 bytes');\n        return new $369a157b63fbc3fd$export$2e2bcd8739ae039({\n            r: (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(b2),\n            s: (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(b3),\n            i: i,\n            compressed: compressed\n        });\n    }\n}\n\n\nclass $2a1cae3adbd93346$export$2e2bcd8739ae039 {\n    constructor(obj){\n        if (obj) this.set(obj);\n    }\n    set(obj) {\n        this.hashbuf = obj.hashbuf || this.hashbuf;\n        this.endian = obj.endian || this.endian;\n        this.privkey = obj.privkey || this.privkey;\n        this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n        this.sig = obj.sig || this.sig;\n        this.verified = obj.verified || this.verified;\n        return this;\n    }\n    sign() {\n        let hashbuf = this.hashbuf;\n        let privkey = this.privkey;\n        let d = privkey.bn;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!(0, $hgUW1$isNil)(hashbuf) && !(0, $hgUW1$isNil)(privkey) && !(0, $hgUW1$isNil)(d), 'invalid parameters');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(hashbuf) && hashbuf.length === 32, 'hashbuf must be a 32 byte buffer');\n        let e = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(hashbuf, this.endian ? {\n            endian: this.endian\n        } : undefined);\n        let obj = this._findSignature(d, e);\n        obj.compressed = this.pubkey.compressed;\n        this.sig = new (0, $369a157b63fbc3fd$export$2e2bcd8739ae039)(obj);\n        return this;\n    }\n    verify() {\n        this.verified = !this.sigError();\n        return this;\n    }\n    toPublicKey() {\n        return this.privkey.toPublicKey();\n    }\n    privkey2pubkey() {\n        this.pubkey = this.privkey.toPublicKey();\n    }\n}\n\n\n\n\nconst $ba7e1a38972b2d09$var$EC = (0, $hgUW1$elliptic).ec;\nclass $ba7e1a38972b2d09$export$2e2bcd8739ae039 {\n    static{\n        this.ec = new $ba7e1a38972b2d09$var$EC('secp256k1').curve;\n    }\n    static{\n        this._g = new $ba7e1a38972b2d09$export$2e2bcd8739ae039(this.ec.g);\n    }\n    constructor(point, skipValidation = false){\n        this.ecPoint = point;\n        if (!skipValidation) this.validate();\n    }\n    /**\n   * Will return the X coordinate of the Point\n   *\n   * @returns A BN instance of the X coordinate\n   */ getX() {\n        return new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(this.ecPoint.getX().toArray());\n    }\n    /**\n   * Will return the Y coordinate of the Point\n   *\n   * @returns A BN instance of the Y coordinate\n   */ getY() {\n        return new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(this.ecPoint.getY().toArray());\n    }\n    add(p) {\n        return new $ba7e1a38972b2d09$export$2e2bcd8739ae039(this.ecPoint.add(p.ecPoint), true);\n    }\n    mul(k) {\n        let p = this.ecPoint.mul(k);\n        return new $ba7e1a38972b2d09$export$2e2bcd8739ae039(p, true);\n    }\n    mulAdd(k1, p2, k2) {\n        let p = this.ecPoint.mulAdd(k1, p2.ecPoint, k2); // eslint-disable-line @typescript-eslint/no-explicit-any\n        return new $ba7e1a38972b2d09$export$2e2bcd8739ae039(p, true);\n    }\n    eq(p) {\n        return this.ecPoint.eq(p.ecPoint);\n    }\n    /**\n   * Will determine if the point is valid\n   *\n   * @see {@link https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf}\n   * @throws A validation error if exists\n   * @returns An instance of the same Point\n   */ validate() {\n        if (this.ecPoint.isInfinity()) throw new Error('Point cannot be equal to Infinity');\n        let p2;\n        try {\n            p2 = $ba7e1a38972b2d09$export$2e2bcd8739ae039.ec.pointFromX(this.getX(), this.getY().isOdd());\n        } catch  {\n            throw new Error('Point does not lie on the curve');\n        }\n        if (p2.y.cmp(this.ecPoint.y) !== 0) throw new Error('Invalid y value for curve.');\n        if (!this.ecPoint.mul($ba7e1a38972b2d09$export$2e2bcd8739ae039.getN()).isInfinity()) throw new Error('Point times N must be infinity');\n        return this;\n    }\n    hasSquare() {\n        return !this.ecPoint.isInfinity() && $ba7e1a38972b2d09$export$2e2bcd8739ae039.isSquare(this.getY());\n    }\n    static isSquare(x) {\n        let p = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F', 'hex');\n        let x0 = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(x);\n        let base = x0.toRed((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).red(p));\n        let res = base.redPow(p.sub((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).One).div(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(2))).fromRed();\n        return res.eq(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(1));\n    }\n    /**\n   * Instantiate a valid secp256k1 Point from the X and Y coordinates.\n   *\n   * @param x - The X coordinate\n   * @param y - The Y coordinate\n   * @see {@link https://github.com/indutny/elliptic}\n   * @throws A validation error if exists\n   */ static ecPoint(x, y, isRed) {\n        return new $ba7e1a38972b2d09$export$2e2bcd8739ae039(this.ec.point(x, y, isRed));\n    }\n    /**\n   *\n   * Instantiate a valid secp256k1 Point from only the X coordinate\n   * \n   * @param odd - If the Y coordinate is odd\n   * @param x - The X coordinate\n   * @throws A validation error if exists\n   */ static ecPointFromX(odd, x) {\n        let point;\n        try {\n            point = this.ec.pointFromX(x, odd);\n        } catch  {\n            throw new Error('Invalid X');\n        }\n        return new $ba7e1a38972b2d09$export$2e2bcd8739ae039(point);\n    }\n    /**\n   *\n   * Will return a secp256k1 ECDSA base point.\n   *\n   * @see {@link https://en.bitcoin.it/wiki/Secp256k1}\n   * @returns An instance of the base point.\n   */ static getG() {\n        return this._g;\n    }\n    /**\n   *\n   * Will return the max of range of valid private keys as governed by the secp256k1 ECDSA standard.\n   *\n   * @see {@link https://en.bitcoin.it/wiki/Private_key#Range_of_valid_ECDSA_private_keys}\n   * @returns A BN instance of the number of points on the curve\n   */ static getN() {\n        return new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(this.ec.n.toArray());\n    }\n    static pointToCompressed(point) {\n        let xbuf = point.getX().toBuffer({\n            size: 32\n        });\n        let ybuf = point.getY().toBuffer({\n            size: 32\n        });\n        let odd = ybuf[ybuf.length - 1] % 2;\n        let prefix = Buffer.from(odd ? [\n            0x03\n        ] : [\n            0x02\n        ]);\n        return Buffer.concat([\n            prefix,\n            xbuf\n        ]);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nclass $246eb589bb078d6d$export$2e2bcd8739ae039 {\n    /**\n   * @param data - The pubkey data\n   */ constructor(data){\n        this.toObject = this.toJSON;\n        this.toDER = this.toBuffer;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(data), 'First argument is required, please include public key data.');\n        if (data instanceof $246eb589bb078d6d$export$2e2bcd8739ae039) // Return copy, but as it's an immutable object, return same argument\n        return data;\n        if ($246eb589bb078d6d$export$2e2bcd8739ae039._isPublicKeyData(data)) {\n            data.point.validate();\n            this.point = data.point;\n            this.compressed = (0, $hgUW1$isUndefined)(data.compressed) || data.compressed;\n            this.network = data.network || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork;\n        } else throw new TypeError('First argument is an unrecognized data format.');\n    }\n    /**\n   * @returns A plain object of the PublicKey\n   */ toJSON() {\n        return {\n            x: this.point.getX().toString('hex', 2),\n            y: this.point.getY().toString('hex', 2),\n            compressed: this.compressed,\n            network: this.network.toString()\n        };\n    }\n    /**\n   * Will output the PublicKey to a DER Buffer\n   *\n   * @returns  A DER hex encoded buffer\n   */ toBuffer() {\n        let x = this.point.getX();\n        let y = this.point.getY();\n        let xbuf = x.toBuffer({\n            size: 32\n        });\n        let ybuf = y.toBuffer({\n            size: 32\n        });\n        let prefix;\n        if (!this.compressed) {\n            prefix = Buffer.from([\n                0x04\n            ]);\n            return Buffer.concat([\n                prefix,\n                xbuf,\n                ybuf\n            ]);\n        } else {\n            let odd = ybuf[ybuf.length - 1] % 2;\n            if (odd) prefix = Buffer.from([\n                0x03\n            ]);\n            else prefix = Buffer.from([\n                0x02\n            ]);\n            return Buffer.concat([\n                prefix,\n                xbuf\n            ]);\n        }\n    }\n    /**\n   * Will output the PublicKey to a DER encoded hex string\n   *\n   * @returns A DER hex encoded string\n   */ toString() {\n        return this.toBuffer().toString('hex');\n    }\n    /**\n   * Will return a string formatted for the console\n   *\n   * @returns Public key string inspection\n   */ inspect() {\n        return '<PublicKey: ' + this.toString() + (this.compressed ? '' : ', uncompressed') + '>';\n    }\n    /**\n   * Instantiate a PublicKey from various formats\n   * \n   * @param data The encoded data in various formats\n   * @param compressed If the public key is compressed\n   * @param network The key network\n   * @returns New PublicKey instance\n   */ static from(data, compressed, network) {\n        // detect type of data\n        if (data instanceof $246eb589bb078d6d$export$2e2bcd8739ae039) return data;\n        else if (data instanceof (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039)) return this.fromPoint(data, compressed, network);\n        else if (this._isPublicKeyDto(data)) return this.fromObject(data);\n        else if (this._isPublicKeyData(data)) return new $246eb589bb078d6d$export$2e2bcd8739ae039(data);\n        else if (this._isPrivateKeyData(data)) return this.fromPrivateKey(data);\n        else if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data)) return this.fromBuffer(data, true, network);\n        else if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(data)) return this.fromString(data, \"hex\", network);\n        else throw new TypeError('First argument is an unrecognized data format.');\n    }\n    static{\n        this.fromDER = this.fromBuffer;\n    }\n    static{\n        this.fromObject = this.fromJSON;\n    }\n    /**\n   * Instantiate a PublicKey from a Buffer\n   * \n   * @param buf - A DER hex buffer\n   * @param strict - if set to false, will loosen some conditions\n   * @param network - the network of the key\n   * @returns A new valid instance of PublicKey\n   */ static fromBuffer(buf, strict, network) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n        let info = $246eb589bb078d6d$export$2e2bcd8739ae039._transformDER(buf, strict);\n        return new $246eb589bb078d6d$export$2e2bcd8739ae039({\n            point: info.point,\n            compressed: info.compressed,\n            network: network\n        });\n    }\n    /**\n   * Instantiate a PublicKey from a Point\n   *\n   * @param point - A Point instance\n   * @param compressed - whether to store this public key as compressed format\n   * @param network - the network of the key\n   * @returns A new valid instance of PublicKey\n   */ static fromPoint(point, compressed, network) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(point instanceof (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039), 'First argument must be an instance of Point.');\n        return new $246eb589bb078d6d$export$2e2bcd8739ae039({\n            point: point,\n            compressed: compressed,\n            network: network\n        });\n    }\n    /**\n   * Instantiate a PublicKey from a DER hex encoded string\n   *\n   * @param str - A DER hex string\n   * @param encoding - The type of string encoding\n   * @param network - the network of the key\n   * @returns A new valid instance of PublicKey\n   */ static fromString(str, encoding, network) {\n        let buf = Buffer.from(str, encoding || 'hex');\n        let info = $246eb589bb078d6d$export$2e2bcd8739ae039._transformDER(buf);\n        return new $246eb589bb078d6d$export$2e2bcd8739ae039({\n            point: info.point,\n            compressed: info.compressed,\n            network: network\n        });\n    }\n    /**\n   * Instantiate a PublicKey from PrivateKey data\n   *\n   * @param data - Object contains data of PrivateKey\n   * @returns A new valid instance of PublicKey\n   */ static fromPrivateKey(data) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(this._isPrivateKeyData(data), 'data', 'Must be data of PrivateKey');\n        let point = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG().mul(data.bn);\n        return new $246eb589bb078d6d$export$2e2bcd8739ae039({\n            point: point,\n            compressed: data.compressed,\n            network: data.network\n        });\n    }\n    static fromJSON(data) {\n        let info = $246eb589bb078d6d$export$2e2bcd8739ae039._transformObject(data);\n        return new $246eb589bb078d6d$export$2e2bcd8739ae039(info);\n    }\n    /**\n   * Check if there would be any errors when initializing a PublicKey\n   *\n   * @param data - The encoded data in various formats\n   * @returns An error if exists\n   */ static getValidationError(data) {\n        try {\n            this.from(data);\n        } catch (e) {\n            return e;\n        }\n        return undefined;\n    }\n    /**\n   * Check if the parameters are valid\n   *\n   * @param data - The encoded data in various formats\n   * @returns true If the public key would be valid\n   */ static isValid(data) {\n        return !$246eb589bb078d6d$export$2e2bcd8739ae039.getValidationError(data);\n    }\n    static _isPublicKeyData(data) {\n        return (0, $hgUW1$isObject)(data) && 'point' in data && data.point instanceof (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039);\n    }\n    static _isPublicKeyDto(data) {\n        return (0, $hgUW1$isObject)(data) && 'x' in data && 'y' in data;\n    }\n    static _isPrivateKeyData(data) {\n        return (0, $hgUW1$isObject)(data) && 'bn' in data && 'network' in data;\n    }\n    /**\n   * Internal function to transform DER into a public key point\n   *\n   * @param buf - An hex encoded buffer\n   * @param strict - if set to false, will loosen some conditions\n   * @returns An object with keys: point and compressed\n   */ static _transformDER(buf, strict) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n        strict = (0, $hgUW1$isUndefined)(strict) ? true : strict;\n        if (buf[0] === 0x04 || !strict && (buf[0] === 0x06 || buf[0] === 0x07)) {\n            let xbuf = buf.subarray(1, 33);\n            let ybuf = buf.subarray(33, 65);\n            if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) throw new TypeError('Length of x and y must be 32 bytes');\n            let x = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(xbuf);\n            let y = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(ybuf);\n            return {\n                point: (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).ecPoint(x, y),\n                compressed: false\n            };\n        } else if (buf[0] === 0x03) {\n            let xbuf = buf.subarray(1);\n            let x = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(xbuf);\n            return {\n                point: (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).ecPointFromX(true, x),\n                compressed: true\n            };\n        } else if (buf[0] === 0x02) {\n            let xbuf = buf.subarray(1);\n            let x = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(xbuf);\n            return {\n                point: (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).ecPointFromX(false, x),\n                compressed: true\n            };\n        } else throw new TypeError('Invalid DER format public key');\n    }\n    /**\n   * Internal function to transform a JSON into a public key point\n   */ static _transformObject(json) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(json.x), 'x', 'must be a hex string');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(json.y), 'y', 'must be a hex string');\n        let x = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(json.x, 'hex');\n        let y = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(json.y, 'hex');\n        let point = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).ecPoint(x, y);\n        return {\n            point: point,\n            compressed: json.compressed,\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(json.network)\n        };\n    }\n}\n\n\nclass $1ef65db4b26d2b16$export$2e2bcd8739ae039 extends (0, $2a1cae3adbd93346$export$2e2bcd8739ae039) {\n    set(obj) {\n        this.k = obj.k || this.k;\n        return super.set(obj);\n    }\n    sigError() {\n        if (!(0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(this.hashbuf) || this.hashbuf.length !== 32) return 'hashbuf must be a 32 byte buffer';\n        let r = this.sig.r;\n        let s = this.sig.s;\n        if (!(r.gt((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).Zero) && r.lt((0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN())) || !(s.gt((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).Zero) && s.lt((0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN()))) return 'r and s not in range';\n        let e = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(this.hashbuf, this.endian ? {\n            endian: this.endian\n        } : undefined);\n        let n = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN();\n        let sinv = s.invm(n);\n        let u1 = sinv.mul(e).umod(n);\n        let u2 = sinv.mul(r).umod(n);\n        let p = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG().mulAdd(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(u1), this.pubkey.point, new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(u2));\n        /* c8 ignore start */ if (p.ecPoint.isInfinity()) return 'p is infinity';\n        /* c8 ignore stop */ if (p.getX().umod(n).cmp(r) !== 0) return 'Invalid signature';\n        else return false;\n    }\n    _findSignature(d, e) {\n        let N = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN();\n        let G = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG();\n        // try different values of k until r, s are valid\n        let badrs = 0;\n        let k, Q, r, s;\n        do {\n            if (!this.k || badrs > 0) this.deterministicK(badrs);\n            badrs++;\n            k = this.k;\n            Q = G.mul(k);\n            r = Q.ecPoint.x.umod(N);\n            s = k.invm(N).mul(e.add(d.mul(r))).umod(N);\n        }while (r.cmp((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).Zero) <= 0 || s.cmp((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).Zero) <= 0);\n        s = $1ef65db4b26d2b16$export$2e2bcd8739ae039.toLowS(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(s));\n        return {\n            s: s,\n            r: new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(r)\n        };\n    }\n    static toLowS(s) {\n        //enforce low s\n        //see BIP 62, \"low S values in signatures\"\n        if (s.gt((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(Buffer.from('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) s = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN().sub(s);\n        return s;\n    }\n    calcI() {\n        for(let i = 0; i < 4; i++){\n            this.sig.i = i;\n            let Qprime;\n            try {\n                Qprime = this.toPublicKey();\n            /* c8 ignore next 3 */ } catch  {\n                continue;\n            }\n            if (Qprime.point.eq(this.pubkey.point)) {\n                this.sig.compressed = this.pubkey.compressed;\n                return this;\n            }\n        /* c8 ignore next 4 */ }\n        this.sig.i = undefined;\n        throw new Error(`Unable to find valid recovery factor`);\n    }\n    randomK() {\n        let N = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN();\n        let k;\n        do k = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).getRandomBuffer(32));\n        while (!(k.lt(N) && k.gt((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).Zero)));\n        this.k = k;\n        return this;\n    }\n    // https://tools.ietf.org/html/rfc6979#section-3.2\n    deterministicK(badrs) {\n        // if r or s were invalid when this function was used in signing,\n        // we do not want to actually compute r, s here for efficiency, so,\n        // we can increment badrs. explained at end of RFC 6979 section 3.2\n        if ((0, $hgUW1$isUndefined)(badrs)) badrs = 0;\n        let v = Buffer.alloc(32);\n        v.fill(0x01);\n        let k = Buffer.alloc(32);\n        k.fill(0x00);\n        let x = this.privkey.bn.toBuffer({\n            size: 32\n        });\n        let hashbuf = this.endian === 'little' ? (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(this.hashbuf) : this.hashbuf;\n        k = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(Buffer.concat([\n            v,\n            Buffer.from([\n                0x00\n            ]),\n            x,\n            hashbuf\n        ]), k);\n        v = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(v, k);\n        k = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(Buffer.concat([\n            v,\n            Buffer.from([\n                0x01\n            ]),\n            x,\n            hashbuf\n        ]), k);\n        v = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(v, k);\n        v = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(v, k);\n        let T = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(v);\n        let N = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN();\n        // also explained in 3.2, we must ensure T is in the proper range (0, N)\n        for(let i = 0; i < badrs || !(T.lt(N) && T.gt((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).Zero)); i++){\n            k = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(Buffer.concat([\n                v,\n                Buffer.from([\n                    0x00\n                ])\n            ]), k);\n            v = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(v, k);\n            v = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(v, k);\n            T = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(v);\n        }\n        this.k = T;\n        return this;\n    }\n    signRandomK() {\n        this.randomK();\n        return this.sign();\n    }\n    toString() {\n        let obj = {};\n        if (this.hashbuf) obj.hashbuf = this.hashbuf.toString('hex');\n        if (this.privkey) obj.privkey = this.privkey.toString();\n        if (this.pubkey) obj.pubkey = this.pubkey.toString();\n        if (this.sig) obj.sig = this.sig.toString();\n        if (this.k) obj.k = this.k.toString();\n        return JSON.stringify(obj);\n    }\n    // Information about public key recovery:\n    // https://bitcointalk.org/index.php?topic=6430.0\n    // http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\n    toPublicKey() {\n        let i = this.sig.i;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(i === 0 || i === 1 || i === 2 || i === 3, 'i must be equal to 0, 1, 2, or 3');\n        let e = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(this.hashbuf);\n        let r = this.sig.r;\n        let s = this.sig.s;\n        // A set LSB signifies that the y-coordinate is odd\n        let isYOdd = i & 1;\n        // The more significant bit specifies whether we should use the\n        // first or second candidate key.\n        let isSecondKey = i >> 1;\n        let n = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN();\n        let G = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG();\n        // 1.1 Let x = r + jn\n        let x = isSecondKey ? r.add(n) : r;\n        let R = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).ecPointFromX(!!isYOdd, x);\n        // 1.4 Check that nR is at infinity\n        let nR = R.mul(n);\n        /* c8 ignore start */ if (!nR.ecPoint.isInfinity()) throw new Error('nR is not a valid curve point');\n        /* c8 ignore stop */ // Compute -e from e\n        let eNeg = e.neg().umod(n);\n        // 1.6.1 Compute Q = r^-1 (sR - eG)\n        // Q = r^-1 (sR + -eG)\n        let rInv = r.invm(n);\n        //let Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n        let Q = R.mul(s).add(G.mul(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(eNeg))).mul(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(rInv));\n        let pubkey = (0, $246eb589bb078d6d$export$2e2bcd8739ae039).fromPoint(Q, this.sig.compressed);\n        return pubkey;\n    }\n    static fromString(str) {\n        let obj = JSON.parse(str);\n        return new $1ef65db4b26d2b16$export$2e2bcd8739ae039(obj);\n    }\n    static sign(hashbuf, privkey, endian) {\n        return new $1ef65db4b26d2b16$export$2e2bcd8739ae039({\n            hashbuf: hashbuf,\n            endian: endian,\n            privkey: privkey\n        }).sign().sig;\n    }\n    static verify(hashbuf, sig, pubkey, endian) {\n        return new $1ef65db4b26d2b16$export$2e2bcd8739ae039({\n            hashbuf: hashbuf,\n            endian: endian,\n            sig: sig,\n            pubkey: pubkey\n        }).verify().verified;\n    }\n}\n\n\n\n\n\n\n\n\nclass $1739481af0c86d04$export$2e2bcd8739ae039 extends (0, $2a1cae3adbd93346$export$2e2bcd8739ae039) {\n    sigError() {\n        if (!(0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(this.hashbuf) || this.hashbuf.length !== 32) return 'hashbuf must be a 32 byte buffer';\n        let sigLength = $1739481af0c86d04$export$2e2bcd8739ae039.getProperSizeBuffer(this.sig.r).length + $1739481af0c86d04$export$2e2bcd8739ae039.getProperSizeBuffer(this.sig.s).length;\n        if (!(sigLength === 64 || sigLength === 65)) return 'signature must be a 64 byte or 65 byte array';\n        let hashbuf = this.endian === 'little' ? (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(this.hashbuf) : this.hashbuf;\n        let P = this.pubkey.point;\n        let G = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG();\n        if (P.ecPoint.isInfinity()) return true; /* c8 ignore next */ \n        let r = this.sig.r;\n        let s = this.sig.s;\n        let p = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)('FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F', 'hex');\n        let n = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN();\n        if (r.gte(p) || s.gte(n)) // (\"Failed >= condition\") \n        return true;\n        let Br = $1739481af0c86d04$export$2e2bcd8739ae039.getProperSizeBuffer(this.sig.r);\n        let Bp = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).pointToCompressed(P);\n        let hash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256(Buffer.concat([\n            Br,\n            Bp,\n            hashbuf\n        ]));\n        let e = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(hash, {\n            endian: 'big'\n        }).umod(n);\n        let sG = G.mul(s);\n        let eP = P.mul(n.sub(e));\n        let R = sG.add(eP);\n        if (R.ecPoint.isInfinity() || !R.hasSquare() || !R.getX().eq(r)) return true;\n        return false;\n    }\n    /**\n   * RFC6979 deterministic nonce generation used from https://reviews.bitcoinabc.org/D2501\n   * \n   * @param privkeybuf \n   * @param msgbuf \n   * @return BN nonce\n   */ nonceFunctionRFC6979(privkeybuf, msgbuf) {\n        let V = Buffer.from(\"0101010101010101010101010101010101010101010101010101010101010101\", \"hex\");\n        let K = Buffer.from(\"0000000000000000000000000000000000000000000000000000000000000000\", \"hex\");\n        let blob = Buffer.concat([\n            privkeybuf,\n            msgbuf,\n            Buffer.from(\"\", \"ascii\"),\n            Buffer.from(\"Schnorr+SHA256  \", \"ascii\")\n        ]);\n        K = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(Buffer.concat([\n            V,\n            Buffer.from('00', 'hex'),\n            blob\n        ]), K);\n        V = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(V, K);\n        K = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(Buffer.concat([\n            V,\n            Buffer.from('01', 'hex'),\n            blob\n        ]), K);\n        V = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(V, K);\n        let k = new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(0);\n        let T;\n        while(true){\n            V = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(V, K);\n            T = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(V);\n            k = T;\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(V.length >= 32, \"V length should be >= 32\");\n            if (k.gt(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(0)) && k.lt((0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN())) break;\n             /* c8 ignore start */ \n            K = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(Buffer.concat([\n                V,\n                Buffer.from(\"00\", 'hex')\n            ]), K);\n            V = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256hmac(V, K);\n        } /* c8 ignore stop */ \n        return k;\n    }\n    /**\n   * @remarks\n   * Important references for schnorr implementation {@link https://spec.nexa.org/forks/2019-05-15-schnorr/}\n   * \n   * @param d the private key\n   * @param e the message to be signed\n   */ _findSignature(d, e) {\n        let n = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN();\n        let G = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG();\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!d.lte(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(0)), 'privkey out of field of curve');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!d.gte(n), 'privkey out of field of curve');\n        let k = this.nonceFunctionRFC6979(d.toBuffer({\n            size: 32\n        }), e.toBuffer({\n            size: 32\n        }));\n        let P = G.mul(d);\n        let R = G.mul(k);\n        // Find deterministic k\n        if (R.hasSquare()) k;\n        else k = n.sub(k);\n        let r = R.getX();\n        let e0 = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer((0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256(Buffer.concat([\n            $1739481af0c86d04$export$2e2bcd8739ae039.getProperSizeBuffer(r),\n            (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).pointToCompressed(P),\n            e.toBuffer({\n                size: 32\n            })\n        ])));\n        let s = e0.mul(d).add(k).mod(n);\n        return {\n            r: r,\n            s: s\n        };\n    }\n    /**\n   * Function written to ensure s or r parts of signature is at least 32 bytes, when converting \n   * from a BN to type Buffer.\n   * The BN type naturally cuts off leading zeros, e.g.\n   * <BN: 4f92d8094f710bc11b93935ac157730dda26c5c2a856650dbd8ebcd730d2d4> 31 bytes\n   * Buffer <00 4f 92 d8 09 4f 71 0b c1 1b 93 93 5a c1 57 73 0d da 26 c5 c2 a8 56 65 0d bd 8e bc d7 30 d2 d4> 32 bytes\n   * Both types are equal, however Schnorr signatures must be a minimum of 64 bytes.\n   * In a previous implementation of this schnorr module, was resulting in 63 byte signatures. \n   * (Although it would have been verified, it's proper to ensure the min requirement)\n   * \n   * @param buf the r or s signature part\n   */ static getProperSizeBuffer(buf) {\n        if (buf.toBuffer().length < 32) return buf.toBuffer({\n            size: 32\n        });\n        return buf.toBuffer();\n    }\n    static sign(hashbuf, privkey, endian) {\n        return new $1739481af0c86d04$export$2e2bcd8739ae039({\n            hashbuf: hashbuf,\n            endian: endian,\n            privkey: privkey\n        }).sign().sig;\n    }\n    static verify(hashbuf, sig, pubkey, endian) {\n        return new $1739481af0c86d04$export$2e2bcd8739ae039({\n            hashbuf: hashbuf,\n            endian: endian,\n            sig: sig,\n            pubkey: pubkey\n        }).verify().verified;\n    }\n}\n\n\n\n\n\n\n\n\n\n\nclass $5d1fb851ba849ee0$export$2e2bcd8739ae039 {\n    static{\n        this.ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'.split('');\n    }\n    constructor(obj){\n        if (Buffer.isBuffer(obj)) {\n            let buf = obj;\n            this.fromBuffer(buf);\n        } else if (typeof obj === 'string') {\n            let str = obj;\n            this.fromString(str);\n        } else if (obj) this.set(obj);\n    }\n    toBuffer() {\n        return this.buf;\n    }\n    toString() {\n        return this.buf ? $5d1fb851ba849ee0$export$2e2bcd8739ae039.encode(this.buf) : \"\";\n    }\n    fromBuffer(buf) {\n        this.buf = buf;\n        return this;\n    }\n    fromString(str) {\n        let buf = $5d1fb851ba849ee0$export$2e2bcd8739ae039.decode(str);\n        this.buf = buf;\n        return this;\n    }\n    set(obj) {\n        this.buf = obj.buf || this.buf || undefined;\n        return this;\n    }\n    static encode(buf) {\n        if (!Buffer.isBuffer(buf)) throw new Error('Input should be a buffer');\n        return (0, $hgUW1$bs58).encode(buf);\n    }\n    static decode(str) {\n        if (typeof str !== 'string') throw new Error('Input should be a string');\n        return Buffer.from((0, $hgUW1$bs58).decode(str));\n    }\n    static validCharacters(chars) {\n        if (Buffer.isBuffer(chars)) chars = chars.toString();\n        return chars.split(\"\").every((char)=>$5d1fb851ba849ee0$export$2e2bcd8739ae039.ALPHABET.includes(char));\n    }\n}\n\n\n\nclass $7daa49d6586b1e1a$export$2e2bcd8739ae039 {\n    constructor(obj){\n        if (Buffer.isBuffer(obj)) {\n            let buf = obj;\n            this.fromBuffer(buf);\n        } else if (typeof obj === 'string') {\n            let str = obj;\n            this.fromString(str);\n        } else if (obj) this.set(obj);\n    }\n    static validChecksum(data, checksum) {\n        if ((0, $hgUW1$isString)(data)) data = Buffer.from((0, $5d1fb851ba849ee0$export$2e2bcd8739ae039).decode(data));\n        if ((0, $hgUW1$isString)(checksum)) checksum = Buffer.from((0, $5d1fb851ba849ee0$export$2e2bcd8739ae039).decode(checksum));\n        if (!checksum) {\n            checksum = data.subarray(-4);\n            data = data.subarray(0, -4);\n        }\n        return $7daa49d6586b1e1a$export$2e2bcd8739ae039.checksum(data).toString('hex') === checksum.toString('hex');\n    }\n    static decode(s) {\n        if (typeof s !== 'string') throw new Error('Input must be a string');\n        let buf = Buffer.from((0, $5d1fb851ba849ee0$export$2e2bcd8739ae039).decode(s));\n        if (buf.length < 4) throw new Error(\"Input string too short\");\n        let data = buf.subarray(0, -4);\n        let csum = buf.subarray(-4);\n        let hash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(data);\n        let hash4 = hash.subarray(0, 4);\n        if (csum.toString('hex') !== hash4.toString('hex')) throw new Error(\"Checksum mismatch\");\n        return data;\n    }\n    static checksum(buffer) {\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buffer).subarray(0, 4);\n    }\n    static encode(buf) {\n        if (!Buffer.isBuffer(buf)) throw new Error('Input must be a buffer');\n        let checkedBuf = Buffer.alloc(buf.length + 4);\n        let hash = $7daa49d6586b1e1a$export$2e2bcd8739ae039.checksum(buf);\n        buf.copy(checkedBuf);\n        hash.copy(checkedBuf, buf.length);\n        return (0, $5d1fb851ba849ee0$export$2e2bcd8739ae039).encode(checkedBuf);\n    }\n    toBuffer() {\n        return this.buf;\n    }\n    toString() {\n        return this.buf ? $7daa49d6586b1e1a$export$2e2bcd8739ae039.encode(this.buf) : \"\";\n    }\n    fromBuffer(buf) {\n        this.buf = buf;\n        return this;\n    }\n    fromString(str) {\n        let buf = $7daa49d6586b1e1a$export$2e2bcd8739ae039.decode(str);\n        this.buf = buf;\n        return this;\n    }\n    set(obj) {\n        this.buf = obj.buf || this.buf || undefined;\n        return this;\n    }\n}\n\n\n\n\n\n\n\n\nclass $9a13d4ba0015a72e$export$2e2bcd8739ae039 {\n    static{\n        /***\n   * Charset containing the 32 symbols used in the base32 encoding.\n   */ this.CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n    }\n    static{\n        /***\n   * Inverted index mapping each symbol into its index within the charset.\n   */ this.CHARSET_INVERSE_INDEX = {\n            'q': 0,\n            'p': 1,\n            'z': 2,\n            'r': 3,\n            'y': 4,\n            '9': 5,\n            'x': 6,\n            '8': 7,\n            'g': 8,\n            'f': 9,\n            '2': 10,\n            't': 11,\n            'v': 12,\n            'd': 13,\n            'w': 14,\n            '0': 15,\n            's': 16,\n            '3': 17,\n            'j': 18,\n            'n': 19,\n            '5': 20,\n            '4': 21,\n            'k': 22,\n            'h': 23,\n            'c': 24,\n            'e': 25,\n            '6': 26,\n            'm': 27,\n            'u': 28,\n            'a': 29,\n            '7': 30,\n            'l': 31\n        };\n    }\n    /***\n   * Encodes the given array of 5-bit integers as a base32-encoded string.\n   *\n   * @param data Array of integers between 0 and 31 inclusive.\n   */ static encode(data) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(data instanceof Array, 'Must be Array');\n        let base32 = '';\n        data.forEach((value)=>{\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(0 <= value && value < 32, 'value ' + value);\n            base32 += this.CHARSET[value];\n        });\n        return base32;\n    }\n    /***\n   * Decodes the given base32-encoded string into an array of 5-bit integers.\n   *\n   * @param base32 \n   */ static decode(base32) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(typeof base32 === 'string', 'Must be base32-encoded string');\n        let data = [];\n        for (let value of base32){\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(value in this.CHARSET_INVERSE_INDEX, 'value ' + value);\n            data.push(this.CHARSET_INVERSE_INDEX[value]);\n        }\n        return data;\n    }\n}\n\n\n\n\nvar $c889a5b1bdeeb100$export$189c6ba3eaa96ac2 = /*#__PURE__*/ function(AddressType) {\n    AddressType[\"PayToPublicKeyHash\"] = \"P2PKH\";\n    AddressType[\"PayToScriptTemplate\"] = \"P2ST\";\n    AddressType[\"GroupIdAddress\"] = \"GROUP\";\n    return AddressType;\n}({});\nclass $c889a5b1bdeeb100$export$2e2bcd8739ae039 {\n    static{\n        this.VALID_PREFIXES = [\n            'nexa',\n            'nexatest'\n        ];\n    }\n    /** @see encodeAddress */ static encode(prefix, type, data) {\n        return this.encodeAddress({\n            prefix: prefix,\n            type: type,\n            data: data\n        });\n    }\n    /**\n   * Encodes a hash from a given type into a Nexa address with the given prefix.\n   *\n   * @param address Object contains Network prefix (E.g.: 'nexa'), Type of address to generate and data to encode.\n   */ static encodeAddress(address) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(typeof address.prefix === 'string' && this.isValidPrefix(address.prefix), 'Invalid prefix: ' + address.prefix + '.');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(typeof address.type === 'string', 'Invalid type: ' + address.type + '.');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(address.data), 'Invalid data: ' + address.data + '.');\n        let eight0 = [\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ];\n        let prefixData = this.prefixToArray(address.prefix).concat([\n            0\n        ]);\n        let versionByte = this.getTypeBits(address.type);\n        let payloadData = this.convertBits(Buffer.concat([\n            Buffer.from([\n                versionByte\n            ]),\n            address.data\n        ]), 8, 5);\n        let checksumData = prefixData.concat(payloadData).concat(eight0);\n        let payload = payloadData.concat(this.checksumToArray(this.polymod(checksumData)));\n        return address.prefix + ':' + (0, $9a13d4ba0015a72e$export$2e2bcd8739ae039).encode(payload);\n    }\n    /**\n   * Decodes the given address into its constituting prefix, type and data. See {@link encodeAddress}.\n   *\n   * @param {string} address Address to decode. E.g.: 'nexa:qpm2qsznhks23z7629mms6s4cwef74vcwvgpsey0xy'.\n   */ static decode(address) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(typeof address === 'string' && this.hasSingleCase(address), 'Invalid address: ' + address + '.');\n        let pieces = address.toLowerCase().split(':');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(pieces.length === 2, 'Missing prefix: ' + address + '.');\n        let prefix = pieces[0];\n        let payload = (0, $9a13d4ba0015a72e$export$2e2bcd8739ae039).decode(pieces[1]);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.validChecksum(prefix, payload), 'Invalid checksum: ' + address + '.');\n        let convertedBits = this.convertBits(payload.slice(0, -8), 5, 8, true);\n        let versionByte = convertedBits.shift();\n        let hash = convertedBits;\n        // no length limits in nexa: validate(getHashSize(versionByte) === hash.length * 8, 'Invalid hash size: ' + address + '.');\n        let type = this.getType(versionByte);\n        return {\n            prefix: prefix,\n            type: type,\n            data: Buffer.from(hash)\n        };\n    }\n    /**\n   * Checks whether a string is a valid prefix; ie., it has a single letter case\n   * and is one of the above.\n   * \n   * @param prefix\n   */ static isValidPrefix(prefix) {\n        return this.hasSingleCase(prefix) && this.VALID_PREFIXES.includes(prefix.toLowerCase());\n    }\n    /**\n   * Derives an array from the given prefix to be used in the computation\n   * of the address' checksum.\n   *\n   * @param prefix Network prefix. E.g.: 'nexa'.\n   */ static prefixToArray(prefix) {\n        let result = [];\n        for(let i = 0; i < prefix.length; ++i)result.push(prefix.charCodeAt(i) & 31);\n        return result;\n    }\n    /**\n   * Returns an array representation of the given checksum to be encoded\n   * within the address' payload.\n   *\n   * @param checksum Computed checksum.\n   */ static checksumToArray(checksum) {\n        let result = [];\n        for(let i = 0; i < 8; ++i){\n            result.push(checksum & 31);\n            checksum /= 32;\n        }\n        return result.reverse();\n    }\n    /**\n   * Returns the bit representation of the given type within the version byte.\n   *\n   * @param type Address type. Either 'P2PKH' or 'P2SH'.\n   */ static getTypeBits(type) {\n        switch(type){\n            case \"P2PKH\":\n                return 0;\n            case \"P2ST\":\n                return 152;\n            case \"GROUP\":\n                return 88;\n            default:\n                throw new TypeError('Invalid type: ' + type + '.');\n        }\n    }\n    /**\n   * Retrieves the address type from its bit representation within the\n   * version byte.\n   *\n   * @param versionByte\n   */ static getType(versionByte) {\n        switch(versionByte & 248){\n            case 0:\n                return \"P2PKH\";\n            case 152:\n                return \"P2ST\";\n            case 88:\n                return \"GROUP\";\n            default:\n                throw new Error('Invalid address type in version byte: ' + versionByte + '.');\n        }\n    }\n    /**\n   * Returns true if, and only if, the given string contains either uppercase\n   * or lowercase letters, but not both.\n   *\n   * @param string Input string.\n   */ static hasSingleCase(string) {\n        return string === string.toLowerCase() || string === string.toUpperCase();\n    }\n    /**\n  * Verify that the payload has not been corrupted by checking that the\n  * checksum is valid.\n  *\n  * @param prefix Network prefix. E.g.: 'nexa'.\n  * @param payload Array of 5-bit integers containing the address' payload.\n  */ static validChecksum(prefix, payload) {\n        let prefixData = this.prefixToArray(prefix).concat([\n            0\n        ]);\n        return this.polymod(prefixData.concat(payload)) === 0;\n    }\n    /**\n   * Computes a checksum from the given input data as specified for the CashAddr\n   * format: https://github.com/Bitcoin-UAHF/spec/blob/master/cashaddr.md.\n   *\n   * @param data Array of 5-bit integers over which the checksum is to be computed.\n   */ static polymod(data) {\n        let GENERATOR1 = [\n            0x98,\n            0x79,\n            0xf3,\n            0xae,\n            0x1e\n        ];\n        let GENERATOR2 = [\n            0xf2bc8e61,\n            0xb76d99e2,\n            0x3e5fb3c4,\n            0x2eabe2a8,\n            0x4f43e470\n        ];\n        // Treat c as 8 bits + 32 bits\n        let c0 = 0, c1 = 1, C = 0;\n        for(let j = 0; j < data.length; j++){\n            // Set C to c shifted by 35\n            C = c0 >>> 3;\n            // 0x[07]ffffffff\n            c0 &= 0x07;\n            // Shift as a whole number\n            c0 <<= 5;\n            c0 |= c1 >>> 27;\n            // 0xffffffff >>> 5\n            c1 &= 0x07ffffff;\n            c1 <<= 5;\n            // xor the last 5 bits\n            c1 ^= data[j];\n            for(let i = 0; i < GENERATOR1.length; ++i)if (C & 1 << i) {\n                c0 ^= GENERATOR1[i];\n                c1 ^= GENERATOR2[i];\n            }\n        }\n        c1 ^= 1;\n        // Negative numbers -> large positive numbers\n        if (c1 < 0) {\n            c1 ^= -2147483648;\n            c1 += 1073741824 * 2;\n        }\n        // Unless bitwise operations are used,\n        // numbers are consisting of 52 bits, except\n        // the sign bit. The result is max 40 bits,\n        // so it fits perfectly in one number!\n        return c0 * 1073741824 * 4 + c1;\n    }\n    /**\n   * Converts an array of integers made up of `from` bits into an\n   * array of integers made up of `to` bits. The output array is\n   * zero-padded if necessary, unless strict mode is true.\n   * Original by Pieter Wuille: https://github.com/sipa/bech32.\n   *\n   * @param data Array of integers made up of `from` bits.\n   * @param from Length in bits of elements in the input array.\n   * @param to Length in bits of elements in the output array.\n   * @param strict Require the conversion to be completed without padding.\n   */ static convertBits(data, from, to, strict = false) {\n        let accumulator = 0;\n        let bits = 0;\n        let result = [];\n        let mask = (1 << to) - 1;\n        for(let i = 0; i < data.length; i++){\n            let value = data[i];\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(value < 0 || value >> from !== 0), 'value ' + value);\n            accumulator = accumulator << from | value;\n            bits += from;\n            while(bits >= to){\n                bits -= to;\n                result.push(accumulator >> bits & mask);\n            }\n        }\n        if (!strict) {\n            if (bits > 0) result.push(accumulator << to - bits & mask);\n        } else (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!(bits >= from || accumulator << to - bits & mask), 'Conversion requires padding but strict mode was used');\n        return result;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $92c0719d4ab9ac45$export$393941f88fd16991 = /*#__PURE__*/ function(Opcode) {\n    // push value\n    Opcode[Opcode[\"OP_FALSE\"] = 0] = \"OP_FALSE\";\n    Opcode[Opcode[\"OP_0\"] = 0] = \"OP_0\";\n    Opcode[Opcode[\"OP_PUSHDATA1\"] = 76] = \"OP_PUSHDATA1\";\n    Opcode[Opcode[\"OP_PUSHDATA2\"] = 77] = \"OP_PUSHDATA2\";\n    Opcode[Opcode[\"OP_PUSHDATA4\"] = 78] = \"OP_PUSHDATA4\";\n    Opcode[Opcode[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    Opcode[Opcode[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    Opcode[Opcode[\"OP_TRUE\"] = 81] = \"OP_TRUE\";\n    Opcode[Opcode[\"OP_1\"] = 81] = \"OP_1\";\n    Opcode[Opcode[\"OP_2\"] = 82] = \"OP_2\";\n    Opcode[Opcode[\"OP_3\"] = 83] = \"OP_3\";\n    Opcode[Opcode[\"OP_4\"] = 84] = \"OP_4\";\n    Opcode[Opcode[\"OP_5\"] = 85] = \"OP_5\";\n    Opcode[Opcode[\"OP_6\"] = 86] = \"OP_6\";\n    Opcode[Opcode[\"OP_7\"] = 87] = \"OP_7\";\n    Opcode[Opcode[\"OP_8\"] = 88] = \"OP_8\";\n    Opcode[Opcode[\"OP_9\"] = 89] = \"OP_9\";\n    Opcode[Opcode[\"OP_10\"] = 90] = \"OP_10\";\n    Opcode[Opcode[\"OP_11\"] = 91] = \"OP_11\";\n    Opcode[Opcode[\"OP_12\"] = 92] = \"OP_12\";\n    Opcode[Opcode[\"OP_13\"] = 93] = \"OP_13\";\n    Opcode[Opcode[\"OP_14\"] = 94] = \"OP_14\";\n    Opcode[Opcode[\"OP_15\"] = 95] = \"OP_15\";\n    Opcode[Opcode[\"OP_16\"] = 96] = \"OP_16\";\n    // control\n    Opcode[Opcode[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    Opcode[Opcode[\"OP_INVALID_CONTROL1\"] = 98] = \"OP_INVALID_CONTROL1\";\n    Opcode[Opcode[\"OP_IF\"] = 99] = \"OP_IF\";\n    Opcode[Opcode[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    Opcode[Opcode[\"OP_JUMP\"] = 101] = \"OP_JUMP\";\n    Opcode[Opcode[\"OP_INVALID_CONTROL2\"] = 102] = \"OP_INVALID_CONTROL2\";\n    Opcode[Opcode[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    Opcode[Opcode[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    Opcode[Opcode[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    Opcode[Opcode[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    // stack ops\n    Opcode[Opcode[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    Opcode[Opcode[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    Opcode[Opcode[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    Opcode[Opcode[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    Opcode[Opcode[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    Opcode[Opcode[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    Opcode[Opcode[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    Opcode[Opcode[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    Opcode[Opcode[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    Opcode[Opcode[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    Opcode[Opcode[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    Opcode[Opcode[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    Opcode[Opcode[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    Opcode[Opcode[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    Opcode[Opcode[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    Opcode[Opcode[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    Opcode[Opcode[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    Opcode[Opcode[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    Opcode[Opcode[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    // splice ops\n    Opcode[Opcode[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    Opcode[Opcode[\"OP_SPLIT\"] = 127] = \"OP_SPLIT\";\n    Opcode[Opcode[\"OP_NUM2BIN\"] = 128] = \"OP_NUM2BIN\";\n    Opcode[Opcode[\"OP_BIN2NUM\"] = 129] = \"OP_BIN2NUM\";\n    Opcode[Opcode[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    // bit logic\n    Opcode[Opcode[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    Opcode[Opcode[\"OP_AND\"] = 132] = \"OP_AND\";\n    Opcode[Opcode[\"OP_OR\"] = 133] = \"OP_OR\";\n    Opcode[Opcode[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    Opcode[Opcode[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    Opcode[Opcode[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    Opcode[Opcode[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    Opcode[Opcode[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    // numeric\n    Opcode[Opcode[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    Opcode[Opcode[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    Opcode[Opcode[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    Opcode[Opcode[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    Opcode[Opcode[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    Opcode[Opcode[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    Opcode[Opcode[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    Opcode[Opcode[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    Opcode[Opcode[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    Opcode[Opcode[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    Opcode[Opcode[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    Opcode[Opcode[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    Opcode[Opcode[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    Opcode[Opcode[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    Opcode[Opcode[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    Opcode[Opcode[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    Opcode[Opcode[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    Opcode[Opcode[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    Opcode[Opcode[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    Opcode[Opcode[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    Opcode[Opcode[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    Opcode[Opcode[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    Opcode[Opcode[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    Opcode[Opcode[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    Opcode[Opcode[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    Opcode[Opcode[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    Opcode[Opcode[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    // crypto\n    Opcode[Opcode[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    Opcode[Opcode[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    Opcode[Opcode[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    Opcode[Opcode[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    Opcode[Opcode[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    Opcode[Opcode[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    Opcode[Opcode[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    Opcode[Opcode[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    Opcode[Opcode[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    Opcode[Opcode[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    // timelocks\n    Opcode[Opcode[\"OP_NOP2\"] = 177] = \"OP_NOP2\";\n    Opcode[Opcode[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    Opcode[Opcode[\"OP_NOP3\"] = 178] = \"OP_NOP3\";\n    Opcode[Opcode[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    // expansion\n    Opcode[Opcode[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    Opcode[Opcode[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    Opcode[Opcode[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    Opcode[Opcode[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    Opcode[Opcode[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    Opcode[Opcode[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    Opcode[Opcode[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    Opcode[Opcode[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    // More crypto\n    Opcode[Opcode[\"OP_CHECKDATASIG\"] = 186] = \"OP_CHECKDATASIG\";\n    Opcode[Opcode[\"OP_CHECKDATASIGVERIFY\"] = 187] = \"OP_CHECKDATASIGVERIFY\";\n    // additional byte string operations\n    Opcode[Opcode[\"OP_REVERSEBYTES\"] = 188] = \"OP_REVERSEBYTES\";\n    // Transaction Introspection Opcodes\n    Opcode[Opcode[\"OP_INPUTINDEX\"] = 192] = \"OP_INPUTINDEX\";\n    Opcode[Opcode[\"OP_ACTIVEBYTECODE\"] = 193] = \"OP_ACTIVEBYTECODE\";\n    Opcode[Opcode[\"OP_TXVERSION\"] = 194] = \"OP_TXVERSION\";\n    Opcode[Opcode[\"OP_TXINPUTCOUNT\"] = 195] = \"OP_TXINPUTCOUNT\";\n    Opcode[Opcode[\"OP_TXOUTPUTCOUNT\"] = 196] = \"OP_TXOUTPUTCOUNT\";\n    Opcode[Opcode[\"OP_TXLOCKTIME\"] = 197] = \"OP_TXLOCKTIME\";\n    Opcode[Opcode[\"OP_UTXOVALUE\"] = 198] = \"OP_UTXOVALUE\";\n    Opcode[Opcode[\"OP_UTXOBYTECODE\"] = 199] = \"OP_UTXOBYTECODE\";\n    Opcode[Opcode[\"OP_OUTPOINTHASH\"] = 200] = \"OP_OUTPOINTHASH\";\n    Opcode[Opcode[\"OP_INPUTBYTECODE\"] = 202] = \"OP_INPUTBYTECODE\";\n    Opcode[Opcode[\"OP_INPUTSEQUENCENUMBER\"] = 203] = \"OP_INPUTSEQUENCENUMBER\";\n    Opcode[Opcode[\"OP_OUTPUTVALUE\"] = 204] = \"OP_OUTPUTVALUE\";\n    Opcode[Opcode[\"OP_OUTPUTBYTECODE\"] = 205] = \"OP_OUTPUTBYTECODE\";\n    Opcode[Opcode[\"OP_INPUTTYPE\"] = 206] = \"OP_INPUTTYPE\";\n    Opcode[Opcode[\"OP_OUTPUTTYPE\"] = 207] = \"OP_OUTPUTTYPE\";\n    Opcode[Opcode[\"OP_INPUTVALUE\"] = 208] = \"OP_INPUTVALUE\";\n    // NEXA opcodes\n    Opcode[Opcode[\"OP_PARSE\"] = 230] = \"OP_PARSE\";\n    Opcode[Opcode[\"OP_STORE\"] = 231] = \"OP_STORE\";\n    Opcode[Opcode[\"OP_LOAD\"] = 232] = \"OP_LOAD\";\n    Opcode[Opcode[\"OP_PLACE\"] = 233] = \"OP_PLACE\";\n    Opcode[Opcode[\"OP_PUSH_TX_STATE\"] = 234] = \"OP_PUSH_TX_STATE\";\n    Opcode[Opcode[\"OP_SETBMD\"] = 235] = \"OP_SETBMD\";\n    Opcode[Opcode[\"OP_BIN2BIGNUM\"] = 236] = \"OP_BIN2BIGNUM\";\n    Opcode[Opcode[\"OP_EXEC\"] = 237] = \"OP_EXEC\";\n    Opcode[Opcode[\"OP_MERKLEROOT\"] = 238] = \"OP_MERKLEROOT\";\n    // The first op_code value after all defined opcodes\n    Opcode[Opcode[\"FIRST_UNDEFINED_OP_VALUE\"] = 239] = \"FIRST_UNDEFINED_OP_VALUE\";\n    Opcode[Opcode[\"OP_INVALIDOPCODE\"] = 255] = \"OP_INVALIDOPCODE\";\n    return Opcode;\n}({});\nclass $92c0719d4ab9ac45$export$2e2bcd8739ae039 {\n    constructor(val){\n        if ((0, $hgUW1$isNumber)(val)) this.num = val;\n        else if ((0, $hgUW1$isString)(val)) this.num = $92c0719d4ab9ac45$export$393941f88fd16991[val];\n        else throw new TypeError('Unrecognized val type: \"' + typeof val + '\" for Opcode');\n    }\n    static fromBuffer(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'buf must be Buffer');\n        return new $92c0719d4ab9ac45$export$2e2bcd8739ae039(Number('0x' + buf.toString('hex')));\n    }\n    static fromNumber(num) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNumber)(num), 'num must be number');\n        return new $92c0719d4ab9ac45$export$2e2bcd8739ae039(num);\n    }\n    static fromString(str) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(str), 'str must be string');\n        let value = $92c0719d4ab9ac45$export$393941f88fd16991[str];\n        if (typeof value === 'undefined') throw new TypeError('Invalid opcodestr');\n        return new $92c0719d4ab9ac45$export$2e2bcd8739ae039(value);\n    }\n    static smallInt(n) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNumber)(n), 'n should be number');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(n >= 0 && n <= 16, 'n must be between 0 and 16');\n        if (n === 0) return new $92c0719d4ab9ac45$export$2e2bcd8739ae039('OP_0');\n        return new $92c0719d4ab9ac45$export$2e2bcd8739ae039(81 + n - 1);\n    }\n    /**\n   * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n   */ static isSmallIntOp(opcode) {\n        if (opcode instanceof $92c0719d4ab9ac45$export$2e2bcd8739ae039) opcode = opcode.toNumber();\n        return opcode === 0 || opcode >= 81 && opcode <= 96;\n    }\n    toHex() {\n        return this.num.toString(16);\n    }\n    toBuffer() {\n        return Buffer.from(this.toHex(), 'hex');\n    }\n    toNumber() {\n        return this.num;\n    }\n    toString() {\n        let str = $92c0719d4ab9ac45$export$393941f88fd16991[this.num];\n        if (typeof str === 'undefined') throw new Error('Opcode does not have a string representation');\n        return str;\n    }\n    /**\n   * Will return a string formatted for the console\n   *\n   * @returns Script opcode\n   */ inspect() {\n        return '<Opcode: ' + this.toString() + ', hex: ' + this.toHex() + ', decimal: ' + this.num + '>';\n    }\n    /**\n   * Comes from nexad's script DecodeOP_N function\n   * @param opcode\n   * @returns numeric value in range of 0 to 16\n   */ static decodeOP_N(opcode) {\n        if (opcode === 0) return 0;\n        else if (opcode >= 81 && opcode <= 96) return opcode - 80;\n        else throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n    }\n}\n\n\n\n\nclass $90f45db77a786f2b$export$2e2bcd8739ae039 {\n    constructor(from){\n        this.append = this.add;\n        this.chunks = [];\n        if (!from) return;\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(from)) return $90f45db77a786f2b$export$2e2bcd8739ae039.fromBuffer(from);\n        else if (from instanceof $90f45db77a786f2b$export$2e2bcd8739ae039) return $90f45db77a786f2b$export$2e2bcd8739ae039.fromBuffer(from.toBuffer());\n        else if ((0, $hgUW1$isString)(from)) return $90f45db77a786f2b$export$2e2bcd8739ae039.fromString(from);\n        else if ($90f45db77a786f2b$export$2e2bcd8739ae039._isScriptObject(from)) this.set(from);\n    }\n    static _isScriptObject(obj) {\n        return (0, $hgUW1$isObject)(obj) && 'chunks' in obj && (0, $hgUW1$isArray)(obj.chunks);\n    }\n    static _isScriptChunk(obj) {\n        return (0, $hgUW1$isObject)(obj) && 'opcodenum' in obj;\n    }\n    set(obj) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument($90f45db77a786f2b$export$2e2bcd8739ae039._isScriptObject(obj), 'obj');\n        this.chunks = obj.chunks;\n        return this;\n    }\n    /**\n  * @returns a new empty script\n  */ static empty() {\n        return new $90f45db77a786f2b$export$2e2bcd8739ae039();\n    }\n    static fromBuffer(buffer) {\n        let script = new $90f45db77a786f2b$export$2e2bcd8739ae039();\n        script.chunks = [];\n        let br = new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(buffer);\n        while(!br.finished())try {\n            let opcodenum = br.readUInt8();\n            let len, buf;\n            if (opcodenum > 0 && opcodenum < (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1) {\n                len = opcodenum;\n                script.chunks.push({\n                    buf: br.read(len),\n                    len: len,\n                    opcodenum: opcodenum\n                });\n            } else if (opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1) {\n                len = br.readUInt8();\n                buf = br.read(len);\n                script.chunks.push({\n                    buf: buf,\n                    len: len,\n                    opcodenum: opcodenum\n                });\n            } else if (opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2) {\n                len = br.readUInt16LE();\n                buf = br.read(len);\n                script.chunks.push({\n                    buf: buf,\n                    len: len,\n                    opcodenum: opcodenum\n                });\n            } else if (opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA4) {\n                len = br.readUInt32LE();\n                buf = br.read(len);\n                script.chunks.push({\n                    buf: buf,\n                    len: len,\n                    opcodenum: opcodenum\n                });\n            } else script.chunks.push({\n                opcodenum: opcodenum\n            });\n        } catch (e) {\n            throw e instanceof RangeError ? new Error(`Invalid script buffer: can't parse valid script from given buffer ${buffer.toString('hex')}`) : e;\n        }\n        return script;\n    }\n    toBuffer() {\n        let bw = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        this.chunks.forEach((chunk)=>{\n            bw.writeUInt8(chunk.opcodenum);\n            if (chunk.buf) {\n                if (chunk.opcodenum < (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1) bw.write(chunk.buf);\n                else if (chunk.opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1) {\n                    bw.writeUInt8(chunk.len);\n                    bw.write(chunk.buf);\n                } else if (chunk.opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2) {\n                    bw.writeUInt16LE(chunk.len);\n                    bw.write(chunk.buf);\n                } else if (chunk.opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA4) {\n                    bw.writeUInt32LE(chunk.len);\n                    bw.write(chunk.buf);\n                }\n            }\n        });\n        return bw.concat();\n    }\n    static fromHex(str) {\n        return new $90f45db77a786f2b$export$2e2bcd8739ae039(Buffer.from(str, 'hex'));\n    }\n    static fromString(str) {\n        if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(str) || str.length === 0) return this.fromHex(str);\n        let script = new $90f45db77a786f2b$export$2e2bcd8739ae039();\n        script.chunks = [];\n        let tokens = str.split(' ');\n        let i = 0;\n        while(i < tokens.length){\n            let token = tokens[i];\n            let opcode = new (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)(token);\n            let opcodenum = opcode.toNumber();\n            if ((0, $hgUW1$isUndefined)(opcodenum)) {\n                opcodenum = parseInt(token);\n                if (opcodenum > 0 && opcodenum < (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1) {\n                    script.chunks.push({\n                        buf: Buffer.from(tokens[i + 1].slice(2), 'hex'),\n                        len: opcodenum,\n                        opcodenum: opcodenum\n                    });\n                    i = i + 2;\n                } else throw new Error('Invalid script: ' + JSON.stringify(str));\n            } else if (opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1 || opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2 || opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA4) {\n                if (tokens[i + 2].slice(0, 2) !== '0x') throw new Error('Pushdata data must start with 0x');\n                script.chunks.push({\n                    buf: Buffer.from(tokens[i + 2].slice(2), 'hex'),\n                    len: parseInt(tokens[i + 1]),\n                    opcodenum: opcodenum\n                });\n                i = i + 3;\n            } else {\n                script.chunks.push({\n                    opcodenum: opcodenum\n                });\n                i = i + 1;\n            }\n        }\n        return script;\n    }\n    static fromASM(str) {\n        let script = new $90f45db77a786f2b$export$2e2bcd8739ae039();\n        script.chunks = [];\n        let tokens = str.split(' ');\n        let i = 0;\n        while(i < tokens.length){\n            let token = tokens[i];\n            let opcode = new (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)(token);\n            let opcodenum = opcode.toNumber();\n            if ((0, $hgUW1$isUndefined)(opcodenum)) {\n                let buf = Buffer.from(tokens[i], 'hex');\n                let len = buf.length;\n                if (len >= 0 && len < (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1) opcodenum = len;\n                else if (len < Math.pow(2, 8)) opcodenum = (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1;\n                else if (len < Math.pow(2, 16)) opcodenum = (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2;\n                else if (len < Math.pow(2, 32)) opcodenum = (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA4;\n                script.chunks.push({\n                    buf: buf,\n                    len: buf.length,\n                    opcodenum: opcodenum\n                });\n                i = i + 1;\n            } else {\n                script.chunks.push({\n                    opcodenum: opcodenum\n                });\n                i = i + 1;\n            }\n        }\n        return script;\n    }\n    static _chunkToString(chunk, toASM = false) {\n        let opcodenum = chunk.opcodenum;\n        let str = '';\n        if (!chunk.buf) {\n            // no data chunk\n            if (typeof (0, $92c0719d4ab9ac45$export$393941f88fd16991)[opcodenum] !== 'undefined') {\n                if (toASM) {\n                    // A few cases where the opcode name differs from reverseMap\n                    // aside from 1 to 16 data pushes.\n                    if (opcodenum === 0) // OP_0 -> 0\n                    str = str + ' 0';\n                    else if (opcodenum === 79) // OP_1NEGATE -> 1\n                    str = str + ' -1';\n                    else str = str + ' ' + new (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)(opcodenum).toString();\n                } else str = str + ' ' + new (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)(opcodenum).toString();\n            } else {\n                let numstr = opcodenum.toString(16);\n                if (numstr.length % 2 !== 0) numstr = '0' + numstr;\n                if (toASM) str = str + ' ' + numstr;\n                else str = str + ' ' + '0x' + numstr;\n            }\n        } else {\n            // data chunk\n            if (!toASM && (opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1 || opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2 || opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA4)) str = str + ' ' + new (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)(opcodenum).toString();\n            if (chunk.len > 0) {\n                if (toASM) str = str + ' ' + chunk.buf.toString('hex');\n                else str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n            }\n        }\n        return str;\n    }\n    toASM() {\n        return this.chunks.map((chunk)=>$90f45db77a786f2b$export$2e2bcd8739ae039._chunkToString(chunk, true)).join('').substring(1);\n    }\n    toString() {\n        return this.chunks.map((chunk)=>$90f45db77a786f2b$export$2e2bcd8739ae039._chunkToString(chunk)).join('').substring(1);\n    }\n    toHex() {\n        return this.toBuffer().toString('hex');\n    }\n    inspect() {\n        return `<Script: ${this}>`;\n    }\n    /**\n   * Adds a script element to the end of the script.\n   *\n   * @param param a script element to add\n   * @returns this script instance\n   *\n   */ add(param) {\n        this._addByType(param, false);\n        return this;\n    }\n    /**\n   * Adds a script element at the start of the script.\n   * @param param a script element to add\n   * @returns this script instance\n   */ prepend(param) {\n        this._addByType(param, true);\n        return this;\n    }\n    _addByType(obj, prepend) {\n        if (typeof obj === 'string') this._addOpcode(obj, prepend);\n        else if (typeof obj === 'number') this._addOpcode(obj, prepend);\n        else if (obj instanceof (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)) this._addOpcode(obj, prepend);\n        else if (typeof obj === 'bigint') {\n            if (obj <= 16n) this._addOpcode((0, $92c0719d4ab9ac45$export$2e2bcd8739ae039).smallInt(Number(obj)), prepend);\n            else if (obj === 0x81n) this._addOpcode((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1NEGATE, prepend);\n            else this._addBuffer(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(obj.toString()).toScriptNumBuffer(), prepend);\n        } else if (typeof obj === 'boolean') this._addOpcode(obj ? (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_TRUE : (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE, prepend);\n        else if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(obj)) this._addBuffer(obj, prepend);\n        else if (obj instanceof $90f45db77a786f2b$export$2e2bcd8739ae039) this.chunks = this.chunks.concat(obj.chunks);\n        else if ($90f45db77a786f2b$export$2e2bcd8739ae039._isScriptChunk(obj)) this._insertAtPosition(obj, prepend);\n        else throw new Error('Invalid script chunk');\n    }\n    _insertAtPosition(chunk, prepend) {\n        if (prepend) this.chunks.unshift(chunk);\n        else this.chunks.push(chunk);\n    }\n    _addOpcode(opcode, prepend) {\n        let op;\n        if (typeof opcode === 'number') op = opcode;\n        else if (opcode instanceof (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)) op = opcode.toNumber();\n        else op = new (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039)(opcode).toNumber();\n        this._insertAtPosition({\n            opcodenum: op\n        }, prepend);\n        return this;\n    }\n    _addBuffer(buf, prepend) {\n        let opcodenum;\n        let len = buf.length;\n        if (len >= 0 && len < (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1) opcodenum = len;\n        else if (len < Math.pow(2, 8)) opcodenum = (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1;\n        else if (len < Math.pow(2, 16)) opcodenum = (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2;\n        else if (len < Math.pow(2, 32)) opcodenum = (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA4;\n        else throw new Error(\"You can't push that much data\");\n        this._insertAtPosition({\n            buf: buf,\n            len: len,\n            opcodenum: opcodenum\n        }, prepend);\n        return this;\n    }\n    /**\n   * Compares a script with another script\n   */ equals(script) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(script instanceof $90f45db77a786f2b$export$2e2bcd8739ae039, 'Must provide another script');\n        if (this.chunks.length !== script.chunks.length) return false;\n        for(let i = 0; i < this.chunks.length; i++){\n            if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(this.chunks[i].buf) && !(0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(script.chunks[i].buf)) return false;\n            if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(this.chunks[i].buf) && !this.chunks[i].buf.equals(script.chunks[i].buf)) return false;\n            else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) return false;\n        }\n        return true;\n    }\n    /**\n   * Analogous to nexad's FindAndDelete. Find and delete equivalent chunks,\n   * typically used with push data chunks. Note that this will find and delete\n   * not just the same data, but the same data with the same push data op as\n   * produced by default. i.e., if a pushdata in a tx does not use the minimal\n   * pushdata op, then when you try to remove the data it is pushing, it will not\n   * be removed, because they do not use the same pushdata op.\n   */ findAndDelete(script) {\n        let buf = script.toBuffer();\n        let hex = buf.toString('hex');\n        for(let i = 0; i < this.chunks.length; i++){\n            let script2 = new $90f45db77a786f2b$export$2e2bcd8739ae039({\n                chunks: [\n                    this.chunks[i]\n                ]\n            });\n            let buf2 = script2.toBuffer();\n            let hex2 = buf2.toString('hex');\n            if (hex === hex2) this.chunks.splice(i, 1);\n        }\n        return this;\n    }\n    /**\n   * Comes from nexad's script interpreter CheckMinimalPush function\n   * @returns true if the chunk {i} is the smallest way to push that particular data.\n   */ checkMinimalPush(i) {\n        let chunk = this.chunks[i];\n        let buf = chunk.buf;\n        let opcodenum = chunk.opcodenum;\n        if (!buf) return true;\n        if (buf.length === 0) // Could have used OP_0.\n        return opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_0;\n        else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) // Could have used OP_1 .. OP_16.\n        // return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n        return false;\n        else if (buf.length === 1 && buf[0] === 0x81) // Could have used OP_1NEGATE\n        return false;\n        else if (buf.length <= 75) // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n        return opcodenum === buf.length;\n        else if (buf.length <= 255) // Could have used OP_PUSHDATA.\n        return opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1;\n        else if (buf.length <= 65535) // Could have used OP_PUSHDATA2.\n        return opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2;\n        return true;\n    }\n    /**\n   * Comes from bitcoind's script GetSigOpCount(boolean) function\n   * @param accurate default true\n   * @returns number of signature operations required by this script\n   */ getSignatureOperationsCount(accurate = true) {\n        let n = 0;\n        let lastOpcode = (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_INVALIDOPCODE;\n        this.chunks.forEach((chunk)=>{\n            let opcode = chunk.opcodenum;\n            if (opcode == (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_CHECKSIG || opcode == (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_CHECKSIGVERIFY) n++;\n            else if (opcode == (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_CHECKMULTISIG || opcode == (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_CHECKMULTISIGVERIFY) {\n                if (accurate && lastOpcode >= (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1 && lastOpcode <= (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_16) n += (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039).decodeOP_N(lastOpcode);\n                else n += 20;\n            }\n            lastOpcode = opcode;\n        });\n        return n;\n    }\n    /**\n   * @returns true if the script is only composed of data pushing\n   * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n   */ isPushOnly() {\n        return this.chunks.every((chunk)=>chunk.opcodenum <= (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_16 || chunk.opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA1 || chunk.opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA2 || chunk.opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_PUSHDATA4);\n    }\n    /**\n   * @returns true if this is a pay to script template output script\n   * @remarks for well-known-1 template use {@link isPublicKeyTemplateOut}\n   */ isScriptTemplateOut() {\n        if (this.chunks.length < 3) return false;\n        let hasGroup = this.chunks[0].opcodenum !== (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_0;\n        let minLength = hasGroup ? 4 : 3;\n        let templateIndex = hasGroup ? 2 : 1;\n        let constraintIndex = hasGroup ? 3 : 2;\n        let isTemplate = this.chunks.length >= minLength && (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isHashBuffer(this.chunks[templateIndex].buf) && ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isHashBuffer(this.chunks[constraintIndex].buf) || this.chunks[constraintIndex].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE);\n        if (hasGroup) isTemplate &&= !!(this.chunks[0].buf && this.chunks[0].buf.length >= 32 && // group id\n        this.chunks[1].buf && this.chunks[1].buf.length >= 2 && this.chunks[1].buf.length <= 8 // group amount\n        );\n        if (isTemplate && this.chunks.length > minLength) {\n            let visibleArgs = new $90f45db77a786f2b$export$2e2bcd8739ae039({\n                chunks: this.chunks.slice(minLength)\n            });\n            isTemplate = visibleArgs.isPushOnly();\n        }\n        return isTemplate;\n    }\n    /**\n   * Checks if this script is a valid pay to script template input script\n   * \n   * @returns true if this is a pay to script template form input script\n   * @remarks for well-known-1 template use {@link isPublicKeyTemplateIn}\n   */ isScriptTemplateIn() {\n        // we do not know the length or content of satisfier / template / costraint scripts,\n        // only that must be push-only and template must exist\n        return this.chunks.length > 1 && (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(this.chunks[0].buf) && this.isPushOnly();\n    }\n    /**\n   * @returns true if this is a pay to pubkey template output script (well-known-1, p2pkt)\n   */ isPublicKeyTemplateOut() {\n        if (this.chunks.length < 3) return false;\n        let hasGroup = this.chunks[0].opcodenum !== (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_0;\n        let minLength = hasGroup ? 4 : 3;\n        let templateIndex = hasGroup ? 2 : 1;\n        let constraintIndex = hasGroup ? 3 : 2;\n        let isTemplate = this.chunks.length === minLength && this.chunks[templateIndex].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1 && (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isHashBuffer(this.chunks[constraintIndex].buf);\n        if (hasGroup) isTemplate &&= !!(this.chunks[0].buf && this.chunks[0].buf.length >= 32 && // group id\n        this.chunks[1].buf && this.chunks[1].buf.length >= 2 && this.chunks[1].buf.length <= 8 // group amount\n        );\n        return isTemplate;\n    }\n    /**\n   * @returns true if this is a pay to public key template input script\n   */ isPublicKeyTemplateIn() {\n        if (this.chunks.length != 2) return false;\n        let pubkeyPushBuf = this.chunks[0].buf;\n        let signatureBuf = this.chunks[1].buf;\n        if (signatureBuf && signatureBuf.length >= 64 && signatureBuf.length <= 68 && pubkeyPushBuf?.length === 34) {\n            let pubkeyBuf = $90f45db77a786f2b$export$2e2bcd8739ae039.fromBuffer(pubkeyPushBuf).chunks[0].buf;\n            return pubkeyBuf?.length === 33 && (pubkeyBuf[0] === 0x03 || pubkeyBuf[0] === 0x02);\n        }\n        return false;\n    }\n    /**\n   * @returns true if this is a pay to pubkey hash output script\n   */ isPublicKeyHashOut() {\n        return !!(this.chunks.length === 5 && this.chunks[0].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_DUP && this.chunks[1].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_HASH160 && this.chunks[2].buf && this.chunks[2].buf.length === 20 && this.chunks[3].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_EQUALVERIFY && this.chunks[4].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_CHECKSIG);\n    }\n    /**\n   * @returns {boolean} if this is a pay to public key hash input script\n   */ isPublicKeyHashIn() {\n        if (this.chunks.length != 2) return false;\n        let signatureBuf = this.chunks[0].buf;\n        let pubkeyBuf = this.chunks[1].buf;\n        if (signatureBuf && signatureBuf.length && pubkeyBuf && pubkeyBuf.length) {\n            let version = pubkeyBuf[0];\n            if ((version === 0x04 || version === 0x06 || version === 0x07) && pubkeyBuf.length === 65) return true;\n            else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) return true;\n        }\n        return false;\n    }\n    /**\n   * @returns true if this is a valid standard OP_RETURN output\n   */ isDataOut() {\n        let step1 = this.chunks.length >= 1 && this.chunks[0].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_RETURN && this.toBuffer().length <= 223; // 223 instead of 220 because (+1 for OP_RETURN, +2 for the pushdata opcodes)\n        if (!step1) return false;\n        let chunks = this.chunks.slice(1);\n        let script2 = new $90f45db77a786f2b$export$2e2bcd8739ae039({\n            chunks: chunks\n        });\n        return script2.isPushOnly();\n    }\n    /**\n   * @returns true if this is a valid Token Description OP_RETURN output\n   */ isTokenDescriptionOut() {\n        let step1 = (0, $hgUW1$inRange)(this.chunks.length, 2, 8) && this.chunks[0].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_RETURN && this.chunks[1].len === 4;\n        return step1 && new $90f45db77a786f2b$export$2e2bcd8739ae039({\n            chunks: this.chunks.slice(1)\n        }).isPushOnly();\n    }\n    /**\n   * Will retrieve the Public Key buffer from p2pkt/p2pkh input scriptSig\n   */ getPublicKey() {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.isPublicKeyHashIn() || this.isPublicKeyTemplateIn(), \"Can't retrieve PublicKey from a non-PKT or non-PKH input\");\n        return this.isPublicKeyHashIn() ? this.chunks[1].buf : $90f45db77a786f2b$export$2e2bcd8739ae039.fromBuffer(this.chunks[0].buf).chunks[0].buf;\n    }\n    /**\n   * Will retrieve the Public Key Hash buffer from p2pkh output scriptPubKey\n   */ getPublicKeyHash() {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.isPublicKeyHashOut(), \"Can't retrieve PublicKeyHash from a non-PKH output\");\n        return this.chunks[2].buf;\n    }\n    /**\n   * Will retrieve the Template Hash from p2pkt/p2st output scriptPubKey\n   * \n   * @returns OP_1 if its p2pkt, otherwise the template hash buffer\n   */ getTemplateHash() {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.isPublicKeyTemplateOut() || this.isScriptTemplateOut(), \"Can't retrieve TemplateHash from a non-PST output\");\n        if (this.isPublicKeyTemplateOut()) return (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1;\n        let hasGroup = this.chunks[0].opcodenum !== (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_0;\n        return hasGroup ? this.chunks[2].buf : this.chunks[1].buf;\n    }\n    /**\n   * Will retrieve the Constraint Hash from p2pkt/p2st output scriptPubKey\n   * \n   * @returns The constraint hash buffer, or OP_FALSE if not included\n   */ getConstraintHash() {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.isPublicKeyTemplateOut() || this.isScriptTemplateOut(), \"Can't retrieve ConstraintHash from a non-PST output\");\n        let hasGroup = this.chunks[0].opcodenum !== (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_0;\n        let constraintIndex = hasGroup ? 3 : 2;\n        if (this.isPublicKeyTemplateOut()) return this.chunks[constraintIndex].buf;\n        return this.chunks[constraintIndex].opcodenum === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE ? (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE : this.chunks[constraintIndex].buf;\n    }\n    /**\n   * Will retrieve the Group Identifier number from Token Description OP_RETURN output\n   * \n   * @remarks This method doesn't check if the group id number is fit to NRC1/NRC2 etc. \n   */ getGroupIdType() {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.isTokenDescriptionOut(), \"Can't retrieve GroupIdType from a non Token Description output\");\n        return (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromScriptNumBuffer(this.chunks[1].buf).toNumber();\n    }\n}\n\n\n\n\n\nclass $92cd415860c918d9$export$2e2bcd8739ae039 {\n    /* c8 ignore start */ /** @deprecated use data */ get hashBuffer() {\n        return this.data;\n    }\n    /* c8 ignore stop */ /**\n   * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n   * or an instance of {@link PublicKey} or {@link Script}.\n   *\n   * This is an immutable class, and if the first parameter provided to this constructor is an\n   * `Address` instance, the same argument will be returned.\n   *\n   * An address has two key properties: `network` and `type`. The type is either\n   * `AddressType.PayToPublicKeyHash` (value is the `'P2PKH'` string)\n   * or `AddressType.PayToScriptTemplate` (the string `'P2ST'`). The network is an instance of {@link Network} or network name.\n   * You can quickly check whether an address is of a given kind by using the methods\n   * `isPayToPublicKeyHash` and `isPayToScriptTemplate`\n   *\n   * @example\n   * ```javascript\n   * // validate that an input field is valid\n   * let error = Address.getValidationError(input, 'testnet');\n   * if (!error) {\n   *   let address = new Address(input, 'testnet');\n   * } else {\n   *   // invalid network or checksum (typo?)\n   *   let message = error.messsage;\n   * }\n   *\n   * // get an address from a public key\n   * let address = Address.fromPublicKey(publicKey, 'testnet').toString();\n   * ```\n   *\n   * @param data The encoded data in various formats\n   * @param network The network: 'mainnet' (default) or 'testnet'\n   * @param type The type of address: 'P2ST' (default) or 'P2PKH' or 'GROUP'\n   * @returns A new valid and frozen instance of an Address\n   */ constructor(data, network, type){\n        /** @deprecated use toString */ this.toNexaAddress = this.toString;\n        this.toObject = this.toJSON;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(data), 'First argument is required, please include address data.');\n        if (data instanceof $92cd415860c918d9$export$2e2bcd8739ae039) return data; // Immutable instance\n        if ((0, $hgUW1$isString)(data)) return $92cd415860c918d9$export$2e2bcd8739ae039.fromString(data);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data), \"data must be Address, string or Buffer\");\n        $92cd415860c918d9$export$2e2bcd8739ae039.validateParams(network, type);\n        this.data = data;\n        this.network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network) || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork;\n        this.type = type || (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate;\n    }\n    static validateParams(network, type) {\n        if (network && !(0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network)) throw new TypeError('Second argument must be \"mainnet\" or \"testnet\".');\n        if (type && type !== (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate && type !== (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).GroupIdAddress && type !== (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToPublicKeyHash) throw new TypeError('Third argument must be \"P2ST\", \"P2PKH\" or \"GROUP\"');\n    }\n    /**\n   * @param address string\n   * \n   * @returns A new valid and frozen instance of an Address\n   */ static fromString(address) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(address), 'parameter supplied is not a string.');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(address.length > 34, 'Invalid Address string provided');\n        let parts = (0, $c889a5b1bdeeb100$export$2e2bcd8739ae039).decode(address);\n        let network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(parts.prefix, 'prefix');\n        return new $92cd415860c918d9$export$2e2bcd8739ae039(parts.data, network, parts.type);\n    }\n    static{\n        /** @deprecated use fromString */ this.decodeNexaAddress = this.fromString;\n    }\n    /**\n   * Will return a cashaddr representation of the address. Always return lower case\n   * Can be converted by the caller to uppercase is needed (still valid).\n   *\n   * @returns Nexa address\n   */ toString() {\n        return (0, $c889a5b1bdeeb100$export$2e2bcd8739ae039).encode(this.network.prefix, this.type, this.data);\n    }\n    /**\n   * Will return a string formatted for the console\n   *\n   * @returns {string} Bitcoin address\n   */ inspect() {\n        return `<Address: ${this}, type: ${this.type}, network: ${this.network}>`;\n    }\n    /**\n   * Instantiate an address from an Object\n   *\n   * @param obj - A JSON object with keys: data, network and type\n   * @returns A new valid instance of an Address\n   */ static fromObject(obj) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(obj?.data), 'Must provide a `data` property');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(obj?.type), 'Must provide a `type` property');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(obj.data), `Unexpected data property, expected to be hex.`);\n        let hashBuffer = Buffer.from(obj.data, 'hex');\n        return new $92cd415860c918d9$export$2e2bcd8739ae039(hashBuffer, obj.network, obj.type);\n    }\n    /**\n   * @returns A plain object with the address information\n   */ toJSON() {\n        return {\n            data: this.data.toString('hex'),\n            type: this.type,\n            network: this.network.toString()\n        };\n    }\n    /**\n   * @return true if an address is of pay to public key hash type\n   */ isPayToPublicKeyHash() {\n        return this.type === (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToPublicKeyHash;\n    }\n    /**\n   * @return true if an address is of pay to script template type\n   */ isPayToScriptTemplate() {\n        return this.type === (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate;\n    }\n    /**\n   * @return true if an address is a group token address\n   */ isGroupIdentifierAddress() {\n        return this.type === (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).GroupIdAddress;\n    }\n    /**\n   * Will return a validation error if exists\n   *\n   * @example\n   * ```javascript\n   * // a network mismatch error\n   * let error = Address.getValidationError('nexatest:nqtsq5g567x44x5g54t2wsxz60zwqmyks63rkrddl4stwnzu', 'testnet');\n   * ```\n   *\n   * @param data The encoded data\n   * @param network either a Network instance, 'mainnet', or 'testnet'\n   * @param type The type of address: 'P2ST' or 'GROUP' or 'P2PKH'\n   * @returns The corresponding error message\n   */ static getValidationError(data, network, type) {\n        try {\n            if ((0, $hgUW1$isString)(data)) {\n                let addr = $92cd415860c918d9$export$2e2bcd8739ae039.fromString(data);\n                data = addr.data;\n                if (network && (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network)?.prefix !== addr.network.prefix) throw new Error('Address has mismatched network type.');\n                network = addr.network;\n                if (type && type !== addr.type) throw new Error('Address has mismatched type.');\n                type = addr.type;\n            }\n            this.validateParams(network, type);\n            (0, $c889a5b1bdeeb100$export$2e2bcd8739ae039).encode((0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network)?.prefix || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork.prefix, type || (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate, data);\n        } catch (e) {\n            return e;\n        }\n    }\n    /**\n   * Will return a boolean if an address is valid\n   *\n   * @example\n   * ```javascript\n   * assert(Address.isValid('nexa:nqtsq5g567x44x5g54t2wsxz60zwqmyks63rkrddsfq94pd2', 'mainned'));\n   * ```\n   *\n   * @param data The encoded data\n   * @param network either a Network instance, 'mainnet', or 'testnet'\n   * @param type The type of address: 'P2ST' or 'GROUP' or 'P2PKH'\n   * @returns true if valid\n   */ static isValid(data, network, type) {\n        return !$92cd415860c918d9$export$2e2bcd8739ae039.getValidationError(data, network, type);\n    }\n    /**\n   * Instantiate an address from a PublicKey instance\n   *\n   * @param pubkey the public key instance\n   * @param network either a Network instance, 'mainnet' or 'testnet'\n   * @param type address encoding type\n   * @returns A new valid and frozen instance of an Address\n   */ static fromPublicKey(pubkey, network, type) {\n        let data = this._transformPublicKey(pubkey, type);\n        return new $92cd415860c918d9$export$2e2bcd8739ae039(data, network, type);\n    }\n    /**\n   * Instantiate an address from a non grouped script template\n   *\n   * @param templateHash An instance of a template hash Buffer\n   * @param constraintHash An instance of a constraint hash Buffer\n   * @param visibleArgs An array of push-only args, or hex string represent script buffer, or Script with push args\n   * @param network either a Network instance, 'mainnet' or 'testnet'\n   * @returns A new valid and frozen instance of an Address\n   */ static fromScriptTemplate(templateHash, constraintHash, visibleArgs, network) {\n        let data = $92cd415860c918d9$export$2e2bcd8739ae039._transformScriptTemplate(templateHash, constraintHash, visibleArgs);\n        return new $92cd415860c918d9$export$2e2bcd8739ae039(data, network, (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate);\n    }\n    /**\n   * Internal function to transform a {@link PublicKey}\n   */ static _transformPublicKey(pubkey, type = (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(pubkey instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039), 'Address must be an instance of PublicKey.');\n        if (type === (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToPublicKeyHash) return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160(pubkey.toBuffer());\n        else if (type === (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate) {\n            let constraint = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add(pubkey.toBuffer());\n            let constraintHash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160(constraint.toBuffer());\n            return $92cd415860c918d9$export$2e2bcd8739ae039._transformScriptTemplate((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1, constraintHash);\n        } else throw new Error(\"type must be P2ST or P2PKH\");\n    }\n    /**\n   * Internal function to transform a Script Template params\n   */ static _transformScriptTemplate(templateHash, constraintHash, visibleArgs) {\n        if (templateHash != (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1 && !(0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isHashBuffer(templateHash)) throw new TypeError('templateHash supplied is not a hash buffer or well-known OP_1.');\n        if (constraintHash != (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE && !(0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isHashBuffer(constraintHash)) throw new TypeError('constraintHash supplied is not a hash buffer or OP_FALSE.');\n        let scriptTemplate = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE).add(templateHash).add(constraintHash);\n        if (visibleArgs) {\n            if ((0, $hgUW1$isArray)(visibleArgs)) visibleArgs.forEach((arg)=>scriptTemplate.add(arg));\n            else if (visibleArgs instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) scriptTemplate.add(visibleArgs);\n            else if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(visibleArgs)) scriptTemplate.add((0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromHex(visibleArgs));\n        }\n        return new (0, $35852622c8c617e8$export$2e2bcd8739ae039)().writeVarLengthBuf(scriptTemplate.toBuffer()).toBuffer();\n    }\n    /**\n   * Will return the transaction output type by the address type\n   * \n   * @param address as string\n   * @returns 1 - Template, 0 - otherwise\n   */ static getOutputType(address) {\n        return this.fromString(address).getOutputType();\n    }\n    /**\n   * Will return the transaction output type by the address type\n   * \n   * @returns 1 - Template, 0 - otherwise\n   */ getOutputType() {\n        return this.isPayToScriptTemplate() ? 1 : 0;\n    }\n}\n\n\n\nclass $9e7155c0d97105d3$export$2e2bcd8739ae039 {\n    /**\n   * Instantiate a PrivateKey.\n   * \n   * @param data The private key data\n   * \n   * @remarks Better to use {@linkcode PrivateKey.from} method to init private key from various formats if the formart unknown.\n   *\n   * @example\n   * ```ts\n   * // generate a new random key\n   * let key = new PrivateKey();\n   *\n   * // encode into wallet import format\n   * let exported = key.toWIF();\n   *\n   * // instantiate from the exported (and saved) private key\n   * let imported = PrivateKey.fromWIF(exported);\n   * ```\n   */ constructor(data){\n        this.toObject = this.toJSON;\n        if (data instanceof $9e7155c0d97105d3$export$2e2bcd8739ae039) return data;\n        if ((0, $hgUW1$isNil)(data)) data = {\n            bn: $9e7155c0d97105d3$export$2e2bcd8739ae039._getRandomBN(),\n            compressed: true,\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork\n        };\n        if (!$9e7155c0d97105d3$export$2e2bcd8739ae039._isPrivateKeyParams(data)) throw new TypeError('First argument is an unrecognized data type.');\n        // validation\n        if (!data.bn || data.bn.cmp(new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(0)) === 0) throw new TypeError('Number can not be equal to zero, undefined, null or false');\n        if (!data.bn.lt((0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN())) throw new TypeError('Number must be less than N');\n        this.bn = data.bn;\n        this.compressed = (0, $hgUW1$isUndefined)(data.compressed) ? true : data.compressed;\n        this.network = data.network || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork;\n    }\n    get publicKey() {\n        return this.toPublicKey();\n    }\n    /**\n   * Will return an address for the private key with its defined network\n   * \n   * @param type - optional parameter specifying the desired type of the address.\n   *  default {@link AddressType.PayToScriptTemplate}\n   * \n   * @returns An address generated from the private key\n   */ toAddress(type = (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate) {\n        return (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromPublicKey(this.publicKey, this.network, type);\n    }\n    /**\n   * Will output the PrivateKey encoded as hex string\n   */ toString() {\n        return this.toBuffer().toString('hex');\n    }\n    /**\n   * Will encode the PrivateKey to a WIF string\n   *\n   * @returns A WIF representation of the private key\n   */ toWIF() {\n        let buf;\n        if (this.compressed) buf = Buffer.concat([\n            Buffer.from([\n                this.network.privatekey\n            ]),\n            this.bn.toBuffer({\n                size: 32\n            }),\n            Buffer.from([\n                0x01\n            ])\n        ]);\n        else buf = Buffer.concat([\n            Buffer.from([\n                this.network.privatekey\n            ]),\n            this.bn.toBuffer({\n                size: 32\n            })\n        ]);\n        return (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).encode(buf);\n    }\n    /**\n   * Will return the private key as a BN instance\n   *\n   * @returns A BN instance of the private key\n   */ toBigNumber() {\n        return this.bn;\n    }\n    /**\n   * Will return the private key as a BN buffer\n   *\n   * @returns A buffer of the private key\n   */ toBuffer() {\n        return this.bn.toBuffer({\n            size: 32\n        });\n    }\n    /**\n   * Will return the private key as a BN buffer without leading zero padding\n   *\n   * @returns A buffer of the private key\n   */ toBufferNoPadding() {\n        return this.bn.toBuffer();\n    }\n    /**\n   * Will return the corresponding public key\n   *\n   * @returns A public key generated from the private key\n   */ toPublicKey() {\n        if (!this._pubkey) this._pubkey = (0, $246eb589bb078d6d$export$2e2bcd8739ae039).fromPrivateKey(this);\n        return this._pubkey;\n    }\n    /**\n   * @returns A plain object representation\n   */ toJSON() {\n        return {\n            bn: this.bn.toString('hex'),\n            compressed: this.compressed,\n            network: this.network.toString()\n        };\n    }\n    /**\n   * Will return a string formatted for the console\n   *\n   * @returns Private key details\n   */ inspect() {\n        let uncompressed = !this.compressed ? ', uncompressed' : '';\n        return `<PrivateKey: ${this.toString()}, network: ${this.network}${uncompressed}>`;\n    }\n    /**\n   * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n   */ static fromBuffer(buf, network) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'First argument is expected to be a buffer.');\n        let data = this._transformBuffer(buf, network);\n        return new $9e7155c0d97105d3$export$2e2bcd8739ae039(data);\n    }\n    static{\n        this.fromString = this.fromWIF;\n    }\n    /**\n   * Instantiate a PrivateKey from a WIF string\n   *\n   * @param str - The WIF encoded private key string\n   * @returns A new valid instance of PrivateKey\n   */ static fromWIF(str, network) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(str), 'First argument is expected to be a string.');\n        let data;\n        if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(str)) data = {\n            bn: new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(Buffer.from(str, 'hex')),\n            compressed: true,\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network) || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork\n        };\n        else data = $9e7155c0d97105d3$export$2e2bcd8739ae039._transformWIF(str, network);\n        return new $9e7155c0d97105d3$export$2e2bcd8739ae039(data);\n    }\n    static{\n        this.fromObject = this.fromJSON;\n    }\n    /**\n   * Instantiate a PrivateKey from a plain JavaScript object\n   *\n   * @param obj - The output from privateKey.toObject()\n   */ static fromJSON(obj) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(obj), 'First argument is expected to be an object.');\n        let data = this._transformObject(obj);\n        return new $9e7155c0d97105d3$export$2e2bcd8739ae039(data);\n    }\n    /**\n   * Instantiate a PrivateKey from random bytes\n   *\n   * @param network - Either \"mainnet\" or \"testnet\"\n   * @returns A new valid instance of PrivateKey\n   */ static fromRandom(network) {\n        let data = {\n            bn: $9e7155c0d97105d3$export$2e2bcd8739ae039._getRandomBN(),\n            compressed: true,\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network) || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork\n        };\n        return new $9e7155c0d97105d3$export$2e2bcd8739ae039(data);\n    }\n    /**\n   * Check if there would be any errors when initializing a PrivateKey\n   *\n   * @param data - The encoded data in various formats\n   * @param network - Either \"mainnet\" or \"testnet\"\n   * @returns An error if exists\n   */ static getValidationError(data, network) {\n        try {\n            this.from(data, network);\n        } catch (e) {\n            return e;\n        }\n        return undefined;\n    }\n    /**\n   * Check if the parameters are valid\n   *\n   * @param data - The encoded data in various formats\n   * @param network - Either \"mainnet\" or \"testnet\"\n   * @returns true If the private key would be valid\n   */ static isValid(data, network) {\n        if (!data) return false;\n        return !this.getValidationError(data, network);\n    }\n    /**\n   * Helper to instantiate PrivateKey from different kinds of arguments.\n   */ static from(data, network) {\n        // detect type of data\n        if ((0, $hgUW1$isNil)(data)) return this.fromRandom(network);\n        else if (data instanceof $9e7155c0d97105d3$export$2e2bcd8739ae039) return data;\n        else if (data instanceof (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)) {\n            let info = {\n                bn: data,\n                compressed: true,\n                network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network) || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork\n            };\n            return new $9e7155c0d97105d3$export$2e2bcd8739ae039(info);\n        } else if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data)) return this.fromBuffer(data, network);\n        else if (this._isPrivateKeyParams(data) && data.bn && data.network) return this.fromObject(data);\n        else if ((0, $hgUW1$isString)(data)) return this.fromString(data, network);\n        else throw new TypeError('First argument is an unrecognized data type.');\n    }\n    static _isPrivateKeyParams(data) {\n        return (0, $hgUW1$isObject)(data) && 'bn' in data && 'network' in data;\n    }\n    static _getRandomBN() {\n        let bn;\n        do {\n            let privbuf = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).getRandomBuffer(32);\n            bn = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(privbuf);\n        }while (!bn.lt((0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN()));\n        return bn;\n    }\n    /**\n   * Internal function to transform a WIF Buffer into a private key\n   */ static _transformBuffer(buf, network) {\n        if (buf.length === 32) return {\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network) || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork,\n            bn: (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(buf),\n            compressed: false\n        };\n        let info = {};\n        info.network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(buf[0], 'privatekey');\n        if (!info.network) throw new Error(`Invalid network`);\n        if (network && info.network !== (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network)) throw new TypeError('Private key network mismatch');\n        if (buf.length === 34 && buf[33] === 1) info.compressed = true;\n        else if (buf.length === 33) info.compressed = false;\n        else throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n        info.bn = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(buf.subarray(1, 33));\n        return info;\n    }\n    /**\n   * Internal function to transform a JSON object into a private key\n   */ static _transformObject(data) {\n        return {\n            bn: new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(data.bn, 'hex'),\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(data.network) || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork,\n            compressed: data.compressed\n        };\n    }\n    /**\n   * Internal function to transform a WIF string into a private key\n   */ static _transformWIF(str, network) {\n        return this._transformBuffer((0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).decode(str), network);\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $824be92afb10ca74$export$b9181e523c619f72 extends Error {\n    constructor(arg){\n        super(`Invalid derivation argument: got ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$b59b0d37c3755b05 extends Error {\n    constructor(arg){\n        super(`Invalid derivation path, it should look like: \"m/1/100\", got \"${arg}\"`);\n    }\n}\nclass $824be92afb10ca74$export$f3983d7477e5f2f4 extends Error {\n    constructor(char, data){\n        super(`Invalid Base58 character: ${char} in ${data}`);\n    }\n}\nclass $824be92afb10ca74$export$11fc854522c14d8d extends Error {\n    constructor(arg){\n        super(`Invalid Base58 checksum for ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$e84f5e0e00fb0c4b extends Error {\n    constructor(arg){\n        super(`Invalid length for xprivkey string in ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$a1d2727a53328ff extends Error {\n    constructor(arg){\n        super(`Invalid version for network: got ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$7f451ba410ad3fb extends Error {\n    constructor(arg){\n        super(`Invalid network: must be \"mainnet\" or \"testnet\", got ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$c8ad90567a3adc29 extends Error {\n    constructor(arg){\n        super(`Invalid entropy: must be an hexa string or binary buffer, got ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$136e7f0d62b8ef6f extends Error {\n    constructor(arg){\n        super(`Invalid entropy: more than 512 bits is non standard, got ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$18f1c215e936cdfa extends Error {\n    constructor(arg){\n        super(`Invalid entropy: at least 128 bits needed, got ${arg}`);\n    }\n}\nclass $824be92afb10ca74$export$f1e27c60caf56b0a extends Error {\n    constructor(){\n        super(`Argument is an extended private key`);\n    }\n}\nclass $824be92afb10ca74$export$1efb2ac49bec6b75 extends Error {\n    constructor(){\n        super(`Invalid argument: creating a hardened path requires an HDPrivateKey`);\n    }\n}\n\n\n\n\nclass $850698057fd6f95c$export$2e2bcd8739ae039 {\n    static{\n        this.Hardened = 0x80000000;\n    }\n    static{\n        this.MaxIndex = 2 * $850698057fd6f95c$export$2e2bcd8739ae039.Hardened;\n    }\n    static{\n        this.RootElementAlias = [\n            'm',\n            'M',\n            'm\\'',\n            'M\\''\n        ];\n    }\n    static{\n        this.VersionSize = 4;\n    }\n    static{\n        this.DepthSize = 1;\n    }\n    static{\n        this.ParentFingerPrintSize = 4;\n    }\n    static{\n        this.ChildIndexSize = 4;\n    }\n    static{\n        this.ChainCodeSize = 32;\n    }\n    static{\n        this.CheckSumSize = 4;\n    }\n    static{\n        this.DataSize = 78;\n    }\n    static{\n        this.SerializedByteSize = 82;\n    }\n    static{\n        this.VersionStart = 0;\n    }\n    static{\n        this.VersionEnd = $850698057fd6f95c$export$2e2bcd8739ae039.VersionStart + $850698057fd6f95c$export$2e2bcd8739ae039.VersionSize;\n    }\n    static{\n        this.DepthStart = $850698057fd6f95c$export$2e2bcd8739ae039.VersionEnd;\n    }\n    static{\n        this.DepthEnd = $850698057fd6f95c$export$2e2bcd8739ae039.DepthStart + $850698057fd6f95c$export$2e2bcd8739ae039.DepthSize;\n    }\n    static{\n        this.ParentFingerPrintStart = $850698057fd6f95c$export$2e2bcd8739ae039.DepthEnd;\n    }\n    static{\n        this.ParentFingerPrintEnd = $850698057fd6f95c$export$2e2bcd8739ae039.ParentFingerPrintStart + $850698057fd6f95c$export$2e2bcd8739ae039.ParentFingerPrintSize;\n    }\n    static{\n        this.ChildIndexStart = $850698057fd6f95c$export$2e2bcd8739ae039.ParentFingerPrintEnd;\n    }\n    static{\n        this.ChildIndexEnd = $850698057fd6f95c$export$2e2bcd8739ae039.ChildIndexStart + $850698057fd6f95c$export$2e2bcd8739ae039.ChildIndexSize;\n    }\n    static{\n        this.ChainCodeStart = $850698057fd6f95c$export$2e2bcd8739ae039.ChildIndexEnd;\n    }\n    static{\n        this.ChainCodeEnd = $850698057fd6f95c$export$2e2bcd8739ae039.ChainCodeStart + $850698057fd6f95c$export$2e2bcd8739ae039.ChainCodeSize;\n    }\n    /**\n  * Util function that splits a string path into a derivation index array.\n  * It will return null if the string path is malformed.\n  * It does not validate if indexes are in bounds.\n  *\n  * @param path\n  */ static getDerivationIndexes(path) {\n        // Special cases:\n        if (this.RootElementAlias.includes(path)) return [];\n        let steps = path.split('/');\n        if (!this.RootElementAlias.includes(steps[0])) return null;\n        let indexes = steps.slice(1).map((step)=>{\n            let isHardened = step.slice(-1) === \"'\";\n            if (isHardened) step = step.slice(0, -1);\n            if (!step || step[0] === '-') return NaN;\n            let index = +step; // cast to number\n            if (isHardened) index += this.Hardened;\n            return index;\n        });\n        return indexes.some(isNaN) ? null : indexes;\n    }\n    static _validateNetwork(data, networkArg, isPrivate = false) {\n        let network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(networkArg);\n        if (!network) return new (0, $824be92afb10ca74$export$7f451ba410ad3fb)(networkArg);\n        let version = data.subarray(this.VersionStart, this.VersionEnd);\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(version) !== (isPrivate ? network.xprivkey : network.xpubkey)) return new (0, $824be92afb10ca74$export$a1d2727a53328ff)(version);\n        return null;\n    }\n    /**\n   * Verifies that a given serialized hd key in base58 with checksum format\n   * is valid.\n   *\n   * @param data - the serialized hd key\n   * @param network - optional, if present, checks that the network provided matches the network serialized.\n   */ static isValidSerialized(data, network, isPrivate = false) {\n        return (0, $hgUW1$isNull)(this.getSerializedError(data, network, isPrivate));\n    }\n    /**\n   * Checks what's the error that causes the validation of a serialized public key\n   * in base58 with checksum to fail.\n   *\n   * @param data - the serialized hd key\n   * @param network - optional, if present, checks that the network provided matches the network serialized.\n   */ static getSerializedError(data, network, isPrivate = false) {\n        if (!((0, $hgUW1$isString)(data) || (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data))) return new TypeError('Expected string or buffer');\n        if (!(0, $5d1fb851ba849ee0$export$2e2bcd8739ae039).validCharacters(data)) return new (0, $824be92afb10ca74$export$f3983d7477e5f2f4)('(unknown)', data);\n        try {\n            data = (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).decode(data);\n        } catch  {\n            return new (0, $824be92afb10ca74$export$11fc854522c14d8d)(data);\n        }\n        if (data.length !== $850698057fd6f95c$export$2e2bcd8739ae039.DataSize) return new (0, $824be92afb10ca74$export$e84f5e0e00fb0c4b)(data);\n        if (!(0, $hgUW1$isUndefined)(network)) {\n            let error = this._validateNetwork(data, network, isPrivate);\n            if (error) return error;\n        }\n        if (!isPrivate) {\n            let version = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(data.subarray(0, 4));\n            if (version === (0, $a89918d61ea4dca0$export$f09b1917886389c3).mainnet.xprivkey || version === (0, $a89918d61ea4dca0$export$f09b1917886389c3).testnet.xprivkey) return new (0, $824be92afb10ca74$export$f1e27c60caf56b0a)();\n        }\n        return null;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $ef69ee312dbfbba6$export$2e2bcd8739ae039 {\n    static{\n        this.PublicKeySize = 33;\n    }\n    static{\n        this.PublicKeyStart = (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeEnd;\n    }\n    static{\n        this.PublicKeyEnd = this.PublicKeyStart + this.PublicKeySize;\n    }\n    static{\n        this.ChecksumStart = this.PublicKeyEnd;\n    }\n    static{\n        this.ChecksumEnd = this.ChecksumStart + (0, $850698057fd6f95c$export$2e2bcd8739ae039).CheckSumSize;\n    }\n    /**\n   * The representation of an hierarchically derived public key.\n   *\n   * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n   *\n   * @param arg\n   */ constructor(arg){\n        this.toJSON = this.toObject;\n        if ((0, $hgUW1$isNil)(arg)) throw new TypeError(\"Must supply an argument to create a HDPublicKey\");\n        if (arg instanceof $ef69ee312dbfbba6$export$2e2bcd8739ae039) return arg;\n        let params = $ef69ee312dbfbba6$export$2e2bcd8739ae039._classifyArgument(arg);\n        this.publicKey = params.publicKey;\n        this.network = params.network;\n        this.depth = params.depth;\n        this.parentFingerPrint = params.parentFingerPrint;\n        this.fingerPrint = params.fingerPrint;\n        this.chainCode = params.chainCode;\n        this.childIndex = params.childIndex;\n        this.xpubkey = params.xpubkey;\n        this.checksum = params.checksum;\n    }\n    static _classifyArgument(arg) {\n        if ((0, $hgUW1$isString)(arg) || (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(arg)) {\n            let xpubkey = arg.toString();\n            if ((0, $850698057fd6f95c$export$2e2bcd8739ae039).isValidSerialized(xpubkey)) return this._buildFromSerialized(xpubkey);\n            throw (0, $850698057fd6f95c$export$2e2bcd8739ae039).getSerializedError(arg);\n        }\n        if (this._isIHDPubKey(arg)) return arg;\n        if (this._isMinimalDtoObject(arg)) return this._buildFromMinimalObject(arg);\n        if (this._isDtoObject(arg)) return this._buildFromObject(arg);\n        if (this._isIHDPrivKey(arg)) return this._buildFromHDPrivateKey(arg);\n        throw new TypeError('Invalid argument type for creation, must be string, json, buffer, or object');\n    }\n    static _isDtoObject(data) {\n        return (0, $hgUW1$isObject)(data) && 'xpubkey' in data && !('privateKey' in data) && 'publicKey' in data && (0, $hgUW1$isString)(data.publicKey);\n    }\n    static _isMinimalDtoObject(data) {\n        return (0, $hgUW1$isObject)(data) && !('xpubkey' in data) && !('privateKey' in data) && 'publicKey' in data && (0, $hgUW1$isString)(data.publicKey);\n    }\n    static _isIHDPubKey(data) {\n        return (0, $hgUW1$isObject)(data) && 'xpubkey' in data && !('privateKey' in data) && 'publicKey' in data && data.publicKey instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039);\n    }\n    static _isIHDPrivKey(data) {\n        return (0, $hgUW1$isObject)(data) && 'privateKey' in data && (0, $hgUW1$isObject)(data.privateKey) && 'bn' in data.privateKey;\n    }\n    /**\n   * Verifies that a given path is valid.\n   *\n   * @param arg\n   * @return {boolean}\n   */ static isValidPath(arg) {\n        if ((0, $hgUW1$isString)(arg)) {\n            let indexes = (0, $850698057fd6f95c$export$2e2bcd8739ae039).getDerivationIndexes(arg);\n            return indexes !== null && indexes.every($ef69ee312dbfbba6$export$2e2bcd8739ae039.isValidPath);\n        }\n        if ((0, $hgUW1$isNumber)(arg)) return arg >= 0 && arg < (0, $850698057fd6f95c$export$2e2bcd8739ae039).Hardened;\n        return false;\n    }\n    /**\n   * Create a HDPublicKey from a buffer argument\n   *\n   * @param buf\n   */ static fromBuffer(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'No valid Buffer was provided');\n        return new $ef69ee312dbfbba6$export$2e2bcd8739ae039(buf);\n    }\n    /**\n   * Return a buffer representation of the xpubkey\n   */ toBuffer() {\n        return Buffer.from(this.xpubkey);\n    }\n    static fromString(xpubkey) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(xpubkey), 'No valid string was provided');\n        return new $ef69ee312dbfbba6$export$2e2bcd8739ae039(xpubkey);\n    }\n    /**\n   * Returns the base58 checked representation of the public key\n   * @return a string starting with \"xpub...\" in livenet\n   */ toString() {\n        return this.xpubkey;\n    }\n    /**\n   * Returns the console representation of this extended public key.\n   */ inspect() {\n        return `<HDPublicKey: ${this}>`;\n    }\n    static fromObject(arg) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(arg), 'No valid argument was provided');\n        return new $ef69ee312dbfbba6$export$2e2bcd8739ae039(arg);\n    }\n    static fromMinimalObject(arg) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(arg), 'No valid argument was provided');\n        let params = this._buildFromMinimalObject(arg);\n        return new $ef69ee312dbfbba6$export$2e2bcd8739ae039(params);\n    }\n    /**\n   * Returns a plain JavaScript object with information to reconstruct a key.\n   */ toObject() {\n        return {\n            network: this.network.name,\n            depth: this.depth,\n            fingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(this.fingerPrint),\n            parentFingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(this.parentFingerPrint),\n            childIndex: this.childIndex,\n            chainCode: this.chainCode.toString('hex'),\n            publicKey: this.publicKey.toString(),\n            checksum: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(this.checksum),\n            xpubkey: this.xpubkey\n        };\n    }\n    /**\n   * Will return an address for the hdpubkey with its defined network\n   * \n   * @param type - optional parameter specifying the desired type of the address.\n   *  default {@link AddressType.PayToScriptTemplate}\n   * \n   * @returns An address generated from the hd public key\n   */ toAddress(type = (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToScriptTemplate) {\n        return (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromPublicKey(this.publicKey, this.network, type);\n    }\n    /**\n   * Get a derivated child based on a string or number.\n   *\n   * If the first argument is a string, it's parsed as the full path of\n   * derivation. Valid values for this argument include \"m\" (which returns the\n   * same public key), \"m/0/1/40/2/1000\".\n   *\n   * Note that hardened keys can't be derived from a public extended key.\n   *\n   * If the first argument is a number, the child with that index will be\n   * derived. See the example usage for clarification.\n   *\n   * @example\n   * ```javascript\n   * let parent = new HDPublicKey('xpub...');\n   * let child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n   * let copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n   * assert(child_0_1_2.xpubkey === copy_of_child_0_1_2.xpubkey);\n   * ```\n   *\n   * @param {string|number} arg\n   */ deriveChild(arg, hardened) {\n        if ((0, $hgUW1$isNumber)(arg)) return this._deriveWithNumber(arg, hardened);\n        if ((0, $hgUW1$isString)(arg)) return this._deriveFromString(arg);\n        throw new (0, $824be92afb10ca74$export$b9181e523c619f72)(arg);\n    }\n    _deriveWithNumber(index, hardened) {\n        if (index >= (0, $850698057fd6f95c$export$2e2bcd8739ae039).Hardened || hardened) throw new (0, $824be92afb10ca74$export$1efb2ac49bec6b75)();\n        if (index < 0) throw new (0, $824be92afb10ca74$export$b59b0d37c3755b05)(index);\n        let indexBuffer = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(index);\n        let data = Buffer.concat([\n            this.publicKey.toBuffer(),\n            indexBuffer\n        ]);\n        let hash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha512hmac(data, this.chainCode);\n        let leftPart = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(hash.subarray(0, 32), {\n            size: 32\n        });\n        let chainCode = hash.subarray(32, 64);\n        let publicKey;\n        try {\n            publicKey = (0, $246eb589bb078d6d$export$2e2bcd8739ae039).fromPoint((0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG().mul(leftPart).add(this.publicKey.point));\n        } catch  {\n            return this._deriveWithNumber(index + 1);\n        }\n        let buffers = {\n            version: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(this.network.xpubkey),\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsSingleByteBuffer(this.depth + 1),\n            parentFingerPrint: this.fingerPrint,\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(index),\n            publicKey: publicKey.toBuffer(),\n            chainCode: chainCode\n        };\n        let derived = $ef69ee312dbfbba6$export$2e2bcd8739ae039._buildFromBuffers(buffers);\n        return new $ef69ee312dbfbba6$export$2e2bcd8739ae039(derived);\n    }\n    _deriveFromString(path) {\n        if (path.includes(\"'\")) throw new (0, $824be92afb10ca74$export$1efb2ac49bec6b75)();\n        if (!$ef69ee312dbfbba6$export$2e2bcd8739ae039.isValidPath(path)) throw new (0, $824be92afb10ca74$export$b59b0d37c3755b05)(path);\n        const deriveKeys = (baseKey, indexes)=>{\n            return indexes.reduce((prev, idx)=>prev._deriveWithNumber(idx), baseKey);\n        };\n        let indexes = (0, $850698057fd6f95c$export$2e2bcd8739ae039).getDerivationIndexes(path);\n        return deriveKeys(this, indexes);\n    }\n    static _buildFromObject(arg) {\n        return {\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(arg.network),\n            depth: arg.depth,\n            fingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.fingerPrint),\n            parentFingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.parentFingerPrint),\n            childIndex: arg.childIndex,\n            chainCode: Buffer.from(arg.chainCode, 'hex'),\n            xpubkey: arg.xpubkey,\n            checksum: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.checksum),\n            publicKey: (0, $246eb589bb078d6d$export$2e2bcd8739ae039).fromString(arg.publicKey, undefined, (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(arg.network))\n        };\n    }\n    static _buildFromMinimalObject(arg) {\n        let buffers = {\n            version: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer((0, $a89918d61ea4dca0$export$f09b1917886389c3).get(arg.network).xpubkey),\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsSingleByteBuffer(arg.depth),\n            parentFingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.parentFingerPrint),\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.childIndex),\n            chainCode: Buffer.from(arg.chainCode, 'hex'),\n            publicKey: Buffer.from(arg.publicKey, 'hex')\n        };\n        return this._buildFromBuffers(buffers);\n    }\n    static _buildFromHDPrivateKey(hdPrivateKey) {\n        let point = (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getG().mul(hdPrivateKey.privateKey.bn);\n        let buffers = {\n            version: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(hdPrivateKey.network.xpubkey),\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsSingleByteBuffer(hdPrivateKey.depth),\n            parentFingerPrint: hdPrivateKey.parentFingerPrint,\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(hdPrivateKey.childIndex),\n            chainCode: hdPrivateKey.chainCode,\n            publicKey: (0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).pointToCompressed(point)\n        };\n        return this._buildFromBuffers(buffers);\n    }\n    static _buildFromSerialized(xpubkey) {\n        let decoded = (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).decode(xpubkey);\n        let buffers = {\n            version: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).VersionStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).VersionEnd),\n            depth: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).DepthStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).DepthEnd),\n            parentFingerPrint: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintEnd),\n            childIndex: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).ChildIndexStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChildIndexEnd),\n            chainCode: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeEnd),\n            publicKey: decoded.subarray(this.PublicKeyStart, this.PublicKeyEnd),\n            checksum: decoded.subarray(this.ChecksumStart, this.ChecksumEnd)\n        };\n        return this._buildFromBuffers(buffers);\n    }\n    /**\n   * Receives a object with buffers in all the properties and populates the\n   * internal structure\n   *\n   * @param arg\n   */ static _buildFromBuffers(arg) {\n        $ef69ee312dbfbba6$export$2e2bcd8739ae039._validateBufferArguments(arg);\n        let sequence = [\n            arg.version,\n            arg.depth,\n            arg.parentFingerPrint,\n            arg.childIndex,\n            arg.chainCode,\n            arg.publicKey\n        ];\n        let concat = Buffer.concat(sequence);\n        let checksum = (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).checksum(concat);\n        if (!arg.checksum || !arg.checksum.length) arg.checksum = checksum;\n        else if (arg.checksum.toString('hex') !== checksum.toString('hex')) throw new (0, $824be92afb10ca74$export$11fc854522c14d8d)(concat);\n        let network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).get((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(arg.version));\n        let publicKey = (0, $246eb589bb078d6d$export$2e2bcd8739ae039).fromBuffer(arg.publicKey, true, network);\n        return {\n            xpubkey: (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).encode(concat),\n            network: network,\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromSingleByteBuffer(arg.depth),\n            publicKey: publicKey,\n            fingerPrint: (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160(publicKey.toBuffer()).subarray(0, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintSize),\n            chainCode: arg.chainCode,\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(arg.childIndex),\n            parentFingerPrint: arg.parentFingerPrint,\n            checksum: arg.checksum\n        };\n    }\n    static _validateBufferArguments(arg) {\n        const checkBuffer = (name, size)=>{\n            let buff = arg[name];\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buff), name + ` argument is not a buffer, it\\'s ${typeof buff}`);\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(buff.length === size, name + ' has not the expected size: found ' + buff.length + ', expected ' + size);\n        };\n        checkBuffer('version', (0, $850698057fd6f95c$export$2e2bcd8739ae039).VersionSize);\n        checkBuffer('depth', (0, $850698057fd6f95c$export$2e2bcd8739ae039).DepthSize);\n        checkBuffer('parentFingerPrint', (0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintSize);\n        checkBuffer('childIndex', (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChildIndexSize);\n        checkBuffer('chainCode', (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeSize);\n        checkBuffer('publicKey', $ef69ee312dbfbba6$export$2e2bcd8739ae039.PublicKeySize);\n        if (arg.checksum?.length) checkBuffer('checksum', (0, $850698057fd6f95c$export$2e2bcd8739ae039).CheckSumSize);\n    }\n}\n\n\nclass $8fc74ca0a6995b3b$export$2e2bcd8739ae039 {\n    static{\n        this.MINIMUM_ENTROPY_BITS = 128;\n    }\n    static{\n        this.BITS_TO_BYTES = 1 / 8;\n    }\n    static{\n        this.MAXIMUM_ENTROPY_BITS = 512;\n    }\n    static{\n        this.PrivateKeySize = 32;\n    }\n    static{\n        this.PrivateKeyStart = (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeEnd + 1;\n    }\n    static{\n        this.PrivateKeyEnd = this.PrivateKeyStart + this.PrivateKeySize;\n    }\n    static{\n        this.ChecksumStart = this.PrivateKeyEnd;\n    }\n    static{\n        this.ChecksumEnd = this.ChecksumStart + (0, $850698057fd6f95c$export$2e2bcd8739ae039).CheckSumSize;\n    }\n    /**\n   * Represents an instance of an hierarchically derived private key.\n   *\n   * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n   */ constructor(arg){\n        this.toJSON = this.toObject;\n        if (arg instanceof $8fc74ca0a6995b3b$export$2e2bcd8739ae039) return arg;\n        let params = $8fc74ca0a6995b3b$export$2e2bcd8739ae039._classifyArgument(arg);\n        this.privateKey = params.privateKey;\n        this.publicKey = params.publicKey ?? params.privateKey.toPublicKey();\n        this.network = params.network;\n        this.depth = params.depth;\n        this.parentFingerPrint = params.parentFingerPrint;\n        this.fingerPrint = params.fingerPrint;\n        this.chainCode = params.chainCode;\n        this.childIndex = params.childIndex;\n        this.xprivkey = params.xprivkey;\n        this.checksum = params.checksum;\n    }\n    static _classifyArgument(arg) {\n        if (!arg) return this._generateRandomly();\n        if ((0, $a89918d61ea4dca0$export$f09b1917886389c3).get(arg)) return this._generateRandomly(arg);\n        if ((0, $hgUW1$isString)(arg) || (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(arg)) {\n            let xprivkey = arg.toString();\n            if ((0, $850698057fd6f95c$export$2e2bcd8739ae039).isValidSerialized(xprivkey, undefined, true)) return this._buildFromSerialized(xprivkey);\n            if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isValidJSON(arg)) return this._buildFromObject(JSON.parse(arg));\n            throw (0, $850698057fd6f95c$export$2e2bcd8739ae039).getSerializedError(arg, undefined, true);\n        }\n        if (this._isIHDPrivKey(arg)) return arg;\n        if (this._isMinimalDtoObject(arg)) return this._buildFromMinimalObject(arg);\n        if (this._isDtoObject(arg)) return this._buildFromObject(arg);\n        throw new TypeError('Invalid argument type for creation, must be string, json, buffer, or object');\n    }\n    get hdPublicKey() {\n        return this.getHDPublicKey();\n    }\n    get xpubkey() {\n        return this.getHDPublicKey().xpubkey;\n    }\n    static _isDtoObject(data) {\n        return (0, $hgUW1$isObject)(data) && 'xprivkey' in data && 'privateKey' in data && (0, $hgUW1$isString)(data.privateKey);\n    }\n    static _isMinimalDtoObject(data) {\n        return (0, $hgUW1$isObject)(data) && !('xprivkey' in data) && 'privateKey' in data && (0, $hgUW1$isString)(data.privateKey);\n    }\n    static _isIHDPrivKey(data) {\n        return (0, $hgUW1$isObject)(data) && 'xprivkey' in data && 'privateKey' in data && data.privateKey instanceof (0, $9e7155c0d97105d3$export$2e2bcd8739ae039);\n    }\n    /**\n   * Verifies that a given path is valid.\n   *\n   * @param arg\n   * @param hardened\n   */ static isValidPath(arg, hardened) {\n        if ((0, $hgUW1$isString)(arg)) {\n            let indexes = (0, $850698057fd6f95c$export$2e2bcd8739ae039).getDerivationIndexes(arg);\n            return indexes !== null && indexes.every((i)=>this.isValidPath(i));\n        }\n        if ((0, $hgUW1$isNumber)(arg)) {\n            if (arg < (0, $850698057fd6f95c$export$2e2bcd8739ae039).Hardened && hardened === true) arg += (0, $850698057fd6f95c$export$2e2bcd8739ae039).Hardened;\n            return arg >= 0 && arg < (0, $850698057fd6f95c$export$2e2bcd8739ae039).MaxIndex;\n        }\n        return false;\n    }\n    static fromString(xprivkey) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(xprivkey), 'No valid string was provided');\n        return new $8fc74ca0a6995b3b$export$2e2bcd8739ae039(xprivkey);\n    }\n    /**\n   * Returns the string representation of this private key (ext privkey).\n   */ toString() {\n        return this.xprivkey;\n    }\n    /**\n   * Build a HDPrivateKey from a buffer\n   *\n   * @param {Buffer} buf\n   */ static fromBuffer(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), 'No valid Buffer was provided');\n        return new $8fc74ca0a6995b3b$export$2e2bcd8739ae039(buf);\n    }\n    /**\n   * Returns a buffer representation of the HDPrivateKey\n   */ toBuffer() {\n        return Buffer.from(this.xprivkey);\n    }\n    /**\n   * Returns a plain object with a representation of this private key.\n   */ toObject() {\n        return {\n            network: this.network.name,\n            depth: this.depth,\n            fingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(this.fingerPrint),\n            parentFingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(this.parentFingerPrint),\n            childIndex: this.childIndex,\n            chainCode: this.chainCode.toString('hex'),\n            privateKey: this.privateKey.toString(),\n            checksum: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(this.checksum),\n            xprivkey: this.xprivkey\n        };\n    }\n    static fromObject(arg) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(arg), 'No valid argument was provided');\n        return new $8fc74ca0a6995b3b$export$2e2bcd8739ae039(arg);\n    }\n    static fromMinimalObject(arg) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(arg), 'No valid argument was provided');\n        let params = this._buildFromMinimalObject(arg);\n        return new $8fc74ca0a6995b3b$export$2e2bcd8739ae039(params);\n    }\n    /**\n   * Generate a private key from a seed, as described in BIP32\n   *\n   * @param seed\n   * @param network\n   * @return HDPrivateKey\n   */ static fromSeed(seed, network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork) {\n        let params = this._buildFromSeed(seed, network);\n        return new $8fc74ca0a6995b3b$export$2e2bcd8739ae039(params);\n    }\n    /**\n   * Get a derived child based on a string or number.\n   *\n   * If the first argument is a string, it's parsed as the full path of\n   * derivation. Valid values for this argument include \"m\" (which returns the\n   * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n   * derivation.\n   *\n   * If the first argument is a number, the child with that index will be\n   * derived. If the second argument is truthy, the hardened version will be\n   * derived. See the example usage for clarification.\n   *\n   * @example\n   * ```javascript\n   * let parent = new HDPrivateKey('xprv...');\n   * let child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n   * let copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n   * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h.xprivkey);\n   * ```\n   *\n   * @param arg\n   * @param hardened\n   * @return HDPrivateKey\n   */ deriveChild(arg, hardened) {\n        if ((0, $hgUW1$isNumber)(arg)) return this._deriveWithNumber(arg, hardened);\n        if ((0, $hgUW1$isString)(arg)) return this._deriveFromString(arg);\n        throw new (0, $824be92afb10ca74$export$b9181e523c619f72)(arg);\n    }\n    _deriveWithNumber(index, hardened) {\n        if (!$8fc74ca0a6995b3b$export$2e2bcd8739ae039.isValidPath(index, hardened)) throw new (0, $824be92afb10ca74$export$b59b0d37c3755b05)(index);\n        hardened = index >= (0, $850698057fd6f95c$export$2e2bcd8739ae039).Hardened ? true : hardened;\n        if (index < (0, $850698057fd6f95c$export$2e2bcd8739ae039).Hardened && hardened === true) index += (0, $850698057fd6f95c$export$2e2bcd8739ae039).Hardened;\n        let indexBuffer = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(index);\n        let data;\n        if (hardened) {\n            // This will use a 32 byte zero padded serialization of the private key\n            let privateKeyBuffer = this.privateKey.toBuffer();\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n            data = Buffer.concat([\n                Buffer.from([\n                    0\n                ]),\n                privateKeyBuffer,\n                indexBuffer\n            ]);\n        } else data = Buffer.concat([\n            this.publicKey.toBuffer(),\n            indexBuffer\n        ]);\n        let hash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha512hmac(data, this.chainCode);\n        let leftPart = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(hash.subarray(0, 32), {\n            size: 32\n        });\n        let chainCode = hash.subarray(32, 64);\n        let privateKey = leftPart.add(this.privateKey.toBigNumber()).umod((0, $ba7e1a38972b2d09$export$2e2bcd8739ae039).getN()).toBuffer({\n            size: 32\n        });\n        if (!(0, $9e7155c0d97105d3$export$2e2bcd8739ae039).isValid(privateKey)) // Index at this point is already hardened, we can pass null as the hardened arg\n        return this._deriveWithNumber(index + 1);\n        let buffers = {\n            version: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(this.network.xprivkey),\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsSingleByteBuffer(this.depth + 1),\n            parentFingerPrint: this.fingerPrint,\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(index),\n            privateKey: privateKey,\n            chainCode: chainCode\n        };\n        let derived = $8fc74ca0a6995b3b$export$2e2bcd8739ae039._buildFromBuffers(buffers);\n        return new $8fc74ca0a6995b3b$export$2e2bcd8739ae039(derived);\n    }\n    _deriveFromString(path) {\n        if (!$8fc74ca0a6995b3b$export$2e2bcd8739ae039.isValidPath(path)) throw new (0, $824be92afb10ca74$export$b59b0d37c3755b05)(path);\n        const deriveKeys = (baseKey, indexes)=>{\n            return indexes.reduce((prev, idx)=>prev._deriveWithNumber(idx), baseKey);\n        };\n        let indexes = (0, $850698057fd6f95c$export$2e2bcd8739ae039).getDerivationIndexes(path);\n        return deriveKeys(this, indexes);\n    }\n    static _buildFromSeed(seed, network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork) {\n        if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(seed)) seed = Buffer.from(seed, 'hex');\n        if (!Buffer.isBuffer(seed)) throw new (0, $824be92afb10ca74$export$c8ad90567a3adc29)(seed);\n        if (seed.length < this.MINIMUM_ENTROPY_BITS * this.BITS_TO_BYTES) throw new (0, $824be92afb10ca74$export$18f1c215e936cdfa)(seed);\n        if (seed.length > this.MAXIMUM_ENTROPY_BITS * this.BITS_TO_BYTES) throw new (0, $824be92afb10ca74$export$136e7f0d62b8ef6f)(seed);\n        let hash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha512hmac(seed, Buffer.from('Bitcoin seed'));\n        let buffers = {\n            version: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(((0, $a89918d61ea4dca0$export$f09b1917886389c3).get(network) || (0, $a89918d61ea4dca0$export$f09b1917886389c3).defaultNetwork).xprivkey),\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsSingleByteBuffer(0),\n            parentFingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(0),\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(0),\n            privateKey: hash.subarray(0, 32),\n            chainCode: hash.subarray(32, 64)\n        };\n        return this._buildFromBuffers(buffers);\n    }\n    static _buildFromObject(arg) {\n        return {\n            network: (0, $a89918d61ea4dca0$export$f09b1917886389c3).get(arg.network),\n            depth: arg.depth,\n            fingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.fingerPrint),\n            parentFingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.parentFingerPrint),\n            childIndex: arg.childIndex,\n            chainCode: Buffer.from(arg.chainCode, 'hex'),\n            xprivkey: arg.xprivkey,\n            checksum: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.checksum),\n            privateKey: (0, $9e7155c0d97105d3$export$2e2bcd8739ae039).fromString(arg.privateKey, arg.network)\n        };\n    }\n    static _buildFromMinimalObject(arg) {\n        let buffers = {\n            version: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer((0, $a89918d61ea4dca0$export$f09b1917886389c3).get(arg.network).xprivkey),\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsSingleByteBuffer(arg.depth),\n            parentFingerPrint: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.parentFingerPrint),\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerAsBuffer(arg.childIndex),\n            chainCode: Buffer.from(arg.chainCode, 'hex'),\n            privateKey: Buffer.from(arg.privateKey, 'hex')\n        };\n        return this._buildFromBuffers(buffers);\n    }\n    static _buildFromSerialized(xprivkey) {\n        let decoded = (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).decode(xprivkey);\n        let buffers = {\n            version: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).VersionStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).VersionEnd),\n            depth: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).DepthStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).DepthEnd),\n            parentFingerPrint: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintEnd),\n            childIndex: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).ChildIndexStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChildIndexEnd),\n            chainCode: decoded.subarray((0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeStart, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeEnd),\n            privateKey: decoded.subarray(this.PrivateKeyStart, this.PrivateKeyEnd),\n            checksum: decoded.subarray(this.ChecksumStart, this.ChecksumEnd)\n        };\n        return this._buildFromBuffers(buffers);\n    }\n    /**\n   * Receives a object with buffers in all the properties and populates the\n   * internal structure\n   */ static _buildFromBuffers(arg) {\n        $8fc74ca0a6995b3b$export$2e2bcd8739ae039._validateBufferArguments(arg);\n        let sequence = [\n            arg.version,\n            arg.depth,\n            arg.parentFingerPrint,\n            arg.childIndex,\n            arg.chainCode,\n            Buffer.alloc(1),\n            arg.privateKey\n        ];\n        let concat = Buffer.concat(sequence);\n        if (!arg.checksum?.length) arg.checksum = (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).checksum(concat);\n        else if (arg.checksum.toString() !== (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).checksum(concat).toString()) throw new (0, $824be92afb10ca74$export$11fc854522c14d8d)(concat);\n        let network = (0, $a89918d61ea4dca0$export$f09b1917886389c3).get((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(arg.version));\n        let privateKey = (0, $9e7155c0d97105d3$export$2e2bcd8739ae039).from((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(arg.privateKey), network);\n        let publicKey = privateKey.toPublicKey();\n        return {\n            xprivkey: (0, $7daa49d6586b1e1a$export$2e2bcd8739ae039).encode(concat),\n            network: network,\n            depth: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromSingleByteBuffer(arg.depth),\n            privateKey: privateKey,\n            publicKey: publicKey,\n            fingerPrint: (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160(publicKey.toBuffer()).subarray(0, (0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintSize),\n            chainCode: arg.chainCode,\n            childIndex: (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).integerFromBuffer(arg.childIndex),\n            parentFingerPrint: arg.parentFingerPrint,\n            checksum: arg.checksum\n        };\n    }\n    static _validateBufferArguments(arg) {\n        const checkBuffer = (name, size)=>{\n            let buff = arg[name];\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buff), name + ' argument is not a buffer');\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(buff.length === size, name + ' has not the expected size: found ' + buff.length + ', expected ' + size);\n        };\n        checkBuffer('version', (0, $850698057fd6f95c$export$2e2bcd8739ae039).VersionSize);\n        checkBuffer('depth', (0, $850698057fd6f95c$export$2e2bcd8739ae039).DepthSize);\n        checkBuffer('parentFingerPrint', (0, $850698057fd6f95c$export$2e2bcd8739ae039).ParentFingerPrintSize);\n        checkBuffer('childIndex', (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChildIndexSize);\n        checkBuffer('chainCode', (0, $850698057fd6f95c$export$2e2bcd8739ae039).ChainCodeSize);\n        checkBuffer('privateKey', this.PrivateKeySize);\n        if (arg.checksum?.length) checkBuffer('checksum', (0, $850698057fd6f95c$export$2e2bcd8739ae039).CheckSumSize);\n    }\n    static _generateRandomly(network) {\n        return this._buildFromSeed((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).getRandomBuffer(64), network);\n    }\n    /**\n   * Will return the corresponding hd public key\n   *\n   * @returns An extended public key generated from the hd private key\n   */ getHDPublicKey() {\n        if (!this._hdPublicKey) this._hdPublicKey = new (0, $ef69ee312dbfbba6$export$2e2bcd8739ae039)(this);\n        return this._hdPublicKey;\n    }\n    /**\n   * Returns the console representation of this extended private key.\n   */ inspect() {\n        return `<HDPrivateKey: ${this}>`;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $62ed62398e988143$export$2e2bcd8739ae039 {\n    static{\n        this.MAGIC_BYTES = Buffer.from('Bitcoin Signed Message:\\n');\n    }\n    constructor(message){\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(message), 'First argument should be a string');\n        this.message = message;\n    }\n    /**\n   * Will sign a message with a given private key.\n   *\n   * @param privateKey An instance of PrivateKey\n   * @returns A base64 encoded compact signature\n   */ sign(privateKey) {\n        let signature = this._sign(privateKey);\n        return signature.toCompact().toString('base64');\n    }\n    /**\n   * Will return a boolean of the signature is valid for a given nexa address.\n   * If it isn't valid, the specific reason is accessible via the \"error\" member.\n   *\n   * @param nexaAddress A nexa address\n   * @param signatureString A base64 encoded compact signature\n   */ verify(nexaAddress, signatureString) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(nexaAddress), 'nexaAddress');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(signatureString) && signatureString.length > 0, 'signatureString');\n        if ((0, $hgUW1$isString)(nexaAddress)) nexaAddress = (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromString(nexaAddress);\n        let signature = (0, $369a157b63fbc3fd$export$2e2bcd8739ae039).fromCompact(Buffer.from(signatureString, 'base64'));\n        // recover the public key\n        let ecdsa = new (0, $1ef65db4b26d2b16$export$2e2bcd8739ae039)();\n        ecdsa.hashbuf = this._magicHash();\n        ecdsa.sig = signature;\n        let publicKey = ecdsa.toPublicKey();\n        let signatureAddress = (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromPublicKey(publicKey, nexaAddress.network, nexaAddress.type);\n        // check that the recovered address and specified address match\n        if (nexaAddress.toString() !== signatureAddress.toString()) {\n            this.error = 'The signature did not match the message digest';\n            return false;\n        }\n        return this._verify(publicKey, signature);\n    }\n    _sign(privateKey) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(privateKey instanceof (0, $9e7155c0d97105d3$export$2e2bcd8739ae039), 'First argument should be an instance of PrivateKey');\n        let hash = this._magicHash();\n        let ecdsa = new (0, $1ef65db4b26d2b16$export$2e2bcd8739ae039)();\n        ecdsa.hashbuf = hash;\n        ecdsa.privkey = privateKey;\n        ecdsa.pubkey = privateKey.toPublicKey();\n        ecdsa.signRandomK();\n        ecdsa.calcI();\n        return ecdsa.sig;\n    }\n    _magicHash() {\n        let prefix1 = (0, $35852622c8c617e8$export$2e2bcd8739ae039).varintBufNum($62ed62398e988143$export$2e2bcd8739ae039.MAGIC_BYTES.length);\n        let messageBuffer = Buffer.from(this.message);\n        let prefix2 = (0, $35852622c8c617e8$export$2e2bcd8739ae039).varintBufNum(messageBuffer.length);\n        let buf = Buffer.concat([\n            prefix1,\n            $62ed62398e988143$export$2e2bcd8739ae039.MAGIC_BYTES,\n            prefix2,\n            messageBuffer\n        ]);\n        let hash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n        return hash;\n    }\n    _verify(publicKey, signature) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(publicKey instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039), 'First argument should be an instance of PublicKey');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(signature instanceof (0, $369a157b63fbc3fd$export$2e2bcd8739ae039), 'Second argument should be an instance of Signature');\n        let hash = this._magicHash();\n        let verified = (0, $1ef65db4b26d2b16$export$2e2bcd8739ae039).verify(hash, signature, publicKey);\n        if (!verified) this.error = 'The signature was invalid';\n        return verified;\n    }\n    /**\n   * Instantiate a message from a message string\n   *\n   * @param str A string of the message\n   * @returns A new instance of a Message\n   */ static fromString(str) {\n        return new $62ed62398e988143$export$2e2bcd8739ae039(str);\n    }\n    /**\n   * Instantiate a message from JSON\n   *\n   * @param json An JSON string or Object with keys: message\n   * @returns A new instance of a Message\n   */ static fromJSON(json) {\n        if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isValidJSON(json)) json = JSON.parse(json);\n        return new $62ed62398e988143$export$2e2bcd8739ae039(json.message);\n    }\n    /**\n   * @returns A plain object with the message information\n   */ toObject() {\n        return {\n            message: this.message\n        };\n    }\n    /**\n   * @returns A JSON representation as string of the message information\n   */ toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    /**\n   * Will return a the string representation of the message\n   */ toString() {\n        return this.message;\n    }\n    /**\n   * Will return a string formatted for the console\n   */ inspect() {\n        return `<Message: ${this}>`;\n    }\n}\n\n\nvar $a0743653d736276e$export$7b9ebdcfe3200497 = /*#__PURE__*/ function(GroupIdFlag) {\n    GroupIdFlag[GroupIdFlag[\"NONE\"] = 0] = \"NONE\";\n    GroupIdFlag[GroupIdFlag[\"COVENANT\"] = 1] = \"COVENANT\";\n    GroupIdFlag[GroupIdFlag[\"HOLDS_NEX\"] = 2] = \"HOLDS_NEX\";\n    GroupIdFlag[GroupIdFlag[\"GROUP_RESERVED_BITS\"] = 65532] = \"GROUP_RESERVED_BITS\";\n    GroupIdFlag[GroupIdFlag[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    return GroupIdFlag;\n}({});\nvar $a0743653d736276e$export$8da1cb8322810fc2 = /*#__PURE__*/ function(GroupIdType) {\n    /** Legacy token */ GroupIdType[GroupIdType[\"LEGACY\"] = 88888888] = \"LEGACY\";\n    /** Token */ GroupIdType[GroupIdType[\"NRC1\"] = 88888890] = \"NRC1\";\n    /** NFT Collection */ GroupIdType[GroupIdType[\"NRC2\"] = 88888891] = \"NRC2\";\n    /** NFT that belongs to a collection */ GroupIdType[GroupIdType[\"NRC3\"] = 88888892] = \"NRC3\";\n    return GroupIdType;\n}({});\n// ts/js does not support enums with bigint, so we use const object for now\nconst $a0743653d736276e$var$AUTH_FLAGS = {\n    /** Is this a controller utxo (forces negative number in amount) */ AUTHORITY: 1n << 63n,\n    /** Can mint tokens */ MINT: 1n << 62n,\n    /** Can melt tokens */ MELT: 1n << 61n,\n    /** Can create authorities */ BATON: 1n << 60n,\n    /** Can change the redeem script */ RESCRIPT: 1n << 59n,\n    /** Can create subgroups */ SUBGROUP: 1n << 58n,\n    NONE: 0n,\n    ALL_FLAG_BITS: 0xffffn << 64n - 16n\n};\nconst $a0743653d736276e$var$ACTIVE_FLAG_BITS = $a0743653d736276e$var$AUTH_FLAGS.AUTHORITY | $a0743653d736276e$var$AUTH_FLAGS.MINT | $a0743653d736276e$var$AUTH_FLAGS.MELT | $a0743653d736276e$var$AUTH_FLAGS.BATON | $a0743653d736276e$var$AUTH_FLAGS.RESCRIPT | $a0743653d736276e$var$AUTH_FLAGS.SUBGROUP;\nclass $a0743653d736276e$export$2e2bcd8739ae039 {\n    static{\n        this.PARENT_GROUP_ID_SIZE = 32;\n    }\n    static{\n        this.authFlags = {\n            ...$a0743653d736276e$var$AUTH_FLAGS,\n            ACTIVE_FLAG_BITS: /** Has all permissions */ $a0743653d736276e$var$ACTIVE_FLAG_BITS,\n            RESERVED_FLAG_BITS: $a0743653d736276e$var$ACTIVE_FLAG_BITS & ~$a0743653d736276e$var$AUTH_FLAGS.ALL_FLAG_BITS\n        };\n    }\n    /**\n   * Calculate a group ID based on the provided inputs. Pass 'null' to opReturnScript if there is not\n   * going to be an OP_RETURN output in the transaction.\n   *\n   * @param outpoint The input outpoint hash hex or buffer\n   * @param opReturnScript opReturn output script\n   * @param authFlag group authority flag (use {@link GroupToken.authFlags})\n   * @param idFlag group id flag\n   * \n   * @returns Object with group id hash buffer and the nonce bigint\n   */ static findGroupId(outpoint, opReturnScript, authFlag, idFlag = 0) {\n        let hash;\n        let groupFlags = 0;\n        let nonce = 0n;\n        if ((0, $hgUW1$isString)(outpoint)) outpoint = Buffer.from(outpoint, 'hex').reverse();\n        if (opReturnScript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) opReturnScript = opReturnScript.toBuffer();\n        do {\n            let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n            nonce += 1n;\n            nonce = nonce & ~this.authFlags.ALL_FLAG_BITS | authFlag;\n            writer.write(outpoint);\n            if (opReturnScript != null) writer.writeVarLengthBuf(opReturnScript);\n            writer.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBigInt(nonce));\n            hash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(writer.toBuffer());\n            groupFlags = hash[30] << 8 | hash[31];\n        }while (groupFlags != idFlag);\n        return {\n            hashBuffer: hash,\n            nonce: nonce\n        };\n    }\n    static _getGroupAddressBuffer(group) {\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(group)) return group;\n        if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(group)) return Buffer.from(group, 'hex');\n        let groupAddress = new (0, $92cd415860c918d9$export$2e2bcd8739ae039)(group);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(groupAddress.isGroupIdentifierAddress(), 'Invalid group address');\n        return groupAddress.data;\n    }\n    /**\n   * Translates a group and additional data into a subgroup identifier\n   *\n   * @param group the group/token address or data buffer\n   * @param data the additional data\n   * \n   * @returns the subgroup id buffer\n   */ static generateSubgroupId(group, data) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(group), 'group is missing');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(data), 'data is missing');\n        group = this._getGroupAddressBuffer(group);\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data)) return Buffer.concat([\n            group,\n            data\n        ]);\n        if ((0, $hgUW1$isNumber)(data)) {\n            let bn = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(data).toBuffer({\n                size: 8,\n                endian: \"little\"\n            });\n            return Buffer.concat([\n                group,\n                bn\n            ]);\n        }\n        if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(data)) return Buffer.concat([\n            group,\n            Buffer.from(data, 'hex')\n        ]);\n        return Buffer.concat([\n            group,\n            Buffer.from(data)\n        ]);\n    }\n    /**\n   * Extract the parent group from the provided subgroup.\n   * \n   * @remarks\n   * If the input is a group but not subgroup, the group itself return.\n   * \n   * @param subgroup the subgroup address or data buffer\n   * @returns the GroupId buffer\n   */ static getParentGroupId(subgroup) {\n        let buf = this._getGroupAddressBuffer(subgroup);\n        if (buf.length < this.PARENT_GROUP_ID_SIZE) throw new Error(\"Invalid subgroup\");\n        return Buffer.from(buf.subarray(0, 32));\n    }\n    /**\n   * Get group amount buffer from BigInt to include in output script\n   *\n   * @param amount\n   */ static getAmountBuffer(amount) {\n        let bw = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        if (amount < 0n) {\n            let bn = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBigInt(BigInt.asUintN(64, amount));\n            bw.writeUInt64LEBN(bn);\n        } else if (amount < 0x10000n) bw.writeUInt16LE(Number(amount));\n        else if (amount < 0x100000000n) bw.writeUInt32LE(Number(amount));\n        else {\n            let bn = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBigInt(amount);\n            bw.writeUInt64LEBN(bn);\n        }\n        return bw.toBuffer();\n    }\n    /**\n   * Get group amount value from Buffer\n   *\n   * @param amountBuf the amount buffer\n   * @param unsigned return value as unsigned bigint, default to false\n   */ static getAmountValue(amountBuf, unsigned = false) {\n        let amount = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(amountBuf, {\n            endian: 'little'\n        }).toBigInt();\n        return unsigned ? amount : BigInt.asIntN(64, amount);\n    }\n    /**\n   * @param authFlag the utxo group quantity/authority\n   * @returns the nonce\n   */ static getNonce(authFlag) {\n        authFlag = BigInt.asUintN(64, authFlag);\n        return authFlag & ~this.authFlags.ALL_FLAG_BITS;\n    }\n    /**\n   * Check if the group id has the flag\n   * \n   * @param groupId the group id address or data buffer\n   * @param groupIdFlag the group id flag\n   * @returns true if this group id has the flag\n   */ static hasIdFlag(groupId, groupIdFlag) {\n        groupId = this._getGroupAddressBuffer(groupId);\n        return groupId.length >= this.PARENT_GROUP_ID_SIZE ? ((groupId[30] << 8 | groupId[31]) & groupIdFlag) == groupIdFlag : false;\n    }\n    /**\n   * Check if this authority and flag fit to this group creation\n   * \n   * @param groupId the group id address or data buffer\n   * @param authFlag the output group quantity/authority\n   * @param groupIdFlag optional. the group id flag\n   * @returns true if this is group creation data\n   */ static isGroupCreation(groupId, authFlag, groupIdFlag = 0) {\n        groupId = this._getGroupAddressBuffer(groupId);\n        authFlag = BigInt.asUintN(64, authFlag);\n        let hasNonce = this.getNonce(authFlag) != 0n;\n        let isAuth = this.isAuthority(authFlag);\n        let hasFlag = this.hasIdFlag(groupId, groupIdFlag);\n        return isAuth && hasNonce && hasFlag;\n    }\n    /**\n   * Check if this group is is subgroup\n   * \n   * @param groupId the group id address or data buffer\n   * @returns true if this group id is subgroup\n   */ static isSubgroup(groupId) {\n        groupId = this._getGroupAddressBuffer(groupId);\n        return groupId.length > this.PARENT_GROUP_ID_SIZE;\n    }\n    /**\n   * Check if the group quantity/authority is Authority flag\n   * \n   * @param authFlag the output group quantity/authority\n   * @returns true if this is authority flag\n   */ static isAuthority(authFlag) {\n        return (authFlag & this.authFlags.AUTHORITY) == this.authFlags.AUTHORITY;\n    }\n    /**\n   * Check if the group quantity/authority allows minting\n   * \n   * @param authFlag the output group quantity/authority\n   * @returns true if this flag allows minting.\n   */ static allowsMint(authFlag) {\n        return (authFlag & ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.MINT)) == ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.MINT);\n    }\n    /**\n   * Check if the group quantity/authority allows melting\n   * \n   * @param authFlag the output group quantity/authority\n   * @returns true if this flag allows melting.\n   */ static allowsMelt(authFlag) {\n        return (authFlag & ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.MELT)) == ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.MELT);\n    }\n    /**\n   * Check if the group quantity/authority allows creation of new authorities\n   * \n   * @param authFlag the output group quantity/authority\n   * @returns true if this flag allows creation of authorities.\n   */ static allowsRenew(authFlag) {\n        return (authFlag & ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.BATON)) == ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.BATON);\n    }\n    /**\n   * Check if the group quantity/authority allows rescript\n   * \n   * @param authFlag the output group quantity/authority\n   * @returns true if this flag allows rescripting.\n   */ static allowsRescript(authFlag) {\n        return (authFlag & ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.RESCRIPT)) == ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.RESCRIPT);\n    }\n    /**\n   * Check if the group quantity/authority allows creation of subgroups\n   * \n   * @param authFlag the output group quantity/authority\n   * @returns true if this flag allows subgroups\n   */ static allowsSubgroup(authFlag) {\n        return (authFlag & ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.SUBGROUP)) == ($a0743653d736276e$export$2e2bcd8739ae039.authFlags.AUTHORITY | $a0743653d736276e$export$2e2bcd8739ae039.authFlags.SUBGROUP);\n    }\n    /**\n  * Verify token description document json signature\n  *\n  * @param jsonDoc the json TDD as string\n  * @param address nexa address that signed the doc\n  * @param signature the signature string. optional - if empty, extract from jsonDoc\n  * \n  * @returns true if signature match\n  */ static verifyJsonDoc(jsonDoc, address, signature) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isEmpty)(jsonDoc), 'jsonDoc is missing');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isEmpty)(address), 'group is missing');\n        let json = jsonDoc.substring(jsonDoc.indexOf('{'), jsonDoc.lastIndexOf('}') + 1);\n        if ((0, $hgUW1$isUndefined)(signature) || (0, $hgUW1$isEmpty)(signature)) signature = JSON.parse(jsonDoc)[1];\n        let msg = new (0, $62ed62398e988143$export$2e2bcd8739ae039)(json);\n        return msg.verify(address, signature);\n    }\n    /**\n   * Sign token description document json\n   *\n   * @param jsonDoc the json TDD as string\n   * @param privKey private key to sign on the doc\n   * \n   * @returns the signature string\n   */ static signJsonDoc(jsonDoc, privKey) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isEmpty)(jsonDoc), 'jsonDoc is missing');\n        let json = jsonDoc.substring(jsonDoc.indexOf('{'), jsonDoc.lastIndexOf('}') + 1); // trimming\n        let msg = new (0, $62ed62398e988143$export$2e2bcd8739ae039)(json);\n        return msg.sign(privKey);\n    }\n}\n\n\nclass $fea109eb8128bf4c$export$2e2bcd8739ae039 {\n    /**\n   * @param to destination address or public key\n   * @param groupId group id buffer or group address or hex id - only if its token output script\n   * @param groupAmount optional. quantity amount buffer or bigint - only if its token output script\n   * \n   * @returns a new pay to public key / script template output for the given address or public key\n   */ static buildScriptTemplateOut(to, groupId, groupAmount) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(to), \"to\", \"must provide an argument\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(to instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039) || to instanceof (0, $92cd415860c918d9$export$2e2bcd8739ae039) || (0, $hgUW1$isString)(to), \"to\", \"must be address or pubkey\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNil)(groupId) && (0, $hgUW1$isNil)(groupAmount) || !(0, $hgUW1$isNil)(groupId) && !(0, $hgUW1$isNil)(groupAmount), \"group data\", \"both must present or both not present\");\n        to = this.parseAddress(to);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(to.isPayToScriptTemplate(), 'Invalid destination address (not a script template)');\n        if ((0, $hgUW1$isString)(groupId)) {\n            if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(groupId)) groupId = Buffer.from(groupId, 'hex');\n            else {\n                let groupIdAddr = (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromString(groupId);\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(groupIdAddr.isGroupIdentifierAddress(), 'Invalid group id address (not a group)');\n                groupId = groupIdAddr.data;\n            }\n        } else if (groupId instanceof (0, $92cd415860c918d9$export$2e2bcd8739ae039)) {\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(groupId.isGroupIdentifierAddress(), 'Invalid group id address (not a group)');\n            groupId = groupId.data;\n        }\n        if (typeof groupAmount === 'bigint') groupAmount = (0, $a0743653d736276e$export$2e2bcd8739ae039).getAmountBuffer(groupAmount);\n        let bfr = new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(to.data).readVarLengthBuffer();\n        let s = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromBuffer(bfr);\n        if (!(0, $hgUW1$isNil)(groupId) && !(0, $hgUW1$isNil)(groupAmount)) {\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(groupId), 'groupId');\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(groupAmount), 'groupAmount');\n            // replace OP_0 with group data\n            s.chunks = s.chunks.slice(1);\n            s.prepend(groupAmount).prepend(groupId);\n        }\n        return s;\n    }\n    /**\n   * @param data the data to embed in the output\n   * @param encoding the type of encoding of the string\n   * \n   * @returns a new OP_RETURN script with data\n   */ static buildDataOut(data, encoding) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isUndefined)(data) || (0, $hgUW1$isString)(data) || (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data) || data instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039), \"data\");\n        if ((0, $hgUW1$isString)(data)) data = Buffer.from(data, encoding);\n        let s = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_RETURN);\n        if (!(0, $hgUW1$isUndefined)(data)) s.add(data);\n        return s;\n    }\n    /**\n   * @param address the pay to address\n   * @param groupId optional. only for p2st addresses\n   * @param groupAmount optional. only for p2st addresses\n   * \n   * @return an output script built from the address\n   */ static buildOutFromAddress(address, groupId, groupAmount) {\n        if ((0, $hgUW1$isString)(address)) address = (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromString(address);\n        if (address.isPayToPublicKeyHash()) return this.buildPublicKeyHashOut(address);\n        else if (address.isPayToScriptTemplate()) return this.buildScriptTemplateOut(address, groupId, groupAmount);\n        throw new Error(`Invalid address type: ${address.type}`);\n    }\n    /**\n   * Builds a scriptSig (a script for an input) that signs a script template\n   * output script.\n   *\n   * @param template the template script or OP_1 for well-known\n   * @param constraint the constraint script or OP_FALSE\n   * @param satisfier the satisfier script or buffer\n   */ static buildScriptTemplateIn(template, constraint, satisfier) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(template instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) || template === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1, \"template\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(constraint instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) || constraint === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE, \"constraint\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(satisfier instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) || (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(satisfier), \"satisfier\");\n        let script = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty();\n        if (template instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) script.add(template.toBuffer());\n        if (constraint instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) script.add(constraint.toBuffer());\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(satisfier)) satisfier = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromBuffer(satisfier);\n        script.add(satisfier);\n        return script;\n    }\n    static parseAddress(address, type) {\n        if ((0, $hgUW1$isString)(address)) return (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromString(address);\n        else if (address instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039)) return (0, $92cd415860c918d9$export$2e2bcd8739ae039).fromPublicKey(address, address.network, type);\n        return address;\n    }\n    /**\n   * @param to - destination address or public key\n   * \n   * @returns a new pay to public key hash output for the given\n   * address or public key\n   */ static buildPublicKeyHashOut(to) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(to), \"to\", \"must provide an argument\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(to instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039) || to instanceof (0, $92cd415860c918d9$export$2e2bcd8739ae039) || (0, $hgUW1$isString)(to), \"to\", \"must be address or pubkey\");\n        to = this.parseAddress(to, (0, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2).PayToPublicKeyHash);\n        return (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_DUP).add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_HASH160).add(to.data).add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_EQUALVERIFY).add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_CHECKSIG);\n    }\n    /**\n   * Builds a scriptSig (a script for an input) that signs a public key hash\n   * output script. (SIGHASH_ALL only)\n   *\n   * @param publicKey\n   * @param signature a Signature object, or the signature in DER canonical encoding\n   */ static buildPublicKeyHashIn(publicKey, signature) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(publicKey instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039), \"publicKey\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(signature instanceof (0, $369a157b63fbc3fd$export$2e2bcd8739ae039) || (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(signature), \"signature\");\n        if (signature instanceof (0, $369a157b63fbc3fd$export$2e2bcd8739ae039)) signature = signature.toBuffer();\n        let script = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add(signature).add(publicKey.toBuffer());\n        return script;\n    }\n    /**\n   * Build OP_RETURN output script for Legacy Token Description\n   *\n   * @param ticker the ticker as utf8.\n   * @param name the ticker as utf8.\n   * @param docUrl optional. the description document url\n   * @param docHash optional. the document hash hex.\n   * @param decimals optional. the decimals for the token amount.\n   * \n   * @throws Error if docUrl provided and is invalid\n   * \n   * @returns the output OP_RETURN script\n   */ static buildTokenDescriptionLegacy(ticker, name, docUrl, docHash, decimals) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(ticker) && (0, $hgUW1$inRange)(ticker.length, 1, 9), 'Ticker must be between 1-8 chars');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(name) && !(0, $hgUW1$isEmpty)(name), 'Name is missing');\n        let s = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_RETURN).add((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber((0, $a0743653d736276e$export$8da1cb8322810fc2).LEGACY).toScriptNumBuffer()).add(Buffer.from(ticker)).add(Buffer.from(name));\n        if (docUrl && docUrl.length > 0) {\n            new URL(docUrl); // exception thrown if not valide\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(docHash) && !(0, $hgUW1$isEmpty)(docHash), 'You must include document hash if you set document url');\n            s.add(Buffer.from(docUrl)).add(Buffer.from(docHash, 'hex').reverse());\n        } else s.add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE).add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE);\n        if ((0, $hgUW1$isNumber)(decimals)) {\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$inRange)(decimals, 0, 19), 'decimals must be between 0 and 18');\n            s.add(decimals <= 16 ? (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039).smallInt(decimals) : (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(decimals).toScriptNumBuffer());\n        }\n        return s;\n    }\n    /**\n   * Build OP_RETURN output script for NRC1 Token Description\n   *\n   * @param ticker the ticker as utf8.\n   * @param name the ticker as utf8.\n   * @param zipURL the zip file url.\n   * @param zipHash the zip file hash hex.\n   * @param decimals the decimals for the token amount.\n   * \n   * @throws Error if zipURL invalid\n   * \n   * @returns the output OP_RETURN script\n   */ static buildTokenDescription(ticker, name, zipURL, zipHash, decimals) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(ticker) && (0, $hgUW1$inRange)(ticker.length, 2, 9), 'Ticker must be 2-8 chars');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(name) && (0, $hgUW1$inRange)(name.length, 2, 26), 'Name must be 2-25 chars');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(zipURL) && !(0, $hgUW1$isEmpty)(zipURL), 'Zip URL is missing');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(zipHash) && !(0, $hgUW1$isEmpty)(zipHash), 'Zip hash is missing');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNumber)(decimals) && (0, $hgUW1$inRange)(decimals, 0, 19), 'Decimals must be a number 0-18');\n        new URL(zipURL); // exception thrown if not valid\n        return (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_RETURN).add((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber((0, $a0743653d736276e$export$8da1cb8322810fc2).NRC1).toScriptNumBuffer()).add(Buffer.from(ticker)).add(Buffer.from(name)).add(Buffer.from(zipURL)).add(Buffer.from(zipHash, 'hex').reverse()).add(decimals <= 16 ? (0, $92c0719d4ab9ac45$export$2e2bcd8739ae039).smallInt(decimals) : (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(decimals).toScriptNumBuffer());\n    }\n    /**\n   * Build OP_RETURN output script for an NFT Collection Description (NRC2)\n   *\n   * @param ticker the ticker as utf8.\n   * @param name the ticker as utf8.\n   * @param zipURL the zip file url.\n   * @param zipHash the zip file hash hex.\n   * \n   * @throws Error if zipURL invalid \n   * \n   * @returns the output OP_RETURN script\n   */ static buildNFTCollectionDescription(ticker, name, zipURL, zipHash) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(ticker) && (0, $hgUW1$inRange)(ticker.length, 2, 9), 'Ticker must be 2-8 chars');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(name) && (0, $hgUW1$inRange)(name.length, 2, 26), 'Name must be 2-25 chars');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(zipURL) && !(0, $hgUW1$isEmpty)(zipURL), 'Zip URL is missing');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(zipHash) && !(0, $hgUW1$isEmpty)(zipHash), 'Zip hash is missing');\n        new URL(zipURL); // exception thrown if not valid\n        return (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_RETURN).add((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber((0, $a0743653d736276e$export$8da1cb8322810fc2).NRC2).toScriptNumBuffer()).add(Buffer.from(ticker)).add(Buffer.from(name)).add(Buffer.from(zipURL)).add(Buffer.from(zipHash, 'hex').reverse()).add((0, $92c0719d4ab9ac45$export$2e2bcd8739ae039).smallInt(0));\n    }\n    /**\n   * Build OP_RETURN output script for an NFT that belongs to an NFT Collection (NRC3)\n   *\n   * @param zipURL the zip file url.\n   * @param zipHash the zip file hash hex.\n   * \n   * @throws Error if zipURL invalid \n   * \n   * @returns the output OP_RETURN script\n   */ static buildNFTDescription(zipURL, zipHash) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(zipURL) && !(0, $hgUW1$isEmpty)(zipURL), 'Zip URL is missing');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(zipHash) && !(0, $hgUW1$isEmpty)(zipHash), 'Zip hash is missing');\n        new URL(zipURL); // exception thrown if not valid\n        return (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_RETURN).add((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber((0, $a0743653d736276e$export$8da1cb8322810fc2).NRC3).toScriptNumBuffer()).add(Buffer.from(zipURL)).add(Buffer.from(zipHash, 'hex').reverse());\n    }\n}\n\n\n\n\n\n\n\n\n\nvar $e50a883097cd2090$export$ae38be9ef660d12e = /*#__PURE__*/ function(InputSighashType) {\n    InputSighashType[InputSighashType[\"ALL\"] = 0] = \"ALL\";\n    InputSighashType[InputSighashType[\"FIRSTN\"] = 1] = \"FIRSTN\";\n    InputSighashType[InputSighashType[\"THISIN\"] = 2] = \"THISIN\";\n    InputSighashType[InputSighashType[\"LAST_VALID\"] = 2] = \"LAST_VALID\";\n    return InputSighashType;\n}({});\nvar $e50a883097cd2090$export$cc0d5ed6c4786851 = /*#__PURE__*/ function(OutputSighashType) {\n    OutputSighashType[OutputSighashType[\"ALL\"] = 0] = \"ALL\";\n    OutputSighashType[OutputSighashType[\"FIRSTN\"] = 1] = \"FIRSTN\";\n    OutputSighashType[OutputSighashType[\"TWO\"] = 2] = \"TWO\";\n    OutputSighashType[OutputSighashType[\"LAST_VALID\"] = 2] = \"LAST_VALID\";\n    return OutputSighashType;\n}({});\nclass $e50a883097cd2090$export$2e2bcd8739ae039 {\n    static{\n        /**\n   * the longest sighashtype in bytes \n   * (for use in calculating tx fees by tx length estimation) \n   */ this.MAX_SIZE = 4;\n    }\n    constructor(){\n        this.inType = 0;\n        this.outType = 0;\n        this.inData = [];\n        this.outData = [];\n    }\n    /**\n   * creates a sighash that is the most restrictive -- it signs all inputs and outputs\n   */ static get ALL() {\n        return new $e50a883097cd2090$export$2e2bcd8739ae039();\n    }\n    hasAll() {\n        return this.inType == 0 && this.outType == 0;\n    }\n    isInvalid() {\n        return this.inType > 2 || this.outType > 2;\n    }\n    /** \n   * Anyone can pay signs only the current input, so other entities can add addtl inputs to complete the partial tx\n   */ setAnyoneCanPay() {\n        this.inType = 2;\n        this.inData = [];\n        return this;\n    }\n    /**\n   * Include only the n first inputs in the preimage sighash\n   * \n   * @param n The first inputs to include\n   */ setFirstNIn(n) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(n >= 0 && n < 256, \"n\", \"out of range (0-255).\");\n        this.inType = 1;\n        this.inData = [\n            n\n        ];\n        return this;\n    }\n    /**\n   * Include only the n first outputs in the preimage sighash\n   * \n   * @param n The first outputs to include\n   */ setFirstNOut(n) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(n >= 0 && n < 256, \"n\", \"out of range (0-255).\");\n        this.outType = 1;\n        this.outData = [\n            n\n        ];\n        return this;\n    }\n    /**\n   * Include specific 2 outputs in the preimage sighash\n   * \n   * @param a The 1st output to include\n   * @param b The 2nd output to include\n   */ set2Out(a, b) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(a >= 0 && a < 256, \"a\", \"out of range (0-255).\");\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(b >= 0 && b < 256, \"b\", \"out of range (0-255).\");\n        this.outType = 2;\n        this.outData = [\n            a,\n            b\n        ];\n        return this;\n    }\n    toBuffer() {\n        if (this.hasAll()) return Buffer.alloc(0);\n        let bw = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        let sigtype = this.inType << 4 | this.outType;\n        bw.writeUInt8(sigtype);\n        switch(this.inType){\n            case 1:\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.inData.length > 0, \"Missing input data\");\n                bw.writeUInt8(this.inData[0]);\n                break;\n            case 2:\n            case 0:\n                break;\n            default:\n                throw new Error(\"Malformed sighash type\");\n        }\n        switch(this.outType){\n            case 2:\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.outData.length > 1, \"Missing output data\");\n                bw.writeUInt8(this.outData[0]);\n                bw.writeUInt8(this.outData[1]);\n                break;\n            case 1:\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.outData.length > 0, \"Missing output data\");\n                bw.writeUInt8(this.outData[0]);\n                break;\n            case 0:\n                break;\n            default:\n                throw new Error(\"Malformed sighash type\");\n        }\n        return bw.toBuffer();\n    }\n    static fromBuffer(buf) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(buf), \"buf\");\n        if (buf.length == 0) return this.ALL;\n        let sighash = new $e50a883097cd2090$export$2e2bcd8739ae039();\n        let br = new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(buf);\n        let type = br.readUInt8();\n        sighash.outType = type & 0x0f;\n        sighash.inType = type >> 4;\n        if (sighash.isInvalid()) throw new Error(\"Invalid sighash buffer\");\n        const safeRead = (br)=>{\n            if (br.finished()) throw new Error(\"Invalid sighash buffer\");\n            return br.readUInt8();\n        };\n        if (sighash.inType == 1) sighash.inData.push(safeRead(br));\n        if (sighash.outType == 1) sighash.outData.push(safeRead(br));\n        else if (sighash.outType == 2) {\n            sighash.outData.push(safeRead(br));\n            sighash.outData.push(safeRead(br));\n        }\n        if (!br.finished()) throw new Error(\"Invalid sighash buffer\");\n        return sighash;\n    }\n    /**\n   * Convert to a hex representation of the sighash\n   */ toHex() {\n        return this.toBuffer().toString('hex');\n    }\n    /**\n   * Create sighash for hex represantation\n   * @see toHex \n   */ static fromHex(hex) {\n        if (typeof hex === 'string' && hex.length === 0) return this.ALL;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(hex), \"Not a hex string\");\n        return this.fromBuffer(Buffer.from(hex, 'hex'));\n    }\n    /** \n   * Convert to a human readable representation of the sighash\n   */ toString() {\n        if (this.hasAll()) return \"ALL\";\n        let ret = \"\";\n        switch(this.inType){\n            case 0:\n                ret += \"ALL_IN\";\n                break;\n            case 2:\n                ret += \"THIS_IN\";\n                break;\n            case 1:\n                ret += `FIRST_${this.inData[0]}_IN`;\n                break;\n            default:\n                return \"INVALID\";\n        }\n        ret += \"|\";\n        switch(this.outType){\n            case 0:\n                ret += \"ALL_OUT\";\n                break;\n            case 2:\n                ret += `${this.outData[0]}_${this.outData[1]}_OUT`;\n                break;\n            case 1:\n                ret += `FIRST_${this.outData[0]}_OUT`;\n                break;\n            default:\n                return \"INVALID\";\n        }\n        return ret;\n    }\n    /**\n   * Create sighash from human readable represantation\n   * @see toString \n   */ static fromString(str) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(str), \"Not a string\");\n        if (str == \"ALL\") return this.ALL;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(str.includes(\"|\"), \"Not a sighash string\");\n        let sighash = new $e50a883097cd2090$export$2e2bcd8739ae039();\n        let [inStr, outStr] = str.split(\"|\");\n        if (inStr == \"THIS_IN\") sighash.inType = 2;\n        else if (inStr != \"ALL_IN\") {\n            let match = inStr.match(/^FIRST_(\\d+)_IN$/);\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!(0, $hgUW1$isNil)(match), \"Not a sighash string\");\n            sighash.setFirstNIn(parseInt(match[1]));\n        }\n        if (outStr != \"ALL_OUT\") {\n            let fnMatch = outStr.match(/^FIRST_(\\d+)_OUT$/);\n            let twMatch = outStr.match(/^(\\d+)_(\\d+)_OUT$/);\n            if (fnMatch) sighash.setFirstNOut(parseInt(fnMatch[1]));\n            else if (twMatch) sighash.set2Out(parseInt(twMatch[1]), parseInt(twMatch[2]));\n            else throw new Error(\"Not a sighash string\");\n        }\n        return sighash;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $98955c312257c252$export$be94d7b677b041dd = /*#__PURE__*/ function(OutputType) {\n    OutputType[OutputType[\"SATOSCRIPT\"] = 0] = \"SATOSCRIPT\";\n    OutputType[OutputType[\"TEMPLATE\"] = 1] = \"TEMPLATE\";\n    OutputType[OutputType[\"INFER\"] = 32768] = \"INFER\"; // Not a real type: implies the type should be infered from the script at construction time\n    return OutputType;\n}({});\nclass $98955c312257c252$export$2e2bcd8739ae039 {\n    constructor(value, scriptPubKey, type = 32768){\n        this.toJSON = this.toObject;\n        this.type = type;\n        this.value = value;\n        this.scriptPubKey = scriptPubKey;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(sats) {\n        sats = BigInt(sats);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isNaturalBigInt(sats), \"Output value is not a natural bigint\");\n        this._value = sats;\n    }\n    get scriptPubKey() {\n        return this._scriptPubKey;\n    }\n    set scriptPubKey(script) {\n        if (!(0, $hgUW1$isUndefined)(this._scriptPubKey)) this.type = 32768;\n        if (script instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) this._scriptPubKey = script;\n        else if ((0, $hgUW1$isString)(script)) this._scriptPubKey = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromString(script);\n        else throw new TypeError('Invalid argument type: script');\n        // in case we replace script or type wasn't passed in c'tor, we need to define the output type\n        if (this.type == 32768) this.type = this._scriptPubKey.isPublicKeyTemplateOut() || this._scriptPubKey.isScriptTemplateOut() ? 1 : 0;\n    }\n    invalidValue() {\n        if (this.value > BigInt(Number.MAX_SAFE_INTEGER)) return 'transaction txout value greater than max safe integer';\n        if (this.value < 0n) return 'transaction txout negative';\n        return false;\n    }\n    toObject() {\n        return {\n            type: this.type,\n            value: this.value.toString(),\n            scriptPubKey: this.scriptPubKey.toHex()\n        };\n    }\n    static fromObject(data) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(data), \"data\", \"Unrecognized argument for Output\");\n        return new $98955c312257c252$export$2e2bcd8739ae039(data.value, data.scriptPubKey, data.type);\n    }\n    inspect() {\n        return `<Output (type: ${this.type}) (${this.value.toString()} sats) ${this.scriptPubKey.inspect()}>`;\n    }\n    static fromBufferReader(br) {\n        let type = br.readVarintNum();\n        let value = br.readUInt64LEBN();\n        let size = br.readVarintNum();\n        let scriptBuf = size !== 0 ? br.read(size) : Buffer.from([]);\n        return new $98955c312257c252$export$2e2bcd8739ae039(value.toBigInt(), (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromBuffer(scriptBuf), type);\n    }\n    toBufferWriter(writer) {\n        if (!writer) writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        writer.writeUInt8(this.type);\n        writer.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBigInt(this.value));\n        writer.writeVarLengthBuf(this.scriptPubKey.toBuffer());\n        return writer;\n    }\n}\n\n\n\n\n\n\nvar $9b92277fa5d35484$export$476dfc2401bc286b = /*#__PURE__*/ function(InputType) {\n    InputType[InputType[\"UTXO\"] = 0] = \"UTXO\";\n    InputType[InputType[\"READ_ONLY\"] = 1] = \"READ_ONLY\";\n    return InputType;\n}({});\nclass $9b92277fa5d35484$export$2e2bcd8739ae039 {\n    static{\n        this.SEQUENCE_FINAL = 0xffffffff;\n    }\n    constructor(params){\n        this.toJSON = this.toObject;\n        if (params) this._set(params);\n    }\n    get scriptSig() {\n        return this._scriptSig;\n    }\n    set scriptSig(script) {\n        if (script instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) this._scriptSig = script;\n        else if ((0, $hgUW1$isString)(script)) this._scriptSig = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromString(script);\n        else throw new TypeError('Invalid argument type: script');\n    }\n    _set(params) {\n        this.type = 0;\n        if ((0, $hgUW1$isNil)(params.scriptSig)) throw new TypeError('Need a script to create an input');\n        this.scriptSig = params.scriptSig;\n        this.outpoint = (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(params.outpoint) ? params.outpoint : Buffer.from(params.outpoint, 'hex');\n        this.amount = BigInt(params.amount);\n        this.sequenceNumber = (0, $hgUW1$isUndefined)(params.sequenceNumber) ? $9b92277fa5d35484$export$2e2bcd8739ae039.SEQUENCE_FINAL : params.sequenceNumber;\n        if (params.output) this.output = params.output instanceof (0, $98955c312257c252$export$2e2bcd8739ae039) ? params.output : (0, $98955c312257c252$export$2e2bcd8739ae039).fromObject(params.output);\n    }\n    static fromObject(obj) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(obj), \"obj\");\n        return new $9b92277fa5d35484$export$2e2bcd8739ae039(obj);\n    }\n    toObject() {\n        return {\n            type: this.type,\n            outpoint: this.outpoint.toString('hex'),\n            amount: this.amount.toString(),\n            sequenceNumber: this.sequenceNumber,\n            scriptSig: this.scriptSig.toHex(),\n            output: this.output?.toObject()\n        };\n    }\n    static fromBufferReader(br) {\n        let input = new $9b92277fa5d35484$export$2e2bcd8739ae039();\n        input.type = br.readUInt8();\n        input.outpoint = br.readReverse(32);\n        input.scriptSig = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromBuffer(br.readVarLengthBuffer());\n        input.sequenceNumber = br.readUInt32LE();\n        input.amount = br.readUInt64LEBN().toBigInt();\n        return input;\n    }\n    toBufferWriter(writer, includeScript = true) {\n        if (!writer) writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        writer.writeUInt8(this.type);\n        writer.writeReverse(this.outpoint);\n        if (includeScript) writer.writeVarLengthBuf(this.scriptSig.toBuffer());\n        writer.writeUInt32LE(this.sequenceNumber);\n        writer.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBigInt(this.amount));\n        return writer;\n    }\n    estimateSize() {\n        return this.toBufferWriter().toBuffer().length;\n    }\n    isFinal() {\n        return this.sequenceNumber !== $9b92277fa5d35484$export$2e2bcd8739ae039.SEQUENCE_FINAL;\n    }\n    clearSignatures() {\n        this.scriptSig = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty();\n        return this;\n    }\n    getSubscript() {\n        throw Error(`Abstract Method Invocation: Input#getSubscript`);\n    }\n    /**\n   * @returns true if the provided private key can sign this input\n   */ canSign(_privateKey) {\n        throw Error(`Abstract Method Invocation: Input#canSign`);\n    }\n    isFullySigned() {\n        throw Error(`Abstract Method Invocation: Input#isFullySigned`);\n    }\n    addSignature(_signature) {\n        throw Error(`Abstract Method Invocation: Input#addSignature`);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $5cf2ce125ae8c2d7$export$2e2bcd8739ae039 extends (0, $9b92277fa5d35484$export$2e2bcd8739ae039) {\n    static{\n        this.SCRIPT_SIZE = 99 // pubkey (1 + 33) + sigsize (1 + 64)\n        ;\n    }\n    getSubscript() {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.output instanceof (0, $98955c312257c252$export$2e2bcd8739ae039), \"missing associated output\");\n        return this.output.scriptPubKey;\n    }\n    canSign(privateKey) {\n        if (!(this.output instanceof (0, $98955c312257c252$export$2e2bcd8739ae039))) return false;\n        let pkh = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160(privateKey.publicKey.toBuffer());\n        return pkh.equals(this.output.scriptPubKey.getPublicKeyHash());\n    }\n    isFullySigned() {\n        return this.scriptSig.isPublicKeyHashIn();\n    }\n    addSignature(signature) {\n        this.scriptSig = (0, $fea109eb8128bf4c$export$2e2bcd8739ae039).buildPublicKeyHashIn(signature.publicKey, signature.signature);\n        return this;\n    }\n    estimateSize() {\n        if (this.isFullySigned()) return super.estimateSize();\n        // type + outpoint + scriptlen + script + sequence + amount\n        return 34 + $5cf2ce125ae8c2d7$export$2e2bcd8739ae039.SCRIPT_SIZE + 4 + 8;\n    }\n}\n\n\n\n\n\n\n\n\nclass $49712dfa37abdb5b$export$2e2bcd8739ae039 extends (0, $9b92277fa5d35484$export$2e2bcd8739ae039) {\n    static{\n        this.SCRIPT_SIZE = 100 // pubkey push script (1 + 34) + sigsize (1 + 64)\n        ;\n    }\n    getSubscript() {\n        return (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FROMALTSTACK).add((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_CHECKSIGVERIFY);\n    }\n    canSign(privateKey) {\n        if (!(this.output instanceof (0, $98955c312257c252$export$2e2bcd8739ae039))) return false;\n        let constraintHash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160((0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add(privateKey.publicKey.toBuffer()).toBuffer());\n        return constraintHash.equals(this.output.scriptPubKey.getConstraintHash());\n    }\n    isFullySigned() {\n        return this.scriptSig.isPublicKeyTemplateIn();\n    }\n    addSignature(signature) {\n        let constraint = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add(signature.publicKey.toBuffer());\n        let satisfier = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add(signature.toTxSatisfier());\n        this.scriptSig = (0, $fea109eb8128bf4c$export$2e2bcd8739ae039).buildScriptTemplateIn((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_1, constraint, satisfier);\n        return this;\n    }\n    estimateSize() {\n        if (this.isFullySigned()) return super.estimateSize();\n        // type + outpoint + scriptlen + script + sequence + amount\n        return 34 + $49712dfa37abdb5b$export$2e2bcd8739ae039.SCRIPT_SIZE + 4 + 8;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nclass $6995bc57838749e2$export$2e2bcd8739ae039 extends (0, $9b92277fa5d35484$export$2e2bcd8739ae039) {\n    /**\n   * Represents a special kind of input of generic ScriptTemplate kind.\n   * \n   * WARNING: this is a general case where the signature is similar to p2pkt and added to scriptSig as push signature data.\n   * If you have complex smart contract, consider extending this class (or Input class) and implement the necessary logic,\n   * or sign it manually.\n   */ constructor(arg){\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(arg?.templateData), 'Missing template object');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(arg?.output), 'Missing associated utxo');\n        let td = arg.templateData;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(td.templateScript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) || (0, $hgUW1$isString)(td.templateScript), 'Invalid template');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(td.constraintScript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) || (0, $hgUW1$isString)(td.constraintScript) || td.constraintScript === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE, 'Invalid constraint');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isUndefined)(td.publicKey) || td.publicKey instanceof (0, $246eb589bb078d6d$export$2e2bcd8739ae039) || (0, $hgUW1$isString)(td.publicKey), 'Invalid pubkey');\n        super(arg), this.toJSON = this.toObject;\n        this.templateScript = (0, $hgUW1$isString)(td.templateScript) ? (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromString(td.templateScript) : td.templateScript;\n        this.constraintScript = (0, $hgUW1$isString)(td.constraintScript) ? (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromString(td.constraintScript) : td.constraintScript;\n        this.publicKey = (0, $hgUW1$isString)(td.publicKey) ? (0, $246eb589bb078d6d$export$2e2bcd8739ae039).fromString(td.publicKey) : td.publicKey;\n        let templateHash = this.output.scriptPubKey.getTemplateHash();\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(templateHash) && templateHash.equals((0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160(this.templateScript.toBuffer())), \"Provided template doesn't match to the provided output\");\n        let constraintHash = this.output.scriptPubKey.getConstraintHash();\n        let isScriptMatch = this.constraintScript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) && (0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(constraintHash) && constraintHash.equals((0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256ripemd160(this.constraintScript.toBuffer()));\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(constraintHash === this.constraintScript || isScriptMatch, \"Provided constraint doesn't match to the provided output\");\n    }\n    toObject() {\n        let input = super.toObject();\n        return {\n            ...input,\n            templateData: {\n                templateScript: this.templateScript.toHex(),\n                constraintScript: this.constraintScript === (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE ? (0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_FALSE : this.constraintScript.toHex(),\n                publicKey: this.publicKey?.toString()\n            }\n        };\n    }\n    static fromObject(obj) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(obj), \"obj\");\n        return new $6995bc57838749e2$export$2e2bcd8739ae039(obj);\n    }\n    getSubscript() {\n        return this.templateScript;\n    }\n    canSign(privateKey) {\n        return this.publicKey?.toString() === privateKey.publicKey.toString();\n    }\n    isFullySigned() {\n        return this.scriptSig.isScriptTemplateIn() && this.templateScript.equals((0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromBuffer(this.scriptSig.chunks[0].buf)) && (!(this.constraintScript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) || this.constraintScript.equals((0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromBuffer(this.scriptSig.chunks[1].buf)));\n    }\n    addSignature(signature) {\n        let satisfier = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add(signature.toTxSatisfier());\n        this.scriptSig = (0, $fea109eb8128bf4c$export$2e2bcd8739ae039).buildScriptTemplateIn(this.templateScript, this.constraintScript, satisfier);\n        return this;\n    }\n    estimateSize() {\n        if (this.isFullySigned()) return super.estimateSize();\n        let scriptSize = this._estimateScriptSize();\n        // type + outpoint + scriptlen + script + sequence + amount\n        return 33 + (scriptSize < 253 ? 1 : 3) + scriptSize + 4 + 8;\n    }\n    _estimateScriptSize() {\n        // here we calculate by template size, constraint size if not op_false, and satisfier size as sigsize (1 + 64)\n        let s = (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty().add(this.templateScript.toBuffer());\n        if (this.constraintScript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039)) s.add(this.constraintScript.toBuffer());\n        return s.toBuffer().length + 1 + 64;\n    }\n}\n\n\nclass $926e193f4c554367$export$2e2bcd8739ae039 {\n    static{\n        this.CURRENT_VERSION = 0;\n    }\n    static{\n        this.FEE_PER_BYTE = 3;\n    }\n    static{\n        // Minimum amount for an output for it not to be considered a dust output\n        this.DUST_AMOUNT = 546;\n    }\n    static{\n        // Max amount of satoshis in circulation\n        this.MAX_MONEY = 21000000 * 1e8;\n    }\n    static{\n        // nlocktime limit to be considered block height rather than a timestamp\n        this.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n    }\n    static{\n        // Max value for an unsigned 32 bit value\n        this.NLOCKTIME_MAX_VALUE = 4294967295;\n    }\n    constructor(serializedTx){\n        this.uncheckedSerialize = this.toString;\n        this.toJSON = this.toObject;\n        this.version = $926e193f4c554367$export$2e2bcd8739ae039.CURRENT_VERSION;\n        this.inputs = [];\n        this.outputs = [];\n        this.nLockTime = 0;\n        if (serializedTx) {\n            if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(serializedTx)) this.fromBuffer(serializedTx);\n            else if ((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(serializedTx)) this.fromString(serializedTx);\n            else if ((0, $hgUW1$isObject)(serializedTx)) this.fromObject(serializedTx);\n            else throw new TypeError(\"Must provide an object or string to deserialize a transaction\");\n        }\n    }\n    get id() {\n        let buf = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)().write(this._getTxIdem()).write(this._getTxSatisfier()).toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf).reverse().toString('hex');\n    }\n    get idem() {\n        return this._getTxIdem().reverse().toString('hex');\n    }\n    get outputAmount() {\n        return this.outputs.reduce((total, output)=>total + output.value, 0n);\n    }\n    get inputAmount() {\n        return this.inputs.reduce((total, input)=>total + input.amount, 0n);\n    }\n    _getTxIdem() {\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(this._toIdemBuffer());\n    }\n    _getTxSatisfier() {\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(this._toSatisfierBuffer());\n    }\n    /**\n   * Create a 'shallow' copy of the transaction, by serializing and deserializing.\n   * it dropping any additional information that inputs and outputs may have hold\n   *\n   * @param transaction\n   */ static shallowCopy(transaction) {\n        return new $926e193f4c554367$export$2e2bcd8739ae039(transaction.toBuffer());\n    }\n    /**\n   * Analogous to nexad's IsCoinBase function in transaction.h\n   */ isCoinbase() {\n        return this.inputs.length === 0;\n    }\n    /**\n   * Retrieve a possible error that could appear when trying to serialize and\n   * broadcast this transaction.\n   *\n   * @param opts allows to skip certain tests.\n   */ getSerializationError(opts) {\n        if (this._invalidAmount()) return new Error('Output satoshis are invalid');\n        if (this.outputs.length > 256) return new Error('Too many outputs (> 256)');\n        if (this.inputs.length > 256) return new Error('Too many inputs (> 256)');\n        let unspent = this.getUnspentValue();\n        let unspentError;\n        if (unspent < 0) {\n            if (!opts?.disableMoreOutputThanInput) unspentError = new Error('Invalid outputs amount sum');\n        } else unspentError = this._hasFeeError(unspent);\n        return unspentError || this._hasDustOutputs(opts) || this._isMissingSignatures(opts);\n    }\n    _invalidAmount() {\n        return this.outputs.some((out)=>out.invalidValue());\n    }\n    _hasDustOutputs(opts) {\n        if (opts?.disableDustOutputs) return;\n        let hasDust = this.outputs.some((output)=>output.value < $926e193f4c554367$export$2e2bcd8739ae039.DUST_AMOUNT && !output.scriptPubKey.isDataOut());\n        return hasDust ? new Error('Dust amount detected in one output') : undefined;\n    }\n    _hasFeeError(unspent) {\n        if (!(0, $hgUW1$isUndefined)(this._fee) && BigInt(this._fee) !== unspent) return new Error(`Unspent value is ${unspent} but specified fee is ${this._fee}`);\n    }\n    _estimateFee() {\n        let estimatedSize = this._estimateSize();\n        let available = this.getUnspentValue();\n        let feeRate = this._feePerByte || $926e193f4c554367$export$2e2bcd8739ae039.FEE_PER_BYTE;\n        const calcFee = (size)=>{\n            return size * feeRate;\n        };\n        let feeWithChange = Math.ceil(calcFee(estimatedSize) + calcFee(this._estimateSizeOfChangeOutput()));\n        if (!this._changeScript || available <= feeWithChange || available - BigInt(feeWithChange) < $926e193f4c554367$export$2e2bcd8739ae039.DUST_AMOUNT) return Number(available);\n        return feeWithChange;\n    }\n    _estimateSizeOfChangeOutput() {\n        /* c8 ignore start */ if (!this._changeScript) return 0; // should not reach here\n        /* c8 ignore stop */ let scriptLen = this._changeScript.toBuffer().length;\n        // 1 byte for type + 8 bytes for amount + script size + actual script size\n        return 9 + (0, $35852622c8c617e8$export$2e2bcd8739ae039).varintBufNum(scriptLen).length + scriptLen;\n    }\n    _estimateSize() {\n        let result = 5; // locktime + version\n        result += this.inputs.length < 253 ? 1 : 3;\n        this.inputs.forEach((input)=>{\n            result += input.estimateSize();\n        });\n        result += this.outputs.length < 253 ? 1 : 3;\n        this.outputs.forEach((output)=>{\n            result += output.toBufferWriter().toBuffer().length;\n        });\n        return result;\n    }\n    _isMissingSignatures(opts) {\n        if (opts?.disableIsFullySigned) return;\n        if (!this.isFullySigned()) return new Error('Some inputs have not been fully signed');\n    }\n    isFullySigned() {\n        if (this.inputs.some((input)=>input.isFullySigned === (0, $9b92277fa5d35484$export$2e2bcd8739ae039).prototype.isFullySigned)) throw new Error(\"Unable to verify signature: Unrecognized script kind, or not enough information to execute script. This usually happens when creating a transaction from a serialized transaction\");\n        return this.inputs.every((input)=>input.isFullySigned());\n    }\n    /**\n   * @returns true if the transaction has enough info on all inputs to be correctly validated\n   */ hasAllUtxoInfo() {\n        return this.inputs.every((input)=>!(0, $hgUW1$isUndefined)(input.output));\n    }\n    getUnspentValue() {\n        return this.inputAmount - this.outputAmount;\n    }\n    /**\n   * Calculates the fee of the transaction.\n   *\n   * If there's a fixed fee set, return that.\n   *\n   * If there is no change output set, the fee is the\n   * total value of the outputs minus inputs. Note that\n   * a serialized transaction only specifies the value\n   * of its outputs. (The value of inputs are recorded\n   * in the previous transaction outputs being spent.)\n   * This method therefore raises a \"MissingPreviousOutput\"\n   * error when called on a serialized transaction.\n   *\n   * If there's no fee set and no change address,\n   * estimate the fee based on size.\n   *\n   * @return fee of this transaction in satoshis\n   */ getFee() {\n        if (this.isCoinbase()) return 0;\n        if (!(0, $hgUW1$isUndefined)(this._fee)) return this._fee;\n        // if no change output is set, fees should equal all the unspent amount\n        if (!this._changeScript) return Number(this.getUnspentValue());\n        return this._estimateFee();\n    }\n    /**\n   * Calculates the required fee of the transaction.\n   * \n   * @remarks this method is different than getFee.\n   *  while getFee return the current fee estimation, this method return how much fee is required according to the fee rate.\n   * \n   * @returns the required fees of this transaction in satoshis\n   */ estimateRequiredFee() {\n        let feeRate = this._feePerByte || $926e193f4c554367$export$2e2bcd8739ae039.FEE_PER_BYTE;\n        return feeRate * this._estimateSize();\n    }\n    clearSignatures() {\n        this.inputs.forEach((input)=>input.clearSignatures());\n    }\n    /**\n   * Retrieve a hexa string that can be used with nexad's CLI interface\n   * (decoderawtransaction, sendrawtransaction)\n   *\n   * @param opts allows to skip certain tests.\n   */ checkedSerialize(opts) {\n        let serializationError = this.getSerializationError(opts);\n        if (serializationError) throw serializationError;\n        return this.toString();\n    }\n    toString() {\n        return this.toBuffer().toString('hex');\n    }\n    inspect() {\n        return `<Transaction: ${this}>`;\n    }\n    fromString(string) {\n        return this.fromBuffer(Buffer.from(string, 'hex'));\n    }\n    /**\n   * Retrieve a hexa string that can be used with nexad's CLI interface\n   * (decoderawtransaction, sendrawtransaction)\n   *\n   * @param unsafe if true, skip all tests. if it's an object,\n   * it's expected to contain a set of flags to skip certain tests.\n   * \n   * @see {@link TxVerifyOptions}\n   */ serialize(unsafe) {\n        if (true === unsafe || (0, $hgUW1$isObject)(unsafe) && unsafe.disableAll) return this.uncheckedSerialize();\n        else return this.checkedSerialize((0, $hgUW1$isObject)(unsafe) ? unsafe : undefined);\n    }\n    /**\n   * Manually set the fee for this transaction. Beware that this resets all the signatures\n   * for inputs.\n   *\n   * @param amount satoshis to be set as fees\n   * @return this, for chaining\n   */ setFee(amount) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNumber)(amount), 'amount must be a number');\n        this._fee = amount;\n        this._updateChangeOutput();\n        return this;\n    }\n    /**\n   * Manually set the fee per Byte for this transaction. Beware that this resets all the signatures\n   * for inputs.\n   * fee per Byte will be ignored if fee property was set manually\n   *\n   * @param amount satoshis per Byte to be used as fee rate\n   * @return this, for chaining\n   */ setFeePerByte(amount) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNumber)(amount), 'amount must be a number');\n        this._feePerByte = amount;\n        this._updateChangeOutput();\n        return this;\n    }\n    /**\n   * Add an output to the transaction.\n   *\n   * @param output the output to add.\n   * @return this, for chaining\n   */ addOutput(output) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(output, (0, $98955c312257c252$export$2e2bcd8739ae039), 'output');\n        this.outputs.push(output);\n        this._updateChangeOutput();\n        return this;\n    }\n    removeOutput(index) {\n        this._removeOutput(index);\n        this._updateChangeOutput();\n        return this;\n    }\n    _removeOutput(index) {\n        this.outputs = this.outputs.filter((_, i)=>i !== index);\n    }\n    /**\n   * Remove all outputs from the transaction.\n   *\n   * @return this, for chaining\n   */ clearOutputs() {\n        this.outputs = [];\n        this.clearSignatures();\n        this._updateChangeOutput();\n        return this;\n    }\n    updateOutputAmount(index, sats) {\n        this.outputs[index].value = BigInt(sats);\n        this._updateChangeOutput();\n    }\n    /**\n   * Set the change address for this transaction\n   *\n   * Beware that this resets all the signatures for inputs.\n   *\n   * @param address An address for change to be sent to.\n   * @return this, for chaining\n   */ setChangeOutput(address) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(address), 'address is required.');\n        this._changeScript = (0, $fea109eb8128bf4c$export$2e2bcd8739ae039).buildOutFromAddress(address);\n        this._updateChangeOutput();\n        return this;\n    }\n    /**\n   * @returns change output, if it exists\n   */ getChangeOutput() {\n        if (!(0, $hgUW1$isUndefined)(this._changeIndex)) return this.outputs[this._changeIndex];\n        return undefined;\n    }\n    _updateChangeOutput() {\n        if (!this._changeScript) return;\n        this.clearSignatures();\n        if (!(0, $hgUW1$isUndefined)(this._changeIndex)) this._removeOutput(this._changeIndex);\n        let available = this.getUnspentValue();\n        let fee = this.getFee();\n        let changeAmount = available - BigInt(fee);\n        if (changeAmount >= $926e193f4c554367$export$2e2bcd8739ae039.DUST_AMOUNT) {\n            this._changeIndex = this.outputs.length;\n            this.outputs.push(new (0, $98955c312257c252$export$2e2bcd8739ae039)(changeAmount, this._changeScript));\n        } else this._changeIndex = undefined;\n    }\n    /**\n   * Add an input to this transaction, without checking that the input has information about\n   * the output that it's spending.\n   *\n   * @param input the input to add\n   * @return this, for chaining\n   */ uncheckedAddInput(input) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(input, (0, $9b92277fa5d35484$export$2e2bcd8739ae039), 'input');\n        this.inputs.push(input);\n        this._updateChangeOutput();\n        return this;\n    }\n    /**\n   * Add an input to this transaction. The input must be an instance of the `Input` class.\n   * It should have information about the Output that it's spending, but if it's not already\n   * set, two additional parameters, `outputScript` and `amount` can be provided.\n   *\n   * @param input\n   * @param outputScript\n   * @param amount\n   * @return this, for chaining\n   */ addInput(input, outputScript, amount) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgumentType(input, (0, $9b92277fa5d35484$export$2e2bcd8739ae039), 'input');\n        if ((0, $hgUW1$isUndefined)(input.output) && ((0, $hgUW1$isUndefined)(outputScript) || (0, $hgUW1$isUndefined)(amount))) throw new Error('Need information about the UTXO script and amount');\n        if ((0, $hgUW1$isUndefined)(input.output) && !(0, $hgUW1$isUndefined)(outputScript) && !(0, $hgUW1$isUndefined)(amount)) {\n            let scriptPubKey = outputScript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) ? outputScript : new (0, $90f45db77a786f2b$export$2e2bcd8739ae039)(outputScript);\n            input.output = new (0, $98955c312257c252$export$2e2bcd8739ae039)(BigInt(amount), scriptPubKey);\n        }\n        return this.uncheckedAddInput(input);\n    }\n    removeInput(outpoint) {\n        this.inputs = this.inputs.filter((input)=>input.outpoint.toString('hex') != outpoint);\n        this._updateChangeOutput();\n        return this;\n    }\n    /**\n   * Sets nLockTime so that transaction is not valid until the desired date or height.\n   * Beware that this method will also set the inputs sequence number to max_int - 1\n   * \n   * @remarks nLockTime considered as height if the value is between 0 - 499,999,999.\n   *  above that considered as date (unix timestamp).\n   * \n   * @see {@link NLOCKTIME_BLOCKHEIGHT_LIMIT}\n   * \n   * @param locktime \n   * @returns \n   */ setLockTime(locktime) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isNumber)(locktime), 'locktime', 'must be a number');\n        this.inputs.forEach((input)=>{\n            if (input.sequenceNumber === (0, $9b92277fa5d35484$export$2e2bcd8739ae039).SEQUENCE_FINAL) input.sequenceNumber = (0, $9b92277fa5d35484$export$2e2bcd8739ae039).SEQUENCE_FINAL - 1;\n        });\n        this.nLockTime = locktime;\n        return this;\n    }\n    /**\n   *  Returns a semantic version of the transaction's nLockTime.\n   *  If nLockTime is 0, it returns null,\n   *  if it is < 500000000, it returns a block height (number)\n   *  else it returns a Date object.\n   */ getLockTime() {\n        if (!this.nLockTime) return null;\n        if (this.nLockTime < $926e193f4c554367$export$2e2bcd8739ae039.NLOCKTIME_BLOCKHEIGHT_LIMIT) return this.nLockTime;\n        return new Date(1000 * this.nLockTime);\n    }\n    toBuffer() {\n        return this.toBufferWriter().toBuffer();\n    }\n    toBufferWriter(writer, withInputsScripts = true) {\n        if (!writer) writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        writer.writeUInt8(this.version);\n        writer.writeVarintNum(this.inputs.length);\n        this.inputs.forEach((input)=>input.toBufferWriter(writer, withInputsScripts));\n        writer.writeVarintNum(this.outputs.length);\n        this.outputs.forEach((output)=>output.toBufferWriter(writer));\n        writer.writeUInt32LE(this.nLockTime);\n        return writer;\n    }\n    _toIdemBuffer() {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        return this.toBufferWriter(writer, false).toBuffer();\n    }\n    _toSatisfierBuffer() {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        writer.writeInt32LE(this.inputs.length);\n        this.inputs.forEach((input)=>{\n            writer.write(input.scriptSig.toBuffer());\n            writer.writeUInt8((0, $92c0719d4ab9ac45$export$393941f88fd16991).OP_INVALIDOPCODE);\n        });\n        return writer.toBuffer();\n    }\n    fromBuffer(buffer) {\n        let reader = new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(buffer);\n        return this.fromBufferReader(reader);\n    }\n    fromBufferReader(reader) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!reader.finished(), 'No transaction data received');\n        this.version = reader.readUInt8();\n        let sizeTxIns = reader.readVarintNum();\n        for(let i = 0; i < sizeTxIns; i++)this.inputs.push((0, $9b92277fa5d35484$export$2e2bcd8739ae039).fromBufferReader(reader));\n        let sizeTxOuts = reader.readVarintNum();\n        for(let i = 0; i < sizeTxOuts; i++)this.outputs.push((0, $98955c312257c252$export$2e2bcd8739ae039).fromBufferReader(reader));\n        this.nLockTime = reader.readUInt32LE();\n        return this;\n    }\n    toObject() {\n        let obj = {\n            id: this.id,\n            idem: this.idem,\n            version: this.version,\n            inputs: this.inputs.map((input)=>input.toObject()),\n            outputs: this.outputs.map((output)=>output.toObject()),\n            nLockTime: this.nLockTime\n        };\n        if (!(0, $hgUW1$isUndefined)(this._changeScript)) obj.changeScript = this._changeScript.toHex();\n        if (!(0, $hgUW1$isUndefined)(this._changeIndex)) obj.changeIndex = this._changeIndex;\n        if (!(0, $hgUW1$isUndefined)(this._fee)) obj.fee = this._fee;\n        if (!(0, $hgUW1$isUndefined)(this._feePerByte)) obj.feePerByte = this._feePerByte;\n        return obj;\n    }\n    fromObject(transaction) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(transaction), 'transaction');\n        if (transaction instanceof $926e193f4c554367$export$2e2bcd8739ae039) transaction = transaction.toObject();\n        this.nLockTime = transaction.nLockTime;\n        this.version = transaction.version;\n        for (let input of transaction.inputs){\n            if ((0, $hgUW1$isUndefined)(input.output?.scriptPubKey)) {\n                this.uncheckedAddInput(new (0, $9b92277fa5d35484$export$2e2bcd8739ae039)(input));\n                continue;\n            }\n            let script = new (0, $90f45db77a786f2b$export$2e2bcd8739ae039)(input.output.scriptPubKey);\n            let txin;\n            if (script.isPublicKeyHashOut()) txin = new (0, $5cf2ce125ae8c2d7$export$2e2bcd8739ae039)(input);\n            else if (script.isPublicKeyTemplateOut()) txin = new (0, $49712dfa37abdb5b$export$2e2bcd8739ae039)(input);\n            else if (script.isScriptTemplateOut()) {\n                if ('templateData' in input) txin = new (0, $6995bc57838749e2$export$2e2bcd8739ae039)(input);\n                else txin = new (0, $9b92277fa5d35484$export$2e2bcd8739ae039)(input);\n            } else throw new Error(`Unsupported input script type: ${script}`);\n            this.addInput(txin);\n        }\n        for (let output of transaction.outputs)this.addOutput((0, $98955c312257c252$export$2e2bcd8739ae039).fromObject(output));\n        if (!(0, $hgUW1$isUndefined)(transaction.changeIndex)) this._changeIndex = transaction.changeIndex;\n        if (!(0, $hgUW1$isUndefined)(transaction.changeScript)) this._changeScript = new (0, $90f45db77a786f2b$export$2e2bcd8739ae039)(transaction.changeScript);\n        if (!(0, $hgUW1$isUndefined)(transaction.fee)) this._fee = transaction.fee;\n        if (!(0, $hgUW1$isUndefined)(transaction.feePerByte)) this._feePerByte = transaction.feePerByte;\n        this._checkConsistency(transaction);\n        return this;\n    }\n    _checkConsistency(transaction) {\n        if (!(0, $hgUW1$isUndefined)(this._changeIndex)) {\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!(0, $hgUW1$isUndefined)(this._changeScript), 'Change script is expected.');\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!(0, $hgUW1$isUndefined)(this.outputs[this._changeIndex]), 'Change index points to undefined output.');\n            (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.outputs[this._changeIndex].scriptPubKey.toHex() === this._changeScript?.toHex(), 'Change output has an unexpected script.');\n        }\n        if (transaction?.id) (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(transaction.id === this.id, 'Id in object does not match transaction id.');\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $54bdedd720718511$export$2e2bcd8739ae039 {\n    /**\n   * Represents an unspent output information: its outpoint hash, associated amount/sats,\n   * associated script or address with optional group info,\n   *\n   * @param utxo the utxo object\n   * @param utxo.outpoint the outpoint hash\n   * @param utxo.amount amount of nexa associated as string or number\n   * @param utxo.satoshis alias for `amount`, but expressed in satoshis (1 NEXA = 100 satoshis) as bigint, string or number\n   * @param utxo.scriptPubKey the script that must be resolved to release the funds\n   * @param utxo.address optional. can be used instead of the full script\n   * @param utxo.groupId optional. can be used instead of the full script\n   * @param utxo.groupAmount optional. can be used instead of the full script\n   */ constructor(utxo){\n        this.toJSON = this.toObject;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(utxo), 'Must provide an object from where to extract data');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(utxo.outpoint), 'Invalid outpoint hash');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(utxo.satoshis) || !(0, $hgUW1$isUndefined)(utxo.amount), 'Must provide satoshis or amount');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(utxo.scriptPubKey) || !(0, $hgUW1$isUndefined)(utxo.address), 'Must provide script or address');\n        this.outpoint = utxo.outpoint;\n        this.satoshis = !(0, $hgUW1$isUndefined)(utxo.satoshis) ? BigInt(utxo.satoshis) : (0, $05e660d5daa855e4$export$2e2bcd8739ae039).parseNEXA(utxo.amount.toString());\n        this.scriptPubKey = !(0, $hgUW1$isUndefined)(utxo.scriptPubKey) ? new (0, $90f45db77a786f2b$export$2e2bcd8739ae039)(utxo.scriptPubKey) : (0, $fea109eb8128bf4c$export$2e2bcd8739ae039).buildOutFromAddress(utxo.address, utxo.groupId, utxo.groupAmount);\n    }\n    /**\n   * String representation: just the outpoint hash\n   */ toString() {\n        return this.outpoint;\n    }\n    /**\n   * Provide an informative output when displaying this object in the console\n   */ inspect() {\n        return `<UnspentOutput: ${this}, satoshis: ${this.satoshis}, script: ${this.scriptPubKey}>`;\n    }\n    /**\n   * Deserialize an UnspentOutput from an object\n   * @param data\n   */ static fromObject(data) {\n        return new $54bdedd720718511$export$2e2bcd8739ae039(data);\n    }\n    /**\n   * Returns a plain object (no prototype or methods) with the associated info for this utxo\n   */ toObject() {\n        return {\n            outpoint: this.outpoint,\n            scriptPubKey: this.scriptPubKey.toHex(),\n            amount: (0, $05e660d5daa855e4$export$2e2bcd8739ae039).formatNEXA(this.satoshis)\n        };\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $6ebeca4bc214d833$export$2e2bcd8739ae039 {\n    /**\n   * Wrapper around Signature with fields related to signing a transaction specifically\n   */ constructor(arg){\n        this.toJSON = this.toObject;\n        $6ebeca4bc214d833$export$2e2bcd8739ae039._validateArgs(arg);\n        this.inputIndex = arg.inputIndex;\n        this.publicKey = (0, $hgUW1$isString)(arg.publicKey) ? (0, $246eb589bb078d6d$export$2e2bcd8739ae039).fromString(arg.publicKey) : arg.publicKey;\n        this.subscript = (0, $hgUW1$isString)(arg.subscript) ? (0, $90f45db77a786f2b$export$2e2bcd8739ae039).fromHex(arg.subscript) : arg.subscript;\n        this.signature = (0, $hgUW1$isString)(arg.signature) ? (0, $369a157b63fbc3fd$export$2e2bcd8739ae039).fromString(arg.signature) : arg.signature;\n        this.sigType = (0, $hgUW1$isString)(arg.sigType) ? (0, $e50a883097cd2090$export$2e2bcd8739ae039).fromString(arg.sigType) : arg.sigType;\n    }\n    static _validateArgs(arg) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isObject)(arg), 'TxSignature must be instantiated from an object');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(arg.publicKey) && !!(0, $246eb589bb078d6d$export$2e2bcd8739ae039).from(arg.publicKey), 'publicKey');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(arg.inputIndex), 'inputIndex');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState((0, $hgUW1$isNumber)(arg.inputIndex), 'inputIndex must be a number');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(arg.subscript), 'subscript');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(arg.subscript instanceof (0, $90f45db77a786f2b$export$2e2bcd8739ae039) || (0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(arg.subscript), 'subscript must be an object or hexa value');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(arg.signature), 'signature');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(arg.signature instanceof (0, $369a157b63fbc3fd$export$2e2bcd8739ae039) || (0, $c337f7a9455509cf$export$2e2bcd8739ae039).isHexa(arg.signature), 'signature must be an object or hexa value');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(arg.sigType instanceof (0, $e50a883097cd2090$export$2e2bcd8739ae039) || (0, $hgUW1$isString)(arg.sigType), 'sigtype must be a sigtype object or string');\n    }\n    toObject() {\n        return {\n            inputIndex: this.inputIndex,\n            publicKey: this.publicKey.toString(),\n            subscript: this.subscript.toHex(),\n            signature: this.signature.toString(),\n            sigType: this.sigType.toString()\n        };\n    }\n    static fromObject(arg) {\n        return new $6ebeca4bc214d833$export$2e2bcd8739ae039(arg);\n    }\n    toTxSatisfier() {\n        return this.signature.toTxFormat(this.sigType.toBuffer());\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $2dc9a1945ba915b1$export$2e2bcd8739ae039 {\n    /**\n   * Create a signature\n   * \n   * @param transaction the transaction to sign\n   * @param inputNumber the input index for the signature\n   * @param sighashType the sighash type\n   * @param subscript the script that will be signed\n   * @param privateKey the privkey to sign with\n   * @returns The signature\n   */ static sign(transaction, inputNumber, sighashType, subscript, privateKey) {\n        let hashbuf = this.buildSighash(transaction, inputNumber, sighashType, subscript);\n        return (0, $1739481af0c86d04$export$2e2bcd8739ae039).sign(hashbuf, privateKey, 'little');\n    }\n    /**\n   * Verify a signature\n   * \n   * @param transaction the transaction to verify\n   * @param inputNumber the input index for the signature\n   * @param signature the signature to verify\n   * @param sighashType the sighash type\n   * @param subscript the script that will be verified\n   * @param publicKey the pubkey that correspond to the signing privkey\n   * @returns true if signature is valid\n   */ static verify(transaction, inputNumber, signature, sighashType, subscript, publicKey) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(transaction), 'transaction');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(signature), 'signature');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(sighashType), 'sighashType');\n        let hashbuf = this.buildSighash(transaction, inputNumber, sighashType, subscript);\n        return (0, $1739481af0c86d04$export$2e2bcd8739ae039).verify(hashbuf, signature, publicKey, 'little');\n    }\n    /**\n   * Returns a buffer of length 32 bytes with the hash that needs to be signed for OP_CHECKSIG(VERIFY).\n   *\n   * @param transaction the transaction to sign\n   * @param inputNumber the input index for the signature\n   * @param sighashType the sighash type\n   * @param subscript the script that will be signed\n   */ static buildSighash(transaction, inputNumber, sighashType, subscript) {\n        let components = this._getSighashComponents(transaction, inputNumber, sighashType);\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        // Version\n        writer.writeUInt8(transaction.version);\n        // Input prevouts/nSequence (none/all, depending on flags)\n        writer.write(components.hashPrevouts);\n        writer.write(components.hashInputAmounts);\n        writer.write(components.hashSequence);\n        // scriptCode of the input (serialized as scripts inside CTxOuts)\n        writer.writeVarLengthBuf(subscript.toBuffer());\n        // Outputs (none/one/all, depending on flags)\n        writer.write(components.hashOutputs);\n        // Locktime\n        writer.writeUInt32LE(transaction.nLockTime);\n        // sighashType \n        writer.writeVarLengthBuf(sighashType.toBuffer());\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf).reverse();\n    }\n    static _getSighashComponents(transaction, inputNumber, sighashType) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!sighashType.isInvalid(), 'sighashType');\n        let hashPrevouts, hashSequence, hashInputAmounts, hashOutputs;\n        switch(sighashType.inType){\n            case (0, $e50a883097cd2090$export$ae38be9ef660d12e).FIRSTN:\n                let firstN = sighashType.inData[0];\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(firstN <= transaction.inputs.length, 'firstN out of range');\n                hashPrevouts = this._getPrevoutHash(transaction, firstN);\n                hashSequence = this._getSequenceHash(transaction, firstN);\n                hashInputAmounts = this._getInputAmountHash(transaction, firstN);\n                break;\n            case (0, $e50a883097cd2090$export$ae38be9ef660d12e).THISIN:\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(inputNumber < transaction.inputs.length, 'inputNumber out of range');\n                hashPrevouts = this._getPrevoutHashOf(transaction, inputNumber);\n                hashSequence = this._getSequenceHashOf(transaction, inputNumber);\n                hashInputAmounts = this._getInputAmountHashOf(transaction, inputNumber);\n                break;\n            default:\n                hashPrevouts = this._getPrevoutHash(transaction, transaction.inputs.length);\n                hashSequence = this._getSequenceHash(transaction, transaction.inputs.length);\n                hashInputAmounts = this._getInputAmountHash(transaction, transaction.inputs.length);\n                break;\n        }\n        switch(sighashType.outType){\n            case (0, $e50a883097cd2090$export$cc0d5ed6c4786851).FIRSTN:\n                let firstN1 = sighashType.outData[0];\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(firstN1 <= transaction.outputs.length, 'firstN out of range');\n                hashOutputs = this._getOutputsHash(transaction, firstN1);\n                break;\n            case (0, $e50a883097cd2090$export$cc0d5ed6c4786851).TWO:\n                let [out1, out2] = sighashType.outData;\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(out1 < transaction.outputs.length, 'out1 out of range');\n                (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(out2 < transaction.outputs.length, 'out2 out of range');\n                hashOutputs = this._getOutputsHashOf(transaction, out1, out2);\n                break;\n            default:\n                hashOutputs = this._getOutputsHash(transaction, transaction.outputs.length);\n                break;\n        }\n        return {\n            hashPrevouts: hashPrevouts,\n            hashSequence: hashSequence,\n            hashInputAmounts: hashInputAmounts,\n            hashOutputs: hashOutputs\n        };\n    }\n    static _getPrevoutHash(tx, firstN) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        for(let i = 0; i < firstN; i++){\n            writer.writeUInt8(tx.inputs[i].type);\n            writer.writeReverse(tx.inputs[i].outpoint);\n        }\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n    static _getPrevoutHashOf(tx, inputNumber) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        writer.writeUInt8(tx.inputs[inputNumber].type);\n        writer.writeReverse(tx.inputs[inputNumber].outpoint);\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n    static _getSequenceHash(tx, firstN) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        for(let i = 0; i < firstN; i++)writer.writeUInt32LE(tx.inputs[i].sequenceNumber);\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n    static _getSequenceHashOf(tx, inputNumber) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        writer.writeUInt32LE(tx.inputs[inputNumber].sequenceNumber);\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n    static _getInputAmountHash(tx, firstN) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        for(let i = 0; i < firstN; i++)writer.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBigInt(tx.inputs[i].amount));\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n    static _getInputAmountHashOf(tx, inputNumber) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        writer.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBigInt(tx.inputs[inputNumber].amount));\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n    static _getOutputsHash(tx, firstN) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        for(let i = 0; i < firstN; i++)tx.outputs[i].toBufferWriter(writer);\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n    static _getOutputsHashOf(tx, out1, out2) {\n        let writer = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        tx.outputs[out1].toBufferWriter(writer);\n        tx.outputs[out2].toBufferWriter(writer);\n        let buf = writer.toBuffer();\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass $bd99faf64de54a2c$export$2e2bcd8739ae039 {\n    constructor(tx){\n        if (tx instanceof (0, $926e193f4c554367$export$2e2bcd8739ae039)) this.transaction = tx;\n        else this.transaction = new (0, $926e193f4c554367$export$2e2bcd8739ae039)(tx);\n    }\n    build() {\n        return this.transaction;\n    }\n    /**\n   * Add an input to this transaction. This is a high level interface\n   * to add an input, for more control, use {@link Transaction.addInput}.\n   *\n   * Can receive, as output information, the output of nexad's `listunspent` command,\n   * with a slightly fancier format recognized by this sdk:\n   *\n   * ```json\n   * {\n   *  outpoint: \"fcf7d303d67f19568cf4ab72d36d583baac461e0f62f289b3dff68da96c2117c\"\n   *  scriptPubKey: \"005114891c4b19cbcaefc31770a938ebd6b1fafabb1be6\",\n   *  satoshis: 181998351\n   * }\n   * // or alternative:\n   * {\n   *  outpoint: \"fcf7d303d67f19568cf4ab72d36d583baac461e0f62f289b3dff68da96c2117c\"\n   *  address: \"nexa:nqtsq5g53ywykxwtethux9ms4yuwh443ltatkxlx3s5pnvwh\",\n   *  amount: 1819983.51\n   *  groupId: <token address if relevant>\n   *  groupAmount: <token amount if relevant>\n   * }\n   * ```\n   * Where `address` can be either a string or a nexcore Address object. The\n   * same is true for `script`, which can be a string or a nexcore Script.\n   * \n   * @see {@link UTXO}\n   *\n   * Beware that this resets all the signatures for inputs.\n   *\n   * @example\n   * ```javascript\n   * let builder = new TransactionBuilder();\n   *\n   * // From a pay to public key template output from nexad's listunspent\n   * builder.from({'outpoint': '0000...', amount: 123.23, scriptPubKey: 'OP_0 OP_1 ...'});\n   *\n   * // From a pay to public key template output (with optional group data)\n   * builder.from({'outpoint': '0000...', satoshis: 12323, address: 'nexa:nqtsq5g...', groupId? 'nexa:tnq...', groupAmount: 56446n });\n   *\n   * // From a script template output\n   * builder.from({'outpoint': '0000...', satoshis: 1000, scriptPubKey: '...', templateData: { templateScript: '...', constraintScript: '...' }};\n   * \n   * let transaction = builder.build();\n   * ```\n   * \n   * @param utxo details on the utxo\n   * @returns this, for chaining\n   */ from(utxo) {\n        if ((0, $hgUW1$isArray)(utxo)) {\n            utxo.forEach((u)=>this.from(u));\n            return this;\n        }\n        let exist = this.transaction.inputs.some((input)=>input.outpoint.toString('hex') === utxo.outpoint);\n        if (exist) return this;\n        return this._fromUtxo(new (0, $54bdedd720718511$export$2e2bcd8739ae039)(utxo), utxo.templateData);\n    }\n    _fromUtxo(utxo, templateData) {\n        let clazz;\n        if (utxo.scriptPubKey.isPublicKeyHashOut()) clazz = (0, $5cf2ce125ae8c2d7$export$2e2bcd8739ae039);\n        else if (utxo.scriptPubKey.isPublicKeyTemplateOut()) clazz = (0, $49712dfa37abdb5b$export$2e2bcd8739ae039);\n        else if (utxo.scriptPubKey.isScriptTemplateOut() && (0, $hgUW1$isObject)(templateData)) clazz = (0, $6995bc57838749e2$export$2e2bcd8739ae039);\n        else clazz = (0, $9b92277fa5d35484$export$2e2bcd8739ae039);\n        let input = new clazz({\n            output: new (0, $98955c312257c252$export$2e2bcd8739ae039)(utxo.satoshis, utxo.scriptPubKey),\n            outpoint: utxo.outpoint,\n            scriptSig: (0, $90f45db77a786f2b$export$2e2bcd8739ae039).empty(),\n            amount: utxo.satoshis,\n            templateData: templateData\n        });\n        this.transaction.addInput(input);\n        return this;\n    }\n    /**\n   * Add an output to the transaction.\n   *\n   * Beware that this resets all the signatures for inputs.\n   *\n   * @param address the destination address\n   * @param amount in satoshis, the nexa amount\n   * @param groupId optional. the token address if sending tokens\n   * @param groupAmount optional. the token amount if sending tokens\n   * \n   * @remarks if sending token, the nexa amount is usually {@link Transaction.DUST_AMOUNT}\n   * \n   * @returns this, for chaining\n   */ to(address, amount, groupId, groupAmount) {\n        let script = (0, $fea109eb8128bf4c$export$2e2bcd8739ae039).buildOutFromAddress(address, groupId, groupAmount);\n        let output = new (0, $98955c312257c252$export$2e2bcd8739ae039)(amount, script);\n        this.transaction.addOutput(output);\n        return this;\n    }\n    /**\n   * Add an OP_RETURN output to the transaction.\n   *\n   * Beware that this resets all the signatures for inputs.\n   *\n   * @param data the data to be stored in the OP_RETURN output.\n   *    In case of a string, the UTF-8 representation will be stored\n   * @param isFullScript if the provided data is already an op_return script. default false.\n   * @returns this, for chaining\n   */ addData(data, isFullScript = false) {\n        let script = isFullScript ? new (0, $90f45db77a786f2b$export$2e2bcd8739ae039)(data) : (0, $fea109eb8128bf4c$export$2e2bcd8739ae039).buildDataOut(data);\n        let output = new (0, $98955c312257c252$export$2e2bcd8739ae039)(0, script);\n        this.transaction.addOutput(output);\n        return this;\n    }\n    /**\n   * Set the change address for this transaction\n   *\n   * Beware that this resets all the signatures for inputs.\n   *\n   * @param address An address for change to be sent to.\n   * @returns this, for chaining\n   */ change(address) {\n        this.transaction.setChangeOutput(address);\n        return this;\n    }\n    /**\n   * Manually set the fee for this transaction. \n   * \n   * Beware that this resets all the signatures for inputs.\n   *\n   * @param amount satoshis to be used as fee\n   * @returns this, for chaining\n   */ fee(amount) {\n        this.transaction.setFee(amount);\n        return this;\n    }\n    /**\n   * Manually set the fee per Byte rate for this transaction.\n   * \n   * Beware that this resets all the signatures for inputs.\n   * \n   * @remarks fee per Byte will be ignored if fee property was set manually\n   *\n   * @param amount satoshis per Byte to be used as fee rate\n   * @returns this, for chaining\n   */ feePerByte(amount) {\n        this.transaction.setFeePerByte(amount);\n        return this;\n    }\n    /**\n   * Sets nLockTime so that transaction is not valid until the desired date\n   * \n   * (a timestamp in seconds since UNIX epoch is also accepted)\n   *\n   * @param datetime Date object or unix timestamp number\n   * @returns this, for chaining\n   */ lockUntilDate(datetime) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isUndefined)(datetime), 'datetime');\n        if ((0, $hgUW1$isNumber)(datetime) && datetime < (0, $926e193f4c554367$export$2e2bcd8739ae039).NLOCKTIME_BLOCKHEIGHT_LIMIT) throw new Error(\"Lock Time can't be earlier than UNIX date 500 000 000\");\n        if ((0, $hgUW1$isDate)(datetime)) datetime = datetime.getTime() / 1000;\n        this.transaction.setLockTime(datetime);\n        return this;\n    }\n    /**\n   * Sets nLockTime so that transaction is not valid until the desired block height.\n   *\n   * @param height the block height\n   * @returns this, for chaining\n   */ lockUntilBlockHeight(height) {\n        if (height >= (0, $926e193f4c554367$export$2e2bcd8739ae039).NLOCKTIME_BLOCKHEIGHT_LIMIT) throw new Error(\"Block Height can be at most 2^32 - 1\");\n        if (height < 0) throw new Error(\"Block Height cannot be negative\");\n        this.transaction.setLockTime(height);\n        return this;\n    }\n    /**\n   * Sign the transaction using one or more private keys.\n   *\n   * It tries to sign each input, verifying that the signature will be valid\n   * (matches a public key). Usually this is the last step that should be used with the builder.\n   * \n   * @remarks this method sign all inputs and outputs (sighash type ALL).\n   *  \n   * if you need to sign a specific input or partial transaction\n   *  (create new or complete existing one), use {@link signInput} method.\n   *\n   * @param privateKey private key(s) that be used to sign\n   * @returns this, for chaining\n   */ sign(privateKey) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.transaction.hasAllUtxoInfo(), 'Not all utxo information is available to sign the transaction.');\n        if ((0, $hgUW1$isArray)(privateKey)) {\n            privateKey.forEach((key)=>this.sign(key));\n            return this;\n        }\n        this._getSignatures(privateKey, (0, $e50a883097cd2090$export$2e2bcd8739ae039).ALL).forEach((sig)=>this._applySignature(sig));\n        return this;\n    }\n    /**\n   * Sign specific input using private key and sighash type.\n   * \n   * Use sigtype to determine which parts of the transaction to sign.\n   * \n   * @param input The input to sign. can be input index (number) or input outpoint hash (string)\n   * @param privateKey private key that be used to sign\n   * @param sigtype the sighash type to define which parts to include in the sighash\n   * @returns this, for chaining\n   */ signInput(input, privateKey, sigtype) {\n        if ((0, $hgUW1$isString)(input)) input = this.transaction.inputs.findIndex((inp)=>inp.outpoint.toString('hex') === input);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(input >= 0 && input < this.transaction.inputs.length, 'input', 'out of range.');\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.transaction.inputs[input].canSign(privateKey), 'The provided key cannot sign this input');\n        let txSig = this._getSignature(input, privateKey, sigtype);\n        this._applySignature(txSig);\n        return this;\n    }\n    _getSignatures(privKey, sigtype) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(privKey instanceof (0, $9e7155c0d97105d3$export$2e2bcd8739ae039), 'privKey', 'not a private key');\n        let signatures = [];\n        for(let i = 0; i < this.transaction.inputs.length; i++){\n            if (!this.transaction.inputs[i].canSign(privKey)) continue;\n            let txSig = this._getSignature(i, privKey, sigtype);\n            signatures.push(txSig);\n        }\n        return signatures;\n    }\n    _getSignature(index, privKey, sigtype) {\n        let subscript = this.transaction.inputs[index].getSubscript();\n        return new (0, $6ebeca4bc214d833$export$2e2bcd8739ae039)({\n            inputIndex: index,\n            publicKey: privKey.publicKey,\n            subscript: subscript,\n            signature: (0, $2dc9a1945ba915b1$export$2e2bcd8739ae039).sign(this.transaction, index, sigtype, subscript, privKey),\n            sigType: sigtype\n        });\n    }\n    _applySignature(signature) {\n        let isValid = (0, $2dc9a1945ba915b1$export$2e2bcd8739ae039).verify(this.transaction, signature.inputIndex, signature.signature, signature.sigType, signature.subscript, signature.publicKey);\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(isValid, 'Signature is invalid');\n        this.transaction.inputs[signature.inputIndex].addSignature(signature);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\nclass $023a6329646d8372$export$2e2bcd8739ae039 {\n    static{\n        this.MAX_TIME_OFFSET = 7200;\n    }\n    constructor(data){\n        this.toJSON = this.toObject;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(data), 'data is required');\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data)) data = $023a6329646d8372$export$2e2bcd8739ae039._fromBufferReader(new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(data));\n        else if (!(0, $hgUW1$isObject)(data)) throw new TypeError('Unrecognized argument for BlockHeader');\n        this.prevHash = (0, $hgUW1$isString)(data.prevHash) ? Buffer.from(data.prevHash, 'hex') : data.prevHash;\n        this.bits = data.bits;\n        this.ancestorHash = (0, $hgUW1$isString)(data.ancestorHash) ? Buffer.from(data.ancestorHash, 'hex') : data.ancestorHash;\n        this.merkleRoot = (0, $hgUW1$isString)(data.merkleRoot) ? Buffer.from(data.merkleRoot, 'hex') : data.merkleRoot;\n        this.txFilter = (0, $hgUW1$isString)(data.txFilter) ? Buffer.from(data.txFilter, 'hex') : data.txFilter;\n        this.time = data.time;\n        this.height = data.height;\n        this.chainWork = (0, $hgUW1$isString)(data.chainWork) ? Buffer.from(data.chainWork, 'hex') : data.chainWork;\n        this.size = data.size;\n        this.txCount = data.txCount;\n        this.poolFee = data.poolFee;\n        this.utxoCommitment = (0, $hgUW1$isString)(data.utxoCommitment) ? Buffer.from(data.utxoCommitment, 'hex') : data.utxoCommitment;\n        this.minerData = (0, $hgUW1$isString)(data.minerData) ? Buffer.from(data.minerData, 'hex') : data.minerData;\n        this.nonce = (0, $hgUW1$isString)(data.nonce) ? Buffer.from(data.nonce, 'hex') : data.nonce;\n        if (data.hash) (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(this.hash === data.hash, 'Argument object hash property does not match block hash.');\n    }\n    get hash() {\n        return this._getHash().reverse().toString('hex');\n    }\n    /**\n   * @returns The little endian hash buffer of the header\n   */ _getHash() {\n        let miniHeader = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        miniHeader.writeReverse(this.prevHash);\n        miniHeader.writeInt32LE(this.bits);\n        let miniHash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256(miniHeader.toBuffer());\n        let extHeader = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        extHeader.writeReverse(this.ancestorHash);\n        extHeader.writeReverse(this.txFilter);\n        extHeader.writeReverse(this.merkleRoot);\n        extHeader.writeInt32LE(this.time);\n        extHeader.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(this.height));\n        extHeader.writeReverse(this.chainWork);\n        extHeader.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(this.size));\n        extHeader.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(this.txCount));\n        extHeader.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(this.poolFee));\n        extHeader.writeVarLengthBuf(this.utxoCommitment);\n        extHeader.writeVarLengthBuf(this.minerData);\n        extHeader.writeVarLengthBuf(this.nonce);\n        let extHash = (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256(extHeader.toBuffer());\n        let commintment = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        commintment.write(miniHash);\n        commintment.write(extHash);\n        return (0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256(commintment.toBuffer());\n    }\n    /**\n   * @param br A BufferReader of the block header\n   * @returns An object representing block header data\n   */ static _fromBufferReader(br) {\n        return {\n            prevHash: br.readReverse(32),\n            bits: br.readUInt32LE(),\n            ancestorHash: br.readReverse(32),\n            merkleRoot: br.readReverse(32),\n            txFilter: br.readReverse(32),\n            time: br.readUInt32LE(),\n            height: br.readCoreVarintNum(),\n            chainWork: br.readReverse(32),\n            size: br.readUInt64LEBN().toNumber(),\n            txCount: br.readCoreVarintNum(),\n            poolFee: br.readCoreVarintNum(),\n            utxoCommitment: br.readVarLengthBuffer(),\n            minerData: br.readVarLengthBuffer(),\n            nonce: br.readVarLengthBuffer()\n        };\n    }\n    /**\n   * This method is useful for hex that represent concatination of multiple headers\n   * so it able to serve in a loop.\n   * \n   * @param br A BufferReader of the block header\n   * @returns An instance of block header\n   */ static fromBufferReader(br) {\n        let info = this._fromBufferReader(br);\n        return new $023a6329646d8372$export$2e2bcd8739ae039(info);\n    }\n    /**\n   * @param header A plain JavaScript block header object\n   * @returns An instance of block header\n   */ static fromObject(header) {\n        return new $023a6329646d8372$export$2e2bcd8739ae039(header);\n    }\n    /**\n   * @param buf A buffer of the block header\n   * @returns An instance of block header\n   */ static fromBuffer(buf) {\n        return this.fromBufferReader(new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(buf));\n    }\n    /**\n   * @param hex A hex encoded buffer of the block header\n   * @returns An instance of block header\n   */ static fromString(hex) {\n        let buf = Buffer.from(hex, 'hex');\n        return this.fromBuffer(buf);\n    }\n    /**\n   * @returns A plain object of the BlockHeader\n   */ toObject() {\n        return {\n            hash: this.hash,\n            prevHash: this.prevHash.toString('hex'),\n            bits: this.bits,\n            ancestorHash: this.ancestorHash.toString('hex'),\n            merkleRoot: this.merkleRoot.toString('hex'),\n            txFilter: this.txFilter.toString('hex'),\n            time: this.time,\n            height: this.height,\n            chainWork: this.chainWork.toString('hex'),\n            size: this.size,\n            txCount: this.txCount,\n            poolFee: this.poolFee,\n            utxoCommitment: this.utxoCommitment.toString('hex'),\n            minerData: this.minerData.toString('hex'),\n            nonce: this.nonce.toString('hex')\n        };\n    }\n    /**\n   * @param bw - An existing instance BufferWriter\n   * @returns An instance of BufferWriter representation of the BlockHeader\n   */ toBufferWriter(bw) {\n        if (!bw) bw = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        bw.writeReverse(this.prevHash);\n        bw.writeInt32LE(this.bits);\n        bw.writeReverse(this.ancestorHash);\n        bw.writeReverse(this.merkleRoot);\n        bw.writeReverse(this.txFilter);\n        bw.writeInt32LE(this.time);\n        bw.writeCoreVarintNum(this.height);\n        bw.writeReverse(this.chainWork);\n        bw.writeUInt64LEBN((0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(this.size));\n        bw.writeCoreVarintNum(this.txCount);\n        bw.writeCoreVarintNum(this.poolFee);\n        bw.writeVarLengthBuf(this.utxoCommitment);\n        bw.writeVarLengthBuf(this.minerData);\n        bw.writeVarLengthBuf(this.nonce);\n        return bw;\n    }\n    /**\n   * @returns A Buffer of the BlockHeader\n   */ toBuffer() {\n        return this.toBufferWriter().toBuffer();\n    }\n    /**\n   * @returns A hex encoded string of the BlockHeader\n   */ toString() {\n        return this.toBuffer().toString('hex');\n    }\n    /**\n   * @returns A string formatted for the console\n   */ inspect() {\n        return `<BlockHeader ${this.hash}>`;\n    }\n    /**\n   * Returns the target difficulty for this block\n   * \n   * @param bits the bits number\n   * @returns An instance of BN with the decoded difficulty bits\n   */ getTargetDifficulty(bits) {\n        let bitsBuf = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromNumber(bits || this.bits).toBuffer({\n            size: 4,\n            endian: 'little'\n        });\n        let exponent = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(Buffer.from([\n            bitsBuf[0]\n        ]));\n        let significand = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromBuffer(bitsBuf.subarray(1));\n        let target = significand.toBigInt() * 2n ** (8n * (exponent.toBigInt() - 3n));\n        return new (0, $5aa97aebe18a7924$export$2e2bcd8739ae039)(target.toString());\n    }\n    /**\n   * @returns the target difficulty for this block\n   */ getDifficulty() {\n        let nShift = this.bits >> 24 & 0xff;\n        let dDiff = 0x0000ffff / (this.bits & 0x00ffffff);\n        while(nShift < 29){\n            dDiff *= 256.0;\n            nShift++;\n        }\n        while(nShift > 29){\n            dDiff /= 256.0;\n            nShift--;\n        }\n        return dDiff;\n    }\n    /**\n   * @returns true If timestamp is not too far in the future\n   */ validTimestamp() {\n        let currentTime = Math.round(new Date().getTime() / 1000);\n        return this.time <= currentTime + $023a6329646d8372$export$2e2bcd8739ae039.MAX_TIME_OFFSET;\n    }\n    /**\n   * @returns true If the proof-of-work hash satisfies the target difficulty\n   */ validProofOfWork() {\n        let pow = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromString(this.hash, 'hex');\n        let target = this.getTargetDifficulty();\n        return pow.lte(target);\n    }\n}\n\n\n\n\n\n\n\nclass $8f7c467a9646afdb$export$2e2bcd8739ae039 {\n    constructor(data){\n        this.toJSON = this.toObject;\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(data), 'data is required');\n        if ((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).isBuffer(data)) data = $8f7c467a9646afdb$export$2e2bcd8739ae039._fromBufferReader(new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(data));\n        else if (!(0, $hgUW1$isObject)(data)) throw new TypeError('Unrecognized argument for Block');\n        this.header = data.header instanceof (0, $023a6329646d8372$export$2e2bcd8739ae039) ? data.header : (0, $023a6329646d8372$export$2e2bcd8739ae039).fromObject(data.header);\n        this.transactions = [];\n        data.transactions.forEach((tx)=>{\n            if (tx instanceof (0, $926e193f4c554367$export$2e2bcd8739ae039)) this.transactions.push(tx);\n            else this.transactions.push(new (0, $926e193f4c554367$export$2e2bcd8739ae039)().fromObject(tx));\n        });\n    }\n    get hash() {\n        return this.header.hash;\n    }\n    /**\n   * @param obj A plain JavaScript object\n   * @returns An instance of block\n   */ static fromObject(obj) {\n        return new $8f7c467a9646afdb$export$2e2bcd8739ae039(obj);\n    }\n    /**\n   * @param br A BufferReader of the block\n   * @returns An object representing the block data\n   */ static _fromBufferReader(br) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateState(!br.finished(), 'No block data received');\n        let header = (0, $023a6329646d8372$export$2e2bcd8739ae039).fromBufferReader(br);\n        let txNum = br.readVarintNum();\n        let transactions = [];\n        for(let i = 0; i < txNum; i++)transactions.push(new (0, $926e193f4c554367$export$2e2bcd8739ae039)().fromBufferReader(br));\n        return {\n            header: header,\n            transactions: transactions\n        };\n    }\n    /**\n   * @param br A buffer reader of the block\n   * @returns An instance of block\n   */ static fromBufferReader(br) {\n        (0, $e44f707fde477092$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(br), 'br is required');\n        let info = $8f7c467a9646afdb$export$2e2bcd8739ae039._fromBufferReader(br);\n        return new $8f7c467a9646afdb$export$2e2bcd8739ae039(info);\n    }\n    /**\n   * @param buf A buffer of the block\n   * @returns An instance of block\n   */ static fromBuffer(buf) {\n        return $8f7c467a9646afdb$export$2e2bcd8739ae039.fromBufferReader(new (0, $12fea2c2eb591556$export$2e2bcd8739ae039)(buf));\n    }\n    /**\n   * @param str A hex encoded string of the block\n   * @returns A hex encoded string of the block\n   */ static fromString(str) {\n        let buf = Buffer.from(str, 'hex');\n        return $8f7c467a9646afdb$export$2e2bcd8739ae039.fromBuffer(buf);\n    }\n    /**\n   * @returns A plain object with the block properties\n   */ toObject() {\n        return {\n            header: this.header.toObject(),\n            transactions: this.transactions.map((tx)=>tx.toObject())\n        };\n    }\n    /**\n   * @param bw An existing instance of BufferWriter (optional)\n   * @returns An instance of BufferWriter representation of the Block\n   */ toBufferWriter(bw) {\n        if (!bw) bw = new (0, $35852622c8c617e8$export$2e2bcd8739ae039)();\n        bw.write(this.header.toBuffer());\n        bw.writeVarintNum(this.transactions.length);\n        for (let tx of this.transactions)tx.toBufferWriter(bw);\n        return bw;\n    }\n    /**\n   * @returns A buffer of the block\n   */ toBuffer() {\n        return this.toBufferWriter().toBuffer();\n    }\n    /**\n   * @returns A hex encoded string of the block\n   */ toString() {\n        return this.toBuffer().toString('hex');\n    }\n    /**\n   * @returns A string formatted for the console\n   */ inspect() {\n        return `<Block ${this.hash}>`;\n    }\n    /**\n   * Will iterate through each transaction and return an array of hashes\n   * @returns An array with transaction hashes\n   */ getTransactionHashes() {\n        return this.transactions.map((tx)=>Buffer.from(tx.id, 'hex').reverse());\n    }\n    /**\n   * Will build a merkle tree of all the transactions, ultimately arriving at\n   * a single point, the merkle root.\n   * \n   * @see {@link https://spec.nexa.org/blocks/merkle-tree/}\n   * @returns An array with each level of the tree after the other.\n   */ getMerkleTree() {\n        let tree = this.getTransactionHashes();\n        let j = 0;\n        for(let size = this.transactions.length; size > 1; size = Math.floor((size + 1) / 2)){\n            for(let i = 0; i < size; i += 2){\n                let i2 = Math.min(i + 1, size - 1);\n                let buf = Buffer.concat([\n                    tree[j + i],\n                    tree[j + i2]\n                ]);\n                tree.push((0, $62ca61b6ba036e1b$export$2e2bcd8739ae039).sha256sha256(buf));\n            }\n            j += size;\n        }\n        return tree;\n    }\n    /**\n   * Calculates the merkleRoot from the transactions.\n   * \n   * @returns A buffer of the merkle root hash\n   */ getMerkleRoot() {\n        let tree = this.getMerkleTree();\n        return tree[tree.length - 1];\n    }\n    /**\n   * Verifies that the transactions in the block match the header merkle root\n   * \n   * @returns true If the merkle roots match\n   */ validMerkleRoot() {\n        let h = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromString((0, $9f918c10ad4fef51$export$2e2bcd8739ae039).reverse(this.header.merkleRoot).toString('hex'), 'hex');\n        let c = (0, $5aa97aebe18a7924$export$2e2bcd8739ae039).fromString(this.getMerkleRoot().toString('hex'), 'hex');\n        return h.eq(c);\n    }\n}\n\n\n\n\n\n\n\n\nfunction $149c1bd638913645$var$versionGuard(version) {\n    if (version !== undefined) {\n        let message = \"More than one instance of libnexa found. Please make sure to require libnexa and check that submodules do not also include their own libnexa dependency.\";\n        throw new Error(message);\n    }\n}\n$149c1bd638913645$var$versionGuard($parcel$global._libnexa_ver);\n$parcel$global._libnexa_ver = `v${0, $df64573ef6d51081$exports.version}`;\nconst $149c1bd638913645$var$crypto = {\n    BN: (0, $5aa97aebe18a7924$export$2e2bcd8739ae039),\n    Hash: $62ca61b6ba036e1b$export$2e2bcd8739ae039,\n    ECDSA: $1ef65db4b26d2b16$export$2e2bcd8739ae039,\n    Schnorr: $1739481af0c86d04$export$2e2bcd8739ae039,\n    Signature: $369a157b63fbc3fd$export$2e2bcd8739ae039\n};\nconst $149c1bd638913645$var$encoding = {\n    BufferReader: $12fea2c2eb591556$export$2e2bcd8739ae039,\n    BufferWriter: $35852622c8c617e8$export$2e2bcd8739ae039\n};\nconst $149c1bd638913645$var$utils = {\n    BufferUtils: $9f918c10ad4fef51$export$2e2bcd8739ae039,\n    CommonUtils: $c337f7a9455509cf$export$2e2bcd8739ae039,\n    UnitUtils: $05e660d5daa855e4$export$2e2bcd8739ae039\n};\nconst $149c1bd638913645$var$keys = {\n    PrivateKey: $9e7155c0d97105d3$export$2e2bcd8739ae039,\n    PublicKey: $246eb589bb078d6d$export$2e2bcd8739ae039,\n    HDPrivateKey: $8fc74ca0a6995b3b$export$2e2bcd8739ae039,\n    HDPublicKey: $ef69ee312dbfbba6$export$2e2bcd8739ae039\n};\nconst $149c1bd638913645$var$tx = {\n    Transaction: $926e193f4c554367$export$2e2bcd8739ae039,\n    Input: $9b92277fa5d35484$export$2e2bcd8739ae039,\n    PublicKeyHashInput: $5cf2ce125ae8c2d7$export$2e2bcd8739ae039,\n    PublicKeyTemplateInput: $49712dfa37abdb5b$export$2e2bcd8739ae039,\n    ScriptTemplateInput: $6995bc57838749e2$export$2e2bcd8739ae039,\n    Output: $98955c312257c252$export$2e2bcd8739ae039,\n    UnspentOutput: $54bdedd720718511$export$2e2bcd8739ae039,\n    TxSignature: $6ebeca4bc214d833$export$2e2bcd8739ae039,\n    TxSigner: $2dc9a1945ba915b1$export$2e2bcd8739ae039,\n    SighashType: $e50a883097cd2090$export$2e2bcd8739ae039\n};\nconst $149c1bd638913645$export$2e8191f482a38ccd = (0, $a89918d61ea4dca0$export$2e2bcd8739ae039).getInstance();\nconst $149c1bd638913645$var$libnexa = {\n    versionGuard: $149c1bd638913645$var$versionGuard,\n    version: `v${(0, $df64573ef6d51081$exports.version)}`,\n    crypto: $149c1bd638913645$var$crypto,\n    encoding: $149c1bd638913645$var$encoding,\n    utils: $149c1bd638913645$var$utils,\n    keys: $149c1bd638913645$var$keys,\n    tx: $149c1bd638913645$var$tx,\n    Networks: (0, $a89918d61ea4dca0$export$2e2bcd8739ae039).getInstance(),\n    Opcode: $92c0719d4ab9ac45$export$393941f88fd16991,\n    Script: $90f45db77a786f2b$export$2e2bcd8739ae039,\n    ScriptFactory: $fea109eb8128bf4c$export$2e2bcd8739ae039,\n    ScriptOpcode: $92c0719d4ab9ac45$export$2e2bcd8739ae039,\n    Address: $92cd415860c918d9$export$2e2bcd8739ae039,\n    Message: $62ed62398e988143$export$2e2bcd8739ae039,\n    TransactionBuilder: $bd99faf64de54a2c$export$2e2bcd8739ae039,\n    Block: $8f7c467a9646afdb$export$2e2bcd8739ae039,\n    BlockHeader: $023a6329646d8372$export$2e2bcd8739ae039,\n    GroupToken: $a0743653d736276e$export$2e2bcd8739ae039\n};\nvar $149c1bd638913645$export$2e2bcd8739ae039 = $149c1bd638913645$var$libnexa;\n\n\nexport {$149c1bd638913645$export$2e8191f482a38ccd as Networks, $149c1bd638913645$export$2e2bcd8739ae039 as default, $5aa97aebe18a7924$export$2e2bcd8739ae039 as BNExtended, $ba7e1a38972b2d09$export$2e2bcd8739ae039 as Point, $62ca61b6ba036e1b$export$2e2bcd8739ae039 as Hash, $369a157b63fbc3fd$export$2e2bcd8739ae039 as Signature, $2a1cae3adbd93346$export$2e2bcd8739ae039 as DigitalSignature, $1ef65db4b26d2b16$export$2e2bcd8739ae039 as ECDSA, $1739481af0c86d04$export$2e2bcd8739ae039 as Schnorr, $12fea2c2eb591556$export$2e2bcd8739ae039 as BufferReader, $35852622c8c617e8$export$2e2bcd8739ae039 as BufferWriter, $ddbf68ec49150fba$export$95be4ae94445245a as Network, $a89918d61ea4dca0$export$2e2bcd8739ae039 as NetworkManager, $05e660d5daa855e4$export$80d48287646c9e3b as UnitType, $05e660d5daa855e4$export$2e2bcd8739ae039 as UnitUtils, $9f918c10ad4fef51$export$2e2bcd8739ae039 as BufferUtils, $c337f7a9455509cf$export$2e2bcd8739ae039 as CommonUtils, $9e7155c0d97105d3$export$2e2bcd8739ae039 as PrivateKey, $246eb589bb078d6d$export$2e2bcd8739ae039 as PublicKey, $8fc74ca0a6995b3b$export$2e2bcd8739ae039 as HDPrivateKey, $ef69ee312dbfbba6$export$2e2bcd8739ae039 as HDPublicKey, $92c0719d4ab9ac45$export$393941f88fd16991 as Opcode, $92c0719d4ab9ac45$export$2e2bcd8739ae039 as ScriptOpcode, $90f45db77a786f2b$export$2e2bcd8739ae039 as Script, $fea109eb8128bf4c$export$2e2bcd8739ae039 as ScriptFactory, $92cd415860c918d9$export$2e2bcd8739ae039 as Address, $c889a5b1bdeeb100$export$189c6ba3eaa96ac2 as AddressType, $8f7c467a9646afdb$export$2e2bcd8739ae039 as Block, $023a6329646d8372$export$2e2bcd8739ae039 as BlockHeader, $e50a883097cd2090$export$2e2bcd8739ae039 as SighashType, $e50a883097cd2090$export$ae38be9ef660d12e as InputSighashType, $e50a883097cd2090$export$cc0d5ed6c4786851 as OutputSighashType, $926e193f4c554367$export$2e2bcd8739ae039 as Transaction, $54bdedd720718511$export$2e2bcd8739ae039 as UnspentOutput, $98955c312257c252$export$2e2bcd8739ae039 as Output, $98955c312257c252$export$be94d7b677b041dd as OutputType, $9b92277fa5d35484$export$2e2bcd8739ae039 as Input, $9b92277fa5d35484$export$476dfc2401bc286b as InputType, $49712dfa37abdb5b$export$2e2bcd8739ae039 as PublicKeyTemplateInput, $6995bc57838749e2$export$2e2bcd8739ae039 as ScriptTemplateInput, $5cf2ce125ae8c2d7$export$2e2bcd8739ae039 as PublicKeyHashInput, $2dc9a1945ba915b1$export$2e2bcd8739ae039 as TxSigner, $6ebeca4bc214d833$export$2e2bcd8739ae039 as TxSignature, $bd99faf64de54a2c$export$2e2bcd8739ae039 as TransactionBuilder, $62ed62398e988143$export$2e2bcd8739ae039 as Message, $a0743653d736276e$export$2e2bcd8739ae039 as GroupToken, $a0743653d736276e$export$7b9ebdcfe3200497 as GroupIdFlag, $a0743653d736276e$export$8da1cb8322810fc2 as GroupIdType};\n//# sourceMappingURL=index.web.mjs.map\n","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n * @deprecated\n */\nimport { SHA384 as SHA384n, sha384 as sha384n, sha512_224 as sha512_224n, SHA512_224 as SHA512_224n, sha512_256 as sha512_256n, SHA512_256 as SHA512_256n, SHA512 as SHA512n, sha512 as sha512n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512 = SHA512n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512 = sha512n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA384 = SHA384n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha384 = sha384n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512_224 = SHA512_224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512_224 = sha512_224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA512_256 = SHA512_256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha512_256 = sha512_256n;\n//# sourceMappingURL=sha512.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes } from \"./utils.js\";\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * PBKDF (RFC 2898). Can be used to create a key from password and salt.\n * @module\n */\nimport { hmac } from \"./hmac.js\";\n// prettier-ignore\nimport { ahash, anumber, asyncLoop, checkOpts, clean, createView, Hash, kdfInputToBytes } from \"./utils.js\";\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    ahash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    anumber(c);\n    anumber(dkLen);\n    anumber(asyncTick);\n    if (c < 1)\n        throw new Error('iterations (c) should be >= 1');\n    const password = kdfInputToBytes(_password);\n    const salt = kdfInputToBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    clean(u);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n * @example\n * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: Math.pow(2, 18) });\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.\n * @example\n * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });\n */\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/czech.json');\n    wordlists.czech = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/portuguese.json');\n    wordlists.portuguese = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please pass a 2048 word array explicitly.';\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = sha256_1.sha256(Uint8Array.from(entropyBuffer));\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Uint8Array.from(Buffer.from(normalize(mnemonic), 'utf8'));\n    const saltBuffer = Uint8Array.from(Buffer.from(salt(normalize(password)), 'utf8'));\n    const res = pbkdf2_1.pbkdf2(sha512_1.sha512, mnemonicBuffer, saltBuffer, {\n        c: 2048,\n        dkLen: 64,\n    });\n    return Buffer.from(res);\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    const mnemonicBuffer = Uint8Array.from(Buffer.from(normalize(mnemonic), 'utf8'));\n    const saltBuffer = Uint8Array.from(Buffer.from(salt(normalize(password)), 'utf8'));\n    return pbkdf2_1.pbkdf2Async(sha512_1.sha512, mnemonicBuffer, saltBuffer, {\n        c: 2048,\n        dkLen: 64,\n    }).then((res) => Buffer.from(res));\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy)) {\n        entropy = Buffer.from(entropy, 'hex');\n    }\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || ((size) => Buffer.from(utils_1.randomBytes(size)));\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result) {\n        DEFAULT_WORDLIST = result;\n    }\n    else {\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n    }\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST) {\n        throw new Error('No Default Wordlist set');\n    }\n    return Object.keys(_wordlists_1.wordlists).filter((lang) => {\n        if (lang === 'JA' || lang === 'EN') {\n            return false;\n        }\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value) {\n  return INTEGER_REGEX.test(value);\n}\nvar INTEGER_REGEX = /^-?[0-9]+$/;\n\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\nexport function isNumber(value) {\n  return NUMBER_REGEX.test(value);\n}\nvar NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n\n/**\n * Test whether a string can be safely represented with a number\n * without information loss.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\nexport function isSafeNumber(value, config) {\n  var num = parseFloat(value);\n  var str = String(num);\n  var v = extractSignificantDigits(value);\n  var s = extractSignificantDigits(str);\n  if (v === s) {\n    return true;\n  }\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    var requiredDigits = 14;\n    if (!isInteger(value) && s.length >= requiredDigits && v.startsWith(s.substring(0, requiredDigits))) {\n      return true;\n    }\n  }\n  return false;\n}\nexport var UnsafeNumberReason = /*#__PURE__*/function (UnsafeNumberReason) {\n  UnsafeNumberReason[\"underflow\"] = \"underflow\";\n  UnsafeNumberReason[\"overflow\"] = \"overflow\";\n  UnsafeNumberReason[\"truncate_integer\"] = \"truncate_integer\";\n  UnsafeNumberReason[\"truncate_float\"] = \"truncate_float\";\n  return UnsafeNumberReason;\n}({});\n\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\nexport function getUnsafeNumberReason(value) {\n  if (isSafeNumber(value, {\n    approx: false\n  })) {\n    return undefined;\n  }\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer;\n  }\n  var num = parseFloat(value);\n  if (!isFinite(num)) {\n    return UnsafeNumberReason.overflow;\n  }\n  if (num === 0) {\n    return UnsafeNumberReason.underflow;\n  }\n  return UnsafeNumberReason.truncate_float;\n}\n\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\nexport function toSafeNumberOrThrow(value, config) {\n  var number = parseFloat(value);\n  var unsafeReason = getUnsafeNumberReason(value);\n  if ((config === null || config === void 0 ? void 0 : config.approx) === true ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float : unsafeReason) {\n    var unsafeReasonText = unsafeReason.replace(/_\\w+$/, '');\n    throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(value, \"' would \").concat(unsafeReasonText, \" and become \").concat(number));\n  }\n  return number;\n}\n\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/\nexport function extractSignificantDigits(value) {\n  return value\n  // from \"-0.250e+30\" to \"-0.250\"\n  .replace(EXPONENTIAL_PART_REGEX, '')\n\n  // from \"-0.250\" to \"-0250\"\n  .replace(DOT_REGEX, '')\n\n  // from \"-0250\" to \"-025\"\n  .replace(TRAILING_ZEROS_REGEX, '')\n\n  // from \"-025\" to \"25\"\n  .replace(LEADING_MINUS_AND_ZEROS_REGEX, '');\n}\nvar EXPONENTIAL_PART_REGEX = /[eE][+-]?\\d+$/;\nvar LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/;\nvar DOT_REGEX = /\\./;\nvar TRAILING_ZEROS_REGEX = /0+$/;\n//# sourceMappingURL=utils.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { extractSignificantDigits, getUnsafeNumberReason, isInteger, isNumber, UnsafeNumberReason } from './utils.js';\n\n/**\n * A lossless number. Stores its numeric value as string\n */\nexport var LosslessNumber = /*#__PURE__*/function () {\n  function LosslessNumber(value) {\n    _classCallCheck(this, LosslessNumber);\n    // numeric value as string\n    // type information\n    _defineProperty(this, \"isLosslessNumber\", true);\n    if (!isNumber(value)) {\n      throw new Error('Invalid number (value: \"' + value + '\")');\n    }\n    this.value = value;\n  }\n\n  /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */\n  _createClass(LosslessNumber, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      var unsafeReason = getUnsafeNumberReason(this.value);\n\n      // safe or truncate_float\n      if (unsafeReason === undefined || unsafeReason === UnsafeNumberReason.truncate_float) {\n        return parseFloat(this.value);\n      }\n\n      // truncate_integer\n      if (isInteger(this.value)) {\n        return BigInt(this.value);\n      }\n\n      // overflow or underflow\n      throw new Error('Cannot safely convert to number: ' + \"the value '\".concat(this.value, \"' would \").concat(unsafeReason, \" and become \").concat(parseFloat(this.value)));\n    }\n\n    /**\n     * Get the value of the LosslessNumber as string.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value;\n    }\n\n    // Note: we do NOT implement a .toJSON() method, and you should not implement\n    // or use that, it cannot safely turn the numeric value in the string into\n    // stringified JSON since it has to be parsed into a number first.\n  }]);\n  return LosslessNumber;\n}();\n\n/**\n * Test whether a value is a LosslessNumber\n */\nexport function isLosslessNumber(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && _typeof(value) === 'object' && value.isLosslessNumber === true || false;\n}\n\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */\nexport function toLosslessNumber(value) {\n  if (extractSignificantDigits(value + '').length > 15) {\n    throw new Error('Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself ' + \"(value: \".concat(value, \")\"));\n  }\n  if (isNaN(value)) {\n    throw new Error('Invalid number: NaN');\n  }\n  if (!isFinite(value)) {\n    throw new Error('Invalid number: ' + value);\n  }\n  return new LosslessNumber(String(value));\n}\n//# sourceMappingURL=LosslessNumber.js.map","import { LosslessNumber } from './LosslessNumber.js';\nimport { isInteger } from './utils.js';\nexport function parseLosslessNumber(value) {\n  return new LosslessNumber(value);\n}\nexport function parseNumberAndBigInt(value) {\n  return isInteger(value) ? BigInt(value) : parseFloat(value);\n}\n//# sourceMappingURL=numberParsers.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport { isLosslessNumber } from './LosslessNumber.js';\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */\nexport function revive(json, reviver) {\n  return reviveValue({\n    '': json\n  }, '', json, reviver);\n}\n\n/**\n * Revive a value\n */\nfunction reviveValue(context, key, value, reviver) {\n  if (Array.isArray(value)) {\n    return reviver.call(context, key, reviveArray(value, reviver));\n  } else if (value && _typeof(value) === 'object' && !isLosslessNumber(value)) {\n    // note the special case for LosslessNumber,\n    // we don't want to iterate over the internals of a LosslessNumber\n    return reviver.call(context, key, reviveObject(value, reviver));\n  } else {\n    return reviver.call(context, key, value);\n  }\n}\n\n/**\n * Revive the properties of an object\n */\nfunction reviveObject(object, reviver) {\n  Object.keys(object).forEach(function (key) {\n    var value = reviveValue(object, key, object[key], reviver);\n    if (value !== undefined) {\n      object[key] = value;\n    } else {\n      delete object[key];\n    }\n  });\n  return object;\n}\n\n/**\n * Revive the properties of an Array\n */\nfunction reviveArray(array, reviver) {\n  for (var i = 0; i < array.length; i++) {\n    array[i] = reviveValue(array, i + '', array[i], reviver);\n  }\n  return array;\n}\n//# sourceMappingURL=revive.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { parseLosslessNumber } from './numberParsers.js';\nimport { revive } from './revive.js';\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [parseNumber=parseLosslessNumber]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */\nexport function parse(text, reviver) {\n  var parseNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : parseLosslessNumber;\n  var i = 0;\n  var value = parseValue();\n  expectValue(value);\n  expectEndOfInput();\n  return reviver ? revive(value, reviver) : value;\n  function parseObject() {\n    if (text.charCodeAt(i) === codeOpeningBrace) {\n      i++;\n      skipWhitespace();\n      var object = {};\n      var initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBrace) {\n        if (!initial) {\n          eatComma();\n          skipWhitespace();\n        } else {\n          initial = false;\n        }\n        var start = i;\n        var key = parseString();\n        if (key === undefined) {\n          throwObjectKeyExpected();\n        }\n        skipWhitespace();\n        eatColon();\n        var _value = parseValue();\n        if (_value === undefined) {\n          throwObjectValueExpected();\n        }\n\n        // TODO: test deep equal instead of strict equal\n        if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(_value, object[key])) {\n          // Note that we could also test `if(key in object) {...}`\n          // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n          throwDuplicateKey(key, start + 1);\n        }\n        object[key] = _value;\n      }\n      if (text.charCodeAt(i) !== codeClosingBrace) {\n        throwObjectKeyOrEndExpected();\n      }\n      i++;\n      return object;\n    }\n  }\n  function parseArray() {\n    if (text.charCodeAt(i) === codeOpeningBracket) {\n      i++;\n      skipWhitespace();\n      var array = [];\n      var initial = true;\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBracket) {\n        if (!initial) {\n          eatComma();\n        } else {\n          initial = false;\n        }\n        var _value2 = parseValue();\n        expectArrayItem(_value2);\n        array.push(_value2);\n      }\n      if (text.charCodeAt(i) !== codeClosingBracket) {\n        throwArrayItemOrEndExpected();\n      }\n      i++;\n      return array;\n    }\n  }\n  function parseValue() {\n    var _ref, _ref2, _ref3, _ref4, _ref5, _parseString;\n    skipWhitespace();\n    var value = (_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_parseString = parseString()) !== null && _parseString !== void 0 ? _parseString : parseNumeric()) !== null && _ref5 !== void 0 ? _ref5 : parseObject()) !== null && _ref4 !== void 0 ? _ref4 : parseArray()) !== null && _ref3 !== void 0 ? _ref3 : parseKeyword('true', true)) !== null && _ref2 !== void 0 ? _ref2 : parseKeyword('false', false)) !== null && _ref !== void 0 ? _ref : parseKeyword('null', null);\n    skipWhitespace();\n    return value;\n  }\n  function parseKeyword(name, value) {\n    if (text.slice(i, i + name.length) === name) {\n      i += name.length;\n      return value;\n    }\n  }\n  function skipWhitespace() {\n    while (isWhitespace(text.charCodeAt(i))) {\n      i++;\n    }\n  }\n  function parseString() {\n    if (text.charCodeAt(i) === codeDoubleQuote) {\n      i++;\n      var result = '';\n      while (i < text.length && text.charCodeAt(i) !== codeDoubleQuote) {\n        if (text.charCodeAt(i) === codeBackslash) {\n          var char = text[i + 1];\n          var escapeChar = escapeCharacters[char];\n          if (escapeChar !== undefined) {\n            result += escapeChar;\n            i++;\n          } else if (char === 'u') {\n            if (isHex(text.charCodeAt(i + 2)) && isHex(text.charCodeAt(i + 3)) && isHex(text.charCodeAt(i + 4)) && isHex(text.charCodeAt(i + 5))) {\n              result += String.fromCharCode(parseInt(text.slice(i + 2, i + 6), 16));\n              i += 5;\n            } else {\n              throwInvalidUnicodeCharacter(i);\n            }\n          } else {\n            throwInvalidEscapeCharacter(i);\n          }\n        } else {\n          if (isValidStringCharacter(text.charCodeAt(i))) {\n            result += text[i];\n          } else {\n            throwInvalidCharacter(text[i]);\n          }\n        }\n        i++;\n      }\n      expectEndOfString();\n      i++;\n      return result;\n    }\n  }\n  function parseNumeric() {\n    var start = i;\n    if (text.charCodeAt(i) === codeMinus) {\n      i++;\n      expectDigit(start);\n    }\n    if (text.charCodeAt(i) === codeZero) {\n      i++;\n    } else if (isNonZeroDigit(text.charCodeAt(i))) {\n      i++;\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeDot) {\n      i++;\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {\n      i++;\n      if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {\n        i++;\n      }\n      expectDigit(start);\n      while (isDigit(text.charCodeAt(i))) {\n        i++;\n      }\n    }\n    if (i > start) {\n      return parseNumber(text.slice(start, i));\n    }\n  }\n  function eatComma() {\n    if (text.charCodeAt(i) !== codeComma) {\n      throw new SyntaxError(\"Comma ',' expected after value \".concat(gotAt()));\n    }\n    i++;\n  }\n  function eatColon() {\n    if (text.charCodeAt(i) !== codeColon) {\n      throw new SyntaxError(\"Colon ':' expected after property name \".concat(gotAt()));\n    }\n    i++;\n  }\n  function expectValue(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"JSON value expected \".concat(gotAt()));\n    }\n  }\n  function expectArrayItem(value) {\n    if (value === undefined) {\n      throw new SyntaxError(\"Array item expected \".concat(gotAt()));\n    }\n  }\n  function expectEndOfInput() {\n    if (i < text.length) {\n      throw new SyntaxError(\"Expected end of input \".concat(gotAt()));\n    }\n  }\n  function expectDigit(start) {\n    if (!isDigit(text.charCodeAt(i))) {\n      var numSoFar = text.slice(start, i);\n      throw new SyntaxError(\"Invalid number '\".concat(numSoFar, \"', expecting a digit \").concat(gotAt()));\n    }\n  }\n  function expectEndOfString() {\n    if (text.charCodeAt(i) !== codeDoubleQuote) {\n      throw new SyntaxError(\"End of string '\\\"' expected \".concat(gotAt()));\n    }\n  }\n  function throwObjectKeyExpected() {\n    throw new SyntaxError(\"Quoted object key expected \".concat(gotAt()));\n  }\n  function throwDuplicateKey(key, pos) {\n    throw new SyntaxError(\"Duplicate key '\".concat(key, \"' encountered at position \").concat(pos));\n  }\n  function throwObjectKeyOrEndExpected() {\n    throw new SyntaxError(\"Quoted object key or end of object '}' expected \".concat(gotAt()));\n  }\n  function throwArrayItemOrEndExpected() {\n    throw new SyntaxError(\"Array item or end of array ']' expected \".concat(gotAt()));\n  }\n  function throwInvalidCharacter(char) {\n    throw new SyntaxError(\"Invalid character '\".concat(char, \"' \").concat(pos()));\n  }\n  function throwInvalidEscapeCharacter(start) {\n    var chars = text.slice(start, start + 2);\n    throw new SyntaxError(\"Invalid escape character '\".concat(chars, \"' \").concat(pos()));\n  }\n  function throwObjectValueExpected() {\n    throw new SyntaxError(\"Object value expected after ':' \".concat(pos()));\n  }\n  function throwInvalidUnicodeCharacter(start) {\n    var end = start + 2;\n    while (/\\w/.test(text[end])) {\n      end++;\n    }\n    var chars = text.slice(start, end);\n    throw new SyntaxError(\"Invalid unicode character '\".concat(chars, \"' \").concat(pos()));\n  }\n\n  // zero based character position\n  function pos() {\n    return \"at position \".concat(i);\n  }\n  function got() {\n    return i < text.length ? \"but got '\".concat(text[i], \"'\") : 'but reached end of input';\n  }\n  function gotAt() {\n    return got() + ' ' + pos();\n  }\n}\nfunction isWhitespace(code) {\n  return code === codeSpace || code === codeNewline || code === codeTab || code === codeReturn;\n}\nfunction isHex(code) {\n  return code >= codeZero && code <= codeNine || code >= codeUppercaseA && code <= codeUppercaseF || code >= codeLowercaseA && code <= codeLowercaseF;\n}\nfunction isDigit(code) {\n  return code >= codeZero && code <= codeNine;\n}\nfunction isNonZeroDigit(code) {\n  return code >= codeOne && code <= codeNine;\n}\nexport function isValidStringCharacter(code) {\n  return code >= 0x20 && code <= 0x10ffff;\n}\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (item, index) {\n      return isDeepEqual(item, b[index]);\n    });\n  }\n  if (isObject(a) && isObject(b)) {\n    var keys = _toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(a)), _toConsumableArray(Object.keys(b)))));\n    return keys.every(function (key) {\n      return isDeepEqual(a[key], b[key]);\n    });\n  }\n  return false;\n}\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\n\n// map with all escape characters\nvar escapeCharacters = {\n  '\"': '\"',\n  '\\\\': '\\\\',\n  '/': '/',\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t'\n  // note that \\u is handled separately in parseString()\n};\n\nvar codeBackslash = 0x5c; // \"\\\"\nvar codeOpeningBrace = 0x7b; // \"{\"\nvar codeClosingBrace = 0x7d; // \"}\"\nvar codeOpeningBracket = 0x5b; // \"[\"\nvar codeClosingBracket = 0x5d; // \"]\"\nvar codeSpace = 0x20; // \" \"\nvar codeNewline = 0xa; // \"\\n\"\nvar codeTab = 0x9; // \"\\t\"\nvar codeReturn = 0xd; // \"\\r\"\nvar codeDoubleQuote = 0x0022; // \"\nvar codePlus = 0x2b; // \"+\"\nvar codeMinus = 0x2d; // \"-\"\nvar codeZero = 0x30;\nvar codeOne = 0x31;\nvar codeNine = 0x39;\nvar codeComma = 0x2c; // \",\"\nvar codeDot = 0x2e; // \".\" (dot, period)\nvar codeColon = 0x3a; // \":\"\nexport var codeUppercaseA = 0x41; // \"A\"\nexport var codeLowercaseA = 0x61; // \"a\"\nexport var codeUppercaseE = 0x45; // \"E\"\nexport var codeLowercaseE = 0x65; // \"e\"\nexport var codeUppercaseF = 0x46; // \"F\"\nexport var codeLowercaseF = 0x66; // \"f\"\n//# sourceMappingURL=parse.js.map","import { debug as debug$1 } from 'debug';\nimport { EventEmitter } from 'events';\nimport tls from 'tls';\nimport net from 'net';\nimport WebSocket from 'isomorphic-ws';\nimport { parse, isInteger, isSafeNumber, stringify } from 'lossless-json';\nimport { Mutex } from 'async-mutex';\n\n// Create the debug logs.\r\nconst debug = {\r\n    client: debug$1('electrum-cash:client '),\r\n    cluster: debug$1('electrum-cash:cluster'),\r\n    errors: debug$1('electrum-cash:error  '),\r\n    warning: debug$1('electrum-cash:warning'),\r\n    network: debug$1('electrum-cash:network'),\r\n    ping: debug$1('electrum-cash:pulses '),\r\n};\r\n// Set log colors.\r\ndebug.client.color = '2';\r\ndebug.cluster.color = '3';\r\ndebug.errors.color = '9';\r\ndebug.warning.color = '13';\r\ndebug.network.color = '4';\r\ndebug.ping.color = '8';\n\n/**\r\n * Grouping of utilities that simplifies implementation of the Electrum protocol.\r\n *\r\n * @ignore\r\n */\r\nclass ElectrumProtocol {\r\n    /**\r\n     * Helper function that builds an Electrum request object.\r\n     *\r\n     * @param {string} method       method to call.\r\n     * @param {array}  parameters   method parameters for the call.\r\n     * @param {string} requestId    unique string or number referencing this request.\r\n     *\r\n     * @returns a properly formatted Electrum request string.\r\n     */\r\n    static buildRequestObject(method, parameters, requestId) {\r\n        // Return the formatted request object.\r\n        // NOTE: Electrum either uses JsonRPC strictly or loosely.\r\n        //       If we specify protocol identifier without being 100% compliant, we risk being disconnected/blacklisted.\r\n        //       For this reason, we omit the protocol identifier to avoid issues.\r\n        return JSON.stringify({ method: method, params: parameters, id: requestId });\r\n    }\r\n    /**\r\n     * Constant used to verify if a provided string is a valid version number.\r\n     *\r\n     * @returns a regular expression that matches valid version numbers.\r\n     */\r\n    static get versionRegexp() {\r\n        return /^\\d+(\\.\\d+)+$/;\r\n    }\r\n    /**\r\n     * Constant used to separate statements/messages in a stream of data.\r\n     *\r\n     * @returns the delimiter used by Electrum to separate statements.\r\n     */\r\n    static get statementDelimiter() {\r\n        return '\\n';\r\n    }\r\n}\n\nconst isVersionRejected = function (object) {\r\n    return 'error' in object;\r\n};\r\nconst isVersionNegotiated = function (object) {\r\n    return 'software' in object && 'protocol' in object;\r\n};\n\n// Disable indent rule for this file because it is broken (https://github.com/typescript-eslint/typescript-eslint/issues/1824)\r\n/* eslint-disable @typescript-eslint/indent */\r\n/**\r\n * Enum that denotes the ordering to use in an ElectrumCluster.\r\n * @enum {number}\r\n * @property {0} RANDOM     Send requests to randomly selected servers in the cluster.\r\n * @property {1} PRIORITY   Send requests to servers in the cluster in the order they were added.\r\n */\r\nvar ClusterOrder;\r\n(function (ClusterOrder) {\r\n    ClusterOrder[ClusterOrder[\"RANDOM\"] = 0] = \"RANDOM\";\r\n    ClusterOrder[ClusterOrder[\"PRIORITY\"] = 1] = \"PRIORITY\";\r\n})(ClusterOrder || (ClusterOrder = {}));\r\n/**\r\n * Enum that denotes the distribution setting to use in an ElectrumCluster.\r\n * @enum {number}\r\n * @property {0} ALL   Send requests to all servers in the cluster.\r\n */\r\nvar ClusterDistribution;\r\n(function (ClusterDistribution) {\r\n    ClusterDistribution[ClusterDistribution[\"ALL\"] = 0] = \"ALL\";\r\n})(ClusterDistribution || (ClusterDistribution = {}));\r\n/**\r\n * Enum that denotes the ready status of an ElectrumCluster.\r\n * @enum {number}\r\n * @property {0} DISABLED    The cluster is disabled and unusable.\r\n * @property {1} DEGRADED    The cluster is degraded but still usable.\r\n * @property {2} READY       The cluster is healthy and ready for use.\r\n */\r\nvar ClusterStatus;\r\n(function (ClusterStatus) {\r\n    ClusterStatus[ClusterStatus[\"DISABLED\"] = 0] = \"DISABLED\";\r\n    ClusterStatus[ClusterStatus[\"DEGRADED\"] = 1] = \"DEGRADED\";\r\n    ClusterStatus[ClusterStatus[\"READY\"] = 2] = \"READY\";\r\n})(ClusterStatus || (ClusterStatus = {}));\r\n/**\r\n * Enum that denotes the availability of an ElectrumClient.\r\n * @enum {number}\r\n * @property {0} UNAVAILABLE   The client is currently not available.\r\n * @property {1} AVAILABLE     The client is available for use.\r\n */\r\nvar ClientState;\r\n(function (ClientState) {\r\n    ClientState[ClientState[\"UNAVAILABLE\"] = 0] = \"UNAVAILABLE\";\r\n    ClientState[ClientState[\"AVAILABLE\"] = 1] = \"AVAILABLE\";\r\n})(ClientState || (ClientState = {}));\r\n/**\r\n * Enum that denotes the connection status of an ElectrumConnection.\r\n * @enum {number}\r\n * @property {0} DISCONNECTED    The connection is disconnected.\r\n * @property {1} AVAILABLE       The connection is connected.\r\n * @property {2} DISCONNECTING   The connection is disconnecting.\r\n * @property {3} CONNECTING      The connection is connecting.\r\n * @property {4} RECONNECTING    The connection is restarting.\r\n */\r\nvar ConnectionStatus;\r\n(function (ConnectionStatus) {\r\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\r\n    ConnectionStatus[ConnectionStatus[\"CONNECTED\"] = 1] = \"CONNECTED\";\r\n    ConnectionStatus[ConnectionStatus[\"DISCONNECTING\"] = 2] = \"DISCONNECTING\";\r\n    ConnectionStatus[ConnectionStatus[\"CONNECTING\"] = 3] = \"CONNECTING\";\r\n    ConnectionStatus[ConnectionStatus[\"RECONNECTING\"] = 4] = \"RECONNECTING\";\r\n})(ConnectionStatus || (ConnectionStatus = {}));\n\n/**\r\n * Object containing the commonly used ports and schemes for specific Transports.\r\n * @example const electrum = new ElectrumClient('Electrum client example', '1.4.1', 'bch.imaginary.cash', Transport.WSS.Port, Transport.WSS.Scheme);\r\n *\r\n * @property {object} TCP       Port and Scheme to use unencrypted TCP sockets.\r\n * @property {object} TCP_TLS   Port and Scheme to use TLS-encrypted TCP sockets.\r\n * @property {object} WS        Port and Scheme to use unencrypted WebSockets.\r\n * @property {object} WSS       Port and Scheme to use TLS-encrypted WebSockets.\r\n */\r\nconst ElectrumTransport = {\r\n    TCP: { Port: 50001, Scheme: 'tcp' },\r\n    TCP_TLS: { Port: 50002, Scheme: 'tcp_tls' },\r\n    WS: { Port: 50003, Scheme: 'ws' },\r\n    WSS: { Port: 50004, Scheme: 'wss' },\r\n};\r\nconst DefaultParameters = {\r\n    // Port number for TCP TLS connections\r\n    PORT: ElectrumTransport.TCP_TLS.Port,\r\n    // Transport to connect to the Electrum server\r\n    TRANSPORT_SCHEME: ElectrumTransport.TCP_TLS.Scheme,\r\n    // How long to wait before attempting to reconnect, in milliseconds.\r\n    RECONNECT: 15 * 1000,\r\n    // How long to wait for network operations before following up, in milliseconds.\r\n    TIMEOUT: 120 * 1000,\r\n    // Time between ping messages, in milliseconds. Pinging keeps the connection alive.\r\n    // The reason for pinging this frequently is to detect connection problems early.\r\n    PING_INTERVAL: 3 * 1000,\r\n    // How many servers are required before we trust information provided.\r\n    CLUSTER_CONFIDENCE: 1,\r\n    // How many servers we send requests to.\r\n    CLUSTER_DISTRIBUTION: ClusterDistribution.ALL,\r\n    // What order we select servers to send requests to.\r\n    CLUSTER_ORDER: ClusterOrder.RANDOM,\r\n    // If we use lossless json lib to parse json response.\r\n    LOSSLESS_JSON_PARSER: false,\r\n};\n\n/**\r\n * Isomorphic Socket interface supporting TCP sockets and WebSockets (Node and browser).\r\n * The interface is a subset of the TLSSocket interface with some slight modifications.\r\n * It can be expanded when more socket functionality is needed in the rest of the\r\n * electrum-cash code. Changes from the TLSSocket interface (besides it being a subset):\r\n * - Event 'close' -> 'disconnect'\r\n * - New function socket.disconnect()\r\n *\r\n * @ignore\r\n */\r\nclass ElectrumSocket extends EventEmitter {\r\n    // Declare an empty TCP socket.\r\n    tcpSocket;\r\n    // Declare an empty WebSocket.\r\n    webSocket;\r\n    // Declare timers for keep-alive pings and reconnection\r\n    timers = {};\r\n    // Initialize boolean that indicates whether the onConnect function has run (initialize to false).\r\n    onConnectHasRun = false;\r\n    // Initialize event forwarding functions.\r\n    eventForwarders = {\r\n        disconnect: () => this.emit('disconnect'),\r\n        tcpData: (data) => this.emit('data', data),\r\n        wsData: (event) => this.emit('data', `${event.data}\\n`),\r\n        tcpError: (err) => this.emit('error', err),\r\n        wsError: (event) => this.emit('error', event.error),\r\n    };\r\n    /**\r\n     * Connect to host:port using the specified transport\r\n     *\r\n     * @param {string} host              Fully qualified domain name or IP address of the host\r\n     * @param {number} port              Network port for the host to connect to\r\n     * @param {TransportScheme} scheme   Transport scheme to use\r\n     * @param {number} timeout           If no connection is established after `timeout` ms, the connection is terminated\r\n     *\r\n     * @throws {Error} if an incorrect transport scheme is specified\r\n     */\r\n    connect(host, port, scheme, timeout) {\r\n        // Check that no existing socket exists before initiating a new connection.\r\n        if (this.tcpSocket || this.webSocket) {\r\n            throw (new Error('Cannot initiate a new socket connection when an existing connection exists'));\r\n        }\r\n        // Set a timer to force disconnect after `timeout` seconds\r\n        this.timers.disconnect = setTimeout(() => this.disconnectOnTimeout(host, port, timeout), timeout);\r\n        // Remove the timer if a connection is successfully established\r\n        this.once('connect', this.clearDisconnectTimerOnTimeout);\r\n        // Define how to refer to the connection scheme in debug output.\r\n        const socketTypes = {\r\n            [ElectrumTransport.TCP.Scheme]: 'a TCP Socket',\r\n            [ElectrumTransport.TCP_TLS.Scheme]: 'an encrypted TCP socket',\r\n            [ElectrumTransport.WS.Scheme]: 'a WebSocket',\r\n            [ElectrumTransport.WSS.Scheme]: 'an encrypted WebSocket',\r\n        };\r\n        // Log that we are trying to establish a connection.\r\n        debug.network(`Initiating ${socketTypes[scheme]} connection to '${host}:${port}'.`);\r\n        if (scheme === ElectrumTransport.TCP.Scheme || scheme === ElectrumTransport.TCP_TLS.Scheme) {\r\n            if (scheme === ElectrumTransport.TCP_TLS.Scheme) {\r\n                // Initialize connection options.\r\n                const connectionOptions = { rejectUnauthorized: false };\r\n                // If the hostname is not an IP address..\r\n                if (!net.isIP(host)) {\r\n                    // Set the servername option which enables support for SNI.\r\n                    // NOTE: SNI enables a server that hosts multiple domains to provide the appropriate TLS certificate.\r\n                    connectionOptions.serverName = host;\r\n                }\r\n                // Initialize this.tcpSocket (allowing self-signed certificates).\r\n                this.tcpSocket = tls.connect(port, host, connectionOptions);\r\n                // Add a 'secureConnect' listener that checks the authorization status of\r\n                // the socket, and logs a warning when it uses a self signed certificate.\r\n                this.tcpSocket.once('secureConnect', () => {\r\n                    // Cannot happen, since this event callback *only* exists on TLSSocket\r\n                    if (!(this.tcpSocket instanceof tls.TLSSocket))\r\n                        return;\r\n                    // Force cast authorizationError from Error to string (through unknown)\r\n                    // because it is incorrectly typed as an Error\r\n                    const authorizationError = this.tcpSocket.authorizationError;\r\n                    if (authorizationError === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\r\n                        debug.warning(`Connection to ${host}:${port} uses a self-signed certificate`);\r\n                    }\r\n                });\r\n                // Trigger successful connection events.\r\n                this.tcpSocket.on('secureConnect', this.onConnect.bind(this, socketTypes[scheme], host, port));\r\n            }\r\n            else {\r\n                // Initialize this.tcpSocket.\r\n                this.tcpSocket = net.connect({ host, port });\r\n                // Trigger successful connection events.\r\n                this.tcpSocket.on('connect', this.onConnect.bind(this, socketTypes[scheme], host, port));\r\n            }\r\n            // Configure encoding.\r\n            this.tcpSocket.setEncoding('utf8');\r\n            // Enable persistent connections with an initial delay of 0.\r\n            this.tcpSocket.setKeepAlive(true, 0);\r\n            // Disable buffering of outgoing data.\r\n            this.tcpSocket.setNoDelay(true);\r\n            // Forward the encountered errors.\r\n            this.tcpSocket.on('error', this.eventForwarders.tcpError);\r\n        }\r\n        else if (scheme === ElectrumTransport.WS.Scheme || scheme === ElectrumTransport.WSS.Scheme) {\r\n            if (scheme === ElectrumTransport.WSS.Scheme) {\r\n                // Initialize this.webSocket (rejecting self-signed certificates).\r\n                // We reject self-signed certificates to match functionality of browsers.\r\n                this.webSocket = new WebSocket(`wss://${host}:${port}`);\r\n            }\r\n            else {\r\n                // Initialize this.webSocket.\r\n                this.webSocket = new WebSocket(`ws://${host}:${port}`);\r\n            }\r\n            // Trigger successful connection events.\r\n            this.webSocket.addEventListener('open', this.onConnect.bind(this, socketTypes[scheme], host, port));\r\n            // Forward the encountered errors.\r\n            this.webSocket.addEventListener('error', this.eventForwarders.wsError);\r\n        }\r\n        else {\r\n            // Throw an error if an incorrect transport is specified\r\n            throw (new Error('Incorrect transport specified'));\r\n        }\r\n    }\r\n    /**\r\n     * Sets up forwarding of events related to the connection.\r\n     *\r\n     * @param {string} connectionType   Name of the connection/transport type, used for logging.\r\n     * @param {string} host             Fully qualified domain name or IP address of the host\r\n     * @param {number} port             Network port for the host to connect to\r\n     */\r\n    onConnect(connectionType, host, port) {\r\n        // If the onConnect function has already run, do not execute it again.\r\n        if (this.onConnectHasRun)\r\n            return;\r\n        // Log that the connection has been established.\r\n        debug.network(`Established ${connectionType} connection with '${host}:${port}'.`);\r\n        if (typeof this.tcpSocket !== 'undefined') {\r\n            // Forward the socket events\r\n            this.tcpSocket.addListener('close', this.eventForwarders.disconnect);\r\n            this.tcpSocket.addListener('data', this.eventForwarders.tcpData);\r\n        }\r\n        else if (typeof this.webSocket !== 'undefined') {\r\n            // Forward the socket events\r\n            this.webSocket.addEventListener('close', this.eventForwarders.disconnect);\r\n            this.webSocket.addEventListener('message', this.eventForwarders.wsData);\r\n        }\r\n        // Indicate that the onConnect function has run.\r\n        this.onConnectHasRun = true;\r\n        // Emit the connect event.\r\n        this.emit('connect');\r\n    }\r\n    /**\r\n     * Clears the disconnect timer if it is still active.\r\n     */\r\n    clearDisconnectTimerOnTimeout() {\r\n        // Clear the retry timer if it is still active.\r\n        if (this.timers.disconnect) {\r\n            clearTimeout(this.timers.disconnect);\r\n        }\r\n    }\r\n    /**\r\n     * Forcibly terminate the connection.\r\n     *\r\n     * @throws {Error} if no connection was found\r\n     */\r\n    disconnect() {\r\n        // Clear the disconnect timer so that the socket does not try to disconnect again later.\r\n        this.clearDisconnectTimerOnTimeout();\r\n        // Handle disconnect based differently depending on socket type.\r\n        if (this.tcpSocket) {\r\n            // Remove all event forwarders.\r\n            this.tcpSocket.removeListener('close', this.eventForwarders.disconnect);\r\n            this.tcpSocket.removeListener('data', this.eventForwarders.tcpData);\r\n            this.tcpSocket.removeListener('error', this.eventForwarders.tcpError);\r\n            // Terminate the connection.\r\n            this.tcpSocket.destroy();\r\n            // Remove the stored socket.\r\n            this.tcpSocket = undefined;\r\n        }\r\n        else if (this.webSocket) {\r\n            try {\r\n                // Remove all event forwarders.\r\n                this.webSocket.removeEventListener('close', this.eventForwarders.disconnect);\r\n                this.webSocket.removeEventListener('message', this.eventForwarders.wsData);\r\n                this.webSocket.removeEventListener('error', this.eventForwarders.wsError);\r\n                // Gracefully terminate the connection.\r\n                this.webSocket.close();\r\n            }\r\n            catch (ignored) {\r\n                // close() will throw an error if the connection has not been established yet.\r\n                // We ignore this error, since no similar error gets thrown in the TLS Socket.\r\n            }\r\n            finally {\r\n                // Remove the stored socket regardless of any thrown errors.\r\n                this.webSocket = undefined;\r\n            }\r\n        }\r\n        // Indicate that the onConnect function has not run and it has to be run again.\r\n        this.onConnectHasRun = false;\r\n        // Emit a disconnect event\r\n        this.emit('disconnect');\r\n    }\r\n    /**\r\n     * Write data to the socket\r\n     *\r\n     * @param {Uint8Array | string} data   Data to be written to the socket\r\n     * @param {function} callback          Callback function to be called when the write has completed\r\n     *\r\n     * @throws {Error} if no connection was found\r\n     * @returns true if the message was fully flushed to the socket, false if part of the message\r\n     * is queued in the user memory\r\n     */\r\n    write(data, callback) {\r\n        if (this.tcpSocket) {\r\n            // Write data to the TLS Socket and return the status indicating whether the\r\n            // full message was flushed to the socket\r\n            return this.tcpSocket.write(data, callback);\r\n        }\r\n        if (this.webSocket) {\r\n            // Write data to the WebSocket\r\n            this.webSocket.send(data, callback);\r\n            // WebSockets always fit everything in a single request, so we return true\r\n            return true;\r\n        }\r\n        // Throw an error if no active connection is found\r\n        throw (new Error('Cannot write to socket when there is no active connection'));\r\n    }\r\n    /**\r\n     * Force a disconnection if no connection is established after `timeout` milliseconds.\r\n     *\r\n     * @param {string} host      Host of the connection that timed out\r\n     * @param {number} port      Port of the connection that timed out\r\n     * @param {number} timeout   Elapsed milliseconds\r\n     */\r\n    disconnectOnTimeout(host, port, timeout) {\r\n        // Remove the connect listener.\r\n        this.removeListener('connect', this.clearDisconnectTimerOnTimeout);\r\n        // Create a new timeout error.\r\n        const timeoutError = { code: 'ETIMEDOUT', message: `Connection to '${host}:${port}' timed out after ${timeout} milliseconds` };\r\n        // Emit an error event so that connect is rejected upstream.\r\n        this.emit('error', timeoutError);\r\n        // Forcibly disconnect to clean up the connection on timeout\r\n        this.disconnect();\r\n    }\r\n}\n\n/**\r\n * Wrapper around TLS/WSS sockets that gracefully separates a network stream into Electrum protocol messages.\r\n *\r\n * @ignore\r\n */\r\nclass ElectrumConnection extends EventEmitter {\r\n    application;\r\n    version;\r\n    host;\r\n    port;\r\n    scheme;\r\n    timeout;\r\n    pingInterval;\r\n    useLosslessJsonParser;\r\n    // Declare an empty socket.\r\n    socket;\r\n    // Declare empty timestamps\r\n    lastReceivedTimestamp;\r\n    // Declare timers for keep-alive pings and reconnection\r\n    timers = {};\r\n    // Initialize an empty array of connection verification timers.\r\n    // eslint-disable-next-line no-undef\r\n    verifications = [];\r\n    // Initialize the connected flag to false to indicate that there is no connection\r\n    status = ConnectionStatus.DISCONNECTED;\r\n    // Initialize messageBuffer to an empty string\r\n    messageBuffer = '';\r\n    /**\r\n     * Sets up network configuration for an Electrum client connection.\r\n     *\r\n     * @param {string} application            your application name, used to identify to the electrum host.\r\n     * @param {string} version                protocol version to use with the host.\r\n     * @param {string} host                   fully qualified domain name or IP number of the host.\r\n     * @param {number} port                   the network port of the host.\r\n     * @param {TransportScheme} scheme        the transport scheme to use for connection\r\n     * @param {number} timeout                how long network delays we will wait for before taking action, in milliseconds.\r\n     * @param {number} pingInterval           the time between sending pings to the electrum host, in milliseconds.\r\n     * @param {boolean} useLosslessJsonParser whether to use lossless json library to handle bigint in response.\r\n     *\r\n     * @throws {Error} if `version` is not a valid version string.\r\n     */\r\n    constructor(application, version, host, port = DefaultParameters.PORT, scheme = DefaultParameters.TRANSPORT_SCHEME, timeout = DefaultParameters.TIMEOUT, pingInterval = DefaultParameters.PING_INTERVAL, useLosslessJsonParser = DefaultParameters.LOSSLESS_JSON_PARSER) {\r\n        // Initialize the event emitter.\r\n        super();\r\n        this.application = application;\r\n        this.version = version;\r\n        this.host = host;\r\n        this.port = port;\r\n        this.scheme = scheme;\r\n        this.timeout = timeout;\r\n        this.pingInterval = pingInterval;\r\n        this.useLosslessJsonParser = useLosslessJsonParser;\r\n        // Check if the provided version is a valid version number.\r\n        if (!ElectrumProtocol.versionRegexp.test(version)) {\r\n            // Throw an error since the version number was not valid.\r\n            throw (new Error(`Provided version string (${version}) is not a valid protocol version number.`));\r\n        }\r\n        // Create an initial network socket.\r\n        this.createSocket();\r\n    }\r\n    /**\r\n     * Returns a string for the host identifier for usage in debug messages.\r\n     */\r\n    get hostIdentifier() {\r\n        return `${this.host}:${this.port}`;\r\n    }\r\n    /**\r\n     * Create and configures a fresh socket and attaches all relevant listeners.\r\n     */\r\n    createSocket() {\r\n        // Initialize a new ElectrumSocket\r\n        this.socket = new ElectrumSocket();\r\n        // Set up handlers for connection and disconnection.\r\n        this.socket.on('connect', this.onSocketConnect.bind(this));\r\n        this.socket.on('disconnect', this.onSocketDisconnect.bind(this));\r\n        // Set up handler for incoming data.\r\n        this.socket.on('data', this.parseMessageChunk.bind(this));\r\n    }\r\n    /**\r\n     * Shuts down and destroys the current socket.\r\n     */\r\n    destroySocket() {\r\n        // Close the socket connection and destroy the socket.\r\n        this.socket.disconnect();\r\n    }\r\n    /**\r\n     * Assembles incoming data into statements and hands them off to the message parser.\r\n     *\r\n     * @param {string} data   data to append to the current message buffer, as a string.\r\n     *\r\n     * @throws {SyntaxError} if the passed statement parts are not valid JSON.\r\n     */\r\n    parseMessageChunk(data) {\r\n        // Update the timestamp for when we last received data.\r\n        this.lastReceivedTimestamp = Date.now();\r\n        // Clear and remove all verification timers.\r\n        this.verifications.forEach((timer) => clearTimeout(timer));\r\n        this.verifications.length = 0;\r\n        // Add the message to the current message buffer.\r\n        this.messageBuffer += data;\r\n        // Check if the new message buffer contains the statement delimiter.\r\n        while (this.messageBuffer.includes(ElectrumProtocol.statementDelimiter)) {\r\n            // Split message buffer into statements.\r\n            const statementParts = this.messageBuffer.split(ElectrumProtocol.statementDelimiter);\r\n            // For as long as we still have statements to parse..\r\n            while (statementParts.length > 1) {\r\n                // Move the first statement to its own variable.\r\n                const currentStatementList = String(statementParts.shift());\r\n                // Parse the statement into an object or list of objects.\r\n                let statementList;\r\n                if (this.useLosslessJsonParser) {\r\n                    statementList = parse(currentStatementList, undefined, (value) => {\r\n                        return isInteger(value) && (!isSafeNumber(value) || parseInt(value) > Number.MAX_SAFE_INTEGER) ? BigInt(value) : parseFloat(value);\r\n                    });\r\n                }\r\n                else {\r\n                    statementList = JSON.parse(currentStatementList);\r\n                }\r\n                // Wrap the statement in an array if it is not already a batched statement list.\r\n                if (!Array.isArray(statementList)) {\r\n                    statementList = [statementList];\r\n                }\r\n                // For as long as there is statements in the result set..\r\n                while (statementList.length > 0) {\r\n                    // Move the first statement from the batch to its own variable.\r\n                    const currentStatement = statementList.shift();\r\n                    // If the current statement is a version negotiation response..\r\n                    if (currentStatement.id === 'versionNegotiation') {\r\n                        if (currentStatement.error) {\r\n                            // Then emit a failed version negotiation response signal.\r\n                            this.emit('version', { error: currentStatement.error });\r\n                        }\r\n                        else {\r\n                            // Emit a successful version negotiation response signal.\r\n                            this.emit('version', { software: currentStatement.result[0], protocol: currentStatement.result[1] });\r\n                        }\r\n                        // Consider this statement handled.\r\n                        continue;\r\n                    }\r\n                    // If the current statement is a keep-alive response..\r\n                    if (currentStatement.id === 'keepAlive') {\r\n                        // Do nothing and consider this statement handled.\r\n                        continue;\r\n                    }\r\n                    // Emit the statements for handling higher up in the stack.\r\n                    this.emit('statement', currentStatement);\r\n                }\r\n            }\r\n            // Store the remaining statement as the current message buffer.\r\n            this.messageBuffer = statementParts.shift() || '';\r\n        }\r\n    }\r\n    /**\r\n     * Sends a keep-alive message to the host.\r\n     *\r\n     * @returns true if the ping message was fully flushed to the socket, false if\r\n     * part of the message is queued in the user memory\r\n     */\r\n    ping() {\r\n        // Write a log message.\r\n        debug.ping(`Sending keep-alive ping to '${this.hostIdentifier}'`);\r\n        // Craft a keep-alive message.\r\n        const message = ElectrumProtocol.buildRequestObject('server.ping', [], 'keepAlive');\r\n        // Send the keep-alive message.\r\n        const status = this.send(message);\r\n        // Return the ping status.\r\n        return status;\r\n    }\r\n    /**\r\n     * Initiates the network connection negotiates a protocol version. Also emits the 'connect' signal if successful.\r\n     *\r\n     * @throws {Error} if the socket connection fails.\r\n     * @returns a promise resolving when the connection is established\r\n     */\r\n    async connect() {\r\n        // If we are already connected return true.\r\n        if (this.status === ConnectionStatus.CONNECTED) {\r\n            return;\r\n        }\r\n        // Indicate that the connection is connecting\r\n        this.status = ConnectionStatus.CONNECTING;\r\n        // Define a function to wrap connection as a promise.\r\n        const connectionResolver = (resolve, reject) => {\r\n            const rejector = (error) => {\r\n                // Set the status back to disconnected\r\n                this.status = ConnectionStatus.DISCONNECTED;\r\n                // Reject with the error as reason\r\n                reject(error);\r\n            };\r\n            // Replace previous error handlers to reject the promise on failure.\r\n            this.socket.removeAllListeners('error');\r\n            this.socket.once('error', rejector);\r\n            // Define a function to wrap version negotiation as a callback.\r\n            const versionNegotiator = () => {\r\n                // Write a log message to show that we have started version negotiation.\r\n                debug.network(`Requesting protocol version ${this.version} with '${this.hostIdentifier}'.`);\r\n                // remove the one-time error handler since no error was detected.\r\n                this.socket.removeListener('error', rejector);\r\n                // Build a version negotiation message.\r\n                const versionMessage = ElectrumProtocol.buildRequestObject('server.version', [this.application, this.version], 'versionNegotiation');\r\n                // Define a function to wrap version validation as a function.\r\n                const versionValidator = (version) => {\r\n                    // Check if version negotiation failed.\r\n                    if (isVersionRejected(version)) {\r\n                        // Disconnect from the host.\r\n                        this.disconnect(true);\r\n                        // Declare an error message.\r\n                        const errorMessage = 'unsupported protocol version.';\r\n                        // Log the error.\r\n                        debug.errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\r\n                        // Reject the connection with false since version negotiation failed.\r\n                        reject(errorMessage);\r\n                    }\r\n                    // Check if the host supports our requested protocol version.\r\n                    else if (version.protocol !== this.version) {\r\n                        // Disconnect from the host.\r\n                        this.disconnect(true);\r\n                        // Declare an error message.\r\n                        const errorMessage = `incompatible protocol version negotiated (${version.protocol} !== ${this.version}).`;\r\n                        // Log the error.\r\n                        debug.errors(`Failed to connect with ${this.hostIdentifier} due to ${errorMessage}`);\r\n                        // Reject the connection with false since version negotiation failed.\r\n                        reject(errorMessage);\r\n                    }\r\n                    else {\r\n                        // Write a log message.\r\n                        debug.network(`Negotiated protocol version ${version.protocol} with '${this.hostIdentifier}', powered by ${version.software}.`);\r\n                        // Set connection status to connected\r\n                        this.status = ConnectionStatus.CONNECTED;\r\n                        // Emit a connect event now that the connection is usable.\r\n                        this.emit('connect');\r\n                        // Resolve the connection promise since we successfully connected and negotiated protocol version.\r\n                        resolve();\r\n                    }\r\n                };\r\n                // Listen for version negotiation once.\r\n                this.once('version', versionValidator);\r\n                // Send the version negotiation message.\r\n                this.send(versionMessage);\r\n            };\r\n            // Prepare the version negotiation.\r\n            this.socket.once('connect', versionNegotiator);\r\n            // Set up handler for network errors.\r\n            this.socket.on('error', this.onSocketError.bind(this));\r\n            // Connect to the server.\r\n            this.socket.connect(this.host, this.port, this.scheme, this.timeout);\r\n        };\r\n        // Wait until connection is established and version negotiation succeeds.\r\n        await new Promise(connectionResolver);\r\n    }\r\n    /**\r\n     * Restores the network connection.\r\n     */\r\n    async reconnect() {\r\n        // If a reconnect timer is set, remove it\r\n        await this.clearReconnectTimer();\r\n        // Write a log message.\r\n        debug.network(`Trying to reconnect to '${this.hostIdentifier}'..`);\r\n        // Set the status to reconnecting for more accurate log messages.\r\n        this.status = ConnectionStatus.RECONNECTING;\r\n        // Destroy and recreate the socket to get a clean slate.\r\n        this.destroySocket();\r\n        this.createSocket();\r\n        try {\r\n            // Try to connect again.\r\n            await this.connect();\r\n        }\r\n        catch (error) {\r\n            // Do nothing as the error should be handled via the disconnect and error signals.\r\n        }\r\n    }\r\n    /**\r\n     * Removes the current reconnect timer.\r\n     */\r\n    clearReconnectTimer() {\r\n        // If a reconnect timer is set, remove it\r\n        if (this.timers.reconnect) {\r\n            clearTimeout(this.timers.reconnect);\r\n        }\r\n        // Reset the timer reference.\r\n        this.timers.reconnect = undefined;\r\n    }\r\n    /**\r\n     * Removes the current keep-alive timer.\r\n     */\r\n    clearKeepAliveTimer() {\r\n        // If a keep-alive timer is set, remove it\r\n        if (this.timers.keepAlive) {\r\n            clearTimeout(this.timers.keepAlive);\r\n        }\r\n        // Reset the timer reference.\r\n        this.timers.keepAlive = undefined;\r\n    }\r\n    /**\r\n     * Initializes the keep alive timer loop.\r\n     */\r\n    setupKeepAliveTimer() {\r\n        // If the keep-alive timer loop is not currently set up..\r\n        if (!this.timers.keepAlive) {\r\n            // Set a new keep-alive timer.\r\n            this.timers.keepAlive = setTimeout(this.ping.bind(this), this.pingInterval);\r\n        }\r\n    }\r\n    /**\r\n     * Tears down the current connection and removes all event listeners on disconnect.\r\n     *\r\n     * @param {boolean} force   disconnect even if the connection has not been fully established yet.\r\n     *\r\n     * @returns true if successfully disconnected, or false if there was no connection.\r\n     */\r\n    async disconnect(force = false) {\r\n        // Return early when there is nothing to disconnect from\r\n        if (this.status === ConnectionStatus.DISCONNECTED && !force) {\r\n            // Return false to indicate that there was nothing to disconnect from.\r\n            return false;\r\n        }\r\n        // Set connection status to null to indicate tear-down is currently happening.\r\n        this.status = ConnectionStatus.DISCONNECTING;\r\n        // If a keep-alive timer is set, remove it.\r\n        await this.clearKeepAliveTimer();\r\n        // If a reconnect timer is set, remove it\r\n        await this.clearReconnectTimer();\r\n        const disconnectResolver = (resolve) => {\r\n            // Resolve to true after the connection emits a disconnect\r\n            this.once('disconnect', () => resolve(true));\r\n            // Close the connection and destroy the socket.\r\n            this.destroySocket();\r\n        };\r\n        // Return true to indicate that we disconnected.\r\n        return new Promise(disconnectResolver);\r\n    }\r\n    /**\r\n     * Sends an arbitrary message to the server.\r\n     *\r\n     * @param {string} message   json encoded request object to send to the server, as a string.\r\n     *\r\n     * @returns true if the message was fully flushed to the socket, false if part of the message\r\n     * is queued in the user memory\r\n     */\r\n    send(message) {\r\n        // Remove the current keep-alive timer if it exists.\r\n        this.clearKeepAliveTimer();\r\n        // Get the current timestamp in milliseconds.\r\n        const currentTime = Date.now();\r\n        // Follow up and verify that the message got sent..\r\n        const verificationTimer = setTimeout(this.verifySend.bind(this, currentTime), this.timeout);\r\n        // Store the verification timer locally so that it can be cleared when data has been received.\r\n        this.verifications.push(verificationTimer);\r\n        // Set a new keep-alive timer.\r\n        this.setupKeepAliveTimer();\r\n        // Write the message to the network socket.\r\n        return this.socket.write(message + ElectrumProtocol.statementDelimiter);\r\n    }\r\n    // --- Event managers. --- //\r\n    /**\r\n     * Marks the connection as timed out and schedules reconnection if we have not\r\n     * received data within the expected time frame.\r\n     */\r\n    verifySend(sentTimestamp) {\r\n        // If we haven't received any data since we last sent data out..\r\n        if (Number(this.lastReceivedTimestamp) < sentTimestamp) {\r\n            // If this connection is already disconnected, we do not change anything\r\n            if ((this.status === ConnectionStatus.DISCONNECTED) || (this.status === ConnectionStatus.DISCONNECTING)) {\r\n                debug.errors(`Tried to verify already disconnected connection to '${this.hostIdentifier}'`);\r\n                return;\r\n            }\r\n            // Remove the current keep-alive timer if it exists.\r\n            this.clearKeepAliveTimer();\r\n            // Write a notification to the logs.\r\n            debug.network(`Connection to '${this.hostIdentifier}' timed out.`);\r\n            // Close the connection to avoid re-use.\r\n            // NOTE: This initiates reconnection routines if the connection has not\r\n            //       been marked as intentionally disconnected.\r\n            this.socket.disconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Updates the connection status when a connection is confirmed.\r\n     */\r\n    onSocketConnect() {\r\n        // If a reconnect timer is set, remove it.\r\n        this.clearReconnectTimer();\r\n        // Set up the initial timestamp for when we last received data from the server.\r\n        this.lastReceivedTimestamp = Date.now();\r\n        // Set up the initial keep-alive timer.\r\n        this.setupKeepAliveTimer();\r\n        // Clear all temporary error listeners.\r\n        this.socket.removeAllListeners('error');\r\n        // Set up handler for network errors.\r\n        this.socket.on('error', this.onSocketError.bind(this));\r\n    }\r\n    /**\r\n     * Updates the connection status when a connection is ended.\r\n     */\r\n    onSocketDisconnect() {\r\n        // Send a disconnect signal higher up the stack.\r\n        this.emit('disconnect');\r\n        // Remove the current keep-alive timer if it exists.\r\n        this.clearKeepAliveTimer();\r\n        // If this is a connection we're trying to tear down..\r\n        if (this.status === ConnectionStatus.DISCONNECTING) {\r\n            // If a reconnect timer is set, remove it.\r\n            this.clearReconnectTimer();\r\n            // Remove all event listeners\r\n            this.removeAllListeners();\r\n            // Mark the connection as disconnected.\r\n            this.status = ConnectionStatus.DISCONNECTED;\r\n            // Write a log message.\r\n            debug.network(`Disconnected from '${this.hostIdentifier}'.`);\r\n        }\r\n        else {\r\n            // If this is for an established connection..\r\n            if (this.status === ConnectionStatus.CONNECTED) {\r\n                // Write a notification to the logs.\r\n                debug.errors(`Connection with '${this.hostIdentifier}' was closed, trying to reconnect in ${DefaultParameters.RECONNECT / 1000} seconds.`);\r\n            }\r\n            // Mark the connection as disconnected for now..\r\n            this.status = ConnectionStatus.DISCONNECTED;\r\n            // If we don't have a pending reconnection timer..\r\n            if (!this.timers.reconnect) {\r\n                // Attempt to reconnect after one keep-alive duration.\r\n                this.timers.reconnect = setTimeout(this.reconnect.bind(this), DefaultParameters.RECONNECT);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Notify administrator of any unexpected errors.\r\n     */\r\n    onSocketError(error) {\r\n        // Report a generic error if no error information is present.\r\n        // NOTE: When using WSS, the error event explicitly\r\n        //       only allows to send a \"simple\" event without data.\r\n        //       https://stackoverflow.com/a/18804298\r\n        if (typeof error === 'undefined') {\r\n            // Do nothing, and instead rely on the socket disconnect event for further information.\r\n            return;\r\n        }\r\n        // If the DNS lookup failed.\r\n        if (error.code === 'EAI_AGAIN') {\r\n            debug.errors(`Failed to look up DNS records for '${this.host}'.`);\r\n            return;\r\n        }\r\n        // If the connection timed out..\r\n        if (error.code === 'ETIMEDOUT') {\r\n            // Log the provided timeout message.\r\n            debug.errors(error.message);\r\n            return;\r\n        }\r\n        // Log unknown error\r\n        debug.errors(`Unknown network error ('${this.hostIdentifier}'): `, error);\r\n    }\r\n}\n\nconst isRPCErrorResponse = function (message) {\r\n    return 'id' in message && 'error' in message;\r\n};\r\nconst isRPCNotification = function (message) {\r\n    return !('id' in message) && 'method' in message;\r\n};\n\n/**\r\n * Triggers when the underlying connection is established.\r\n *\r\n * @event ElectrumClient#connected\r\n */\r\n/**\r\n * Triggers when the underlying connection is lost.\r\n *\r\n * @event ElectrumClient#disconnected\r\n */\r\n/**\r\n * High-level Electrum client that lets applications send requests and subscribe to notification events from a server.\r\n */\r\nclass ElectrumClient extends EventEmitter {\r\n    // Declare instance variables\r\n    connection;\r\n    // Initialize an empty list of subscription metadata.\r\n    subscriptionMethods = {};\r\n    subscriptionCallbacks = new WeakMap();\r\n    // Start counting the request IDs from 0\r\n    requestId = 0;\r\n    // Initialize an empty dictionary for keeping track of request resolvers\r\n    requestResolvers = {};\r\n    /**\r\n     * Initializes an Electrum client.\r\n     *\r\n     * @param {string} application            your application name, used to identify to the electrum host.\r\n     * @param {string} version                protocol version to use with the host.\r\n     * @param {string} host                   fully qualified domain name or IP number of the host.\r\n     * @param {number} port                   the TCP network port of the host.\r\n     * @param {TransportScheme} scheme        the transport scheme to use for connection\r\n     * @param {number} timeout                how long network delays we will wait for before taking action, in milliseconds.\r\n     * @param {number} pingInterval           the time between sending pings to the electrum host, in milliseconds.\r\n     * @param {boolean} useLosslessJsonParser whether to use lossless json library to handle bigint in response.\r\n     *\r\n     * @throws {Error} if `version` is not a valid version string.\r\n     */\r\n    constructor(application, version, host, port = DefaultParameters.PORT, scheme = DefaultParameters.TRANSPORT_SCHEME, timeout = DefaultParameters.TIMEOUT, pingInterval = DefaultParameters.PING_INTERVAL, useLosslessJsonParser = DefaultParameters.LOSSLESS_JSON_PARSER) {\r\n        // Initialize the event emitter.\r\n        super();\r\n        // Set up a connection to an electrum server.\r\n        this.connection = new ElectrumConnection(application, version, host, port, scheme, timeout, pingInterval, useLosslessJsonParser);\r\n    }\r\n    /**\r\n     * Connects to the remote server.\r\n     *\r\n     * @throws {Error} if the socket connection fails.\r\n     * @returns a promise resolving when the connection is established.\r\n     */\r\n    async connect() {\r\n        // Listen for parsed statements.\r\n        this.connection.on('statement', this.response.bind(this));\r\n        // Hook up resubscription on connection.\r\n        this.connection.on('connect', this.resubscribeOnConnect.bind(this));\r\n        // Relay connect and disconnect events.\r\n        this.connection.on('connect', this.emit.bind(this, 'connected'));\r\n        this.connection.on('disconnect', this.onConnectionDisconnect.bind(this));\r\n        // Relay error events.\r\n        this.connection.on('error', this.emit.bind(this, 'error'));\r\n        // Connect with the server.\r\n        await this.connection.connect();\r\n    }\r\n    /**\r\n     * Disconnects from the remote server and removes all event listeners/subscriptions and open requests.\r\n     *\r\n     * @param {boolean} force                 disconnect even if the connection has not been fully established yet.\r\n     * @param {boolean} retainSubscriptions   retain subscription data so they will be restored on reconnection.\r\n     *\r\n     * @returns true if successfully disconnected, or false if there was no connection.\r\n     */\r\n    async disconnect(force = false, retainSubscriptions = false) {\r\n        if (!retainSubscriptions) {\r\n            // Cancel all event listeners.\r\n            this.removeAllListeners();\r\n            // Remove all subscription data\r\n            this.subscriptionMethods = {};\r\n        }\r\n        // For each pending request..\r\n        for (const index in this.requestResolvers) {\r\n            // Reject the request.\r\n            const requestResolver = this.requestResolvers[index];\r\n            requestResolver(new Error('Manual disconnection'));\r\n            // Remove the request.\r\n            delete this.requestResolvers[index];\r\n        }\r\n        // Disconnect from the remove server.\r\n        return this.connection.disconnect(force);\r\n    }\r\n    /**\r\n     * Calls a method on the remote server with the supplied parameters.\r\n     *\r\n     * @param {string} method          name of the method to call.\r\n     * @param {...string} parameters   one or more parameters for the method.\r\n     *\r\n     * @throws {Error} if the client is disconnected.\r\n     * @returns a promise that resolves with the result of the method or an Error.\r\n     */\r\n    async request(method, ...parameters) {\r\n        // If we are not connected to a server..\r\n        if (this.connection.status !== ConnectionStatus.CONNECTED) {\r\n            // Reject the request with a disconnected error message.\r\n            throw (new Error(`Unable to send request to a disconnected server '${this.connection.host}'.`));\r\n        }\r\n        // Increase the request ID by one.\r\n        this.requestId += 1;\r\n        // Store a copy of the request id.\r\n        const id = this.requestId;\r\n        // Format the arguments as an electrum request object.\r\n        const message = ElectrumProtocol.buildRequestObject(method, parameters, id);\r\n        // Define a function to wrap the request in a promise.\r\n        const requestResolver = (resolve) => {\r\n            // Add a request resolver for this promise to the list of requests.\r\n            this.requestResolvers[id] = (error, data) => {\r\n                // If the resolution failed..\r\n                if (error) {\r\n                    // Resolve the promise with the error for the application to handle.\r\n                    resolve(error);\r\n                }\r\n                else {\r\n                    // Resolve the promise with the request results.\r\n                    resolve(data);\r\n                }\r\n            };\r\n            // Send the request message to the remote server.\r\n            this.connection.send(message);\r\n        };\r\n        // Write a log message.\r\n        debug.network(`Sending request '${method}' to '${this.connection.host}'`);\r\n        // return a promise to deliver results later.\r\n        return new Promise(requestResolver);\r\n    }\r\n    /**\r\n     * Subscribes to the method at the server and attaches the callback function to the event feed.\r\n     *\r\n     * @param {function}  callback     a function that should get notification messages.\r\n     * @param {string}    method       one of the subscribable methods the server supports.\r\n     * @param {...string} parameters   one or more parameters for the method.\r\n     *\r\n     * @throws {Error} if the client is disconnected.\r\n     * @returns a promise resolving to true when the subscription is set up.\r\n     */\r\n    async subscribe(callback, method, ...parameters) {\r\n        // Define a function resolve the subscription setup process.\r\n        const subscriptionResolver = async (resolve) => {\r\n            // If this method is not yet being listened on with this callback..\r\n            if (!this.listeners(method).includes(callback)) {\r\n                // Set up event listener for this subscription.\r\n                this.addListener(method, callback);\r\n            }\r\n            // If this method has never been subscribed to before..\r\n            if (!this.subscriptionMethods[method]) {\r\n                // Initialize an empty subscription payload list for this method.\r\n                this.subscriptionMethods[method] = [];\r\n            }\r\n            // Store the subscription parameters to track what data we have subscribed to.\r\n            this.subscriptionMethods[method].push(JSON.stringify(parameters));\r\n            // Get the currently subscribed payloads for this callback, or an empty array if none exist.\r\n            const subscriptionCallbackPayloads = this.subscriptionCallbacks.get(callback) || [];\r\n            // Update the subscription parameters to track what data this callback is listening on.\r\n            subscriptionCallbackPayloads.push({ method, payload: JSON.stringify(parameters) });\r\n            // Store the subscription parameters.\r\n            this.subscriptionCallbacks.set(callback, subscriptionCallbackPayloads);\r\n            // Send initial subscription request.\r\n            const requestData = await this.request(method, ...parameters);\r\n            // Manually send the initial request data to the callback.\r\n            callback(requestData);\r\n            // Resolve the subscription promise.\r\n            resolve(true);\r\n        };\r\n        // Return a promise that resolves when the subscription is set up.\r\n        return new Promise(subscriptionResolver);\r\n    }\r\n    /**\r\n     * Unsubscribes to the method at the server and removes any callback functions\r\n     * when there are no more subscriptions for the method.\r\n     *\r\n     * @param {function}  callback     a function that has previously been subscribed for this method.\r\n     * @param {string}    method       a previously subscribed to method.\r\n     * @param {...string} parameters   one or more parameters for the method.\r\n     *\r\n     * @throws {Error} if no subscriptions exist for the combination of the passed `callback`, `method` and `parameters.\r\n     * @throws {Error} if the client is disconnected.\r\n     * @returns a promise that resolves to true when the subscription has been cancelled.\r\n     */\r\n    async unsubscribe(callback, method, ...parameters) {\r\n        // Throw an error if the client is disconnected.\r\n        if (this.connection.status !== ConnectionStatus.CONNECTED) {\r\n            throw (new Error(`Unable to send unsubscribe request to a disconnected server '${this.connection.host}'.`));\r\n        }\r\n        // Define a function resolve the subscription setup process.\r\n        const subscriptionResolver = async (resolve) => {\r\n            // Pack up the parameters as a long string.\r\n            const subscriptionParameters = JSON.stringify(parameters);\r\n            // If this method has no subscriptions..\r\n            if (!this.subscriptionMethods[method]) {\r\n                // Reject this promise with an explanation.\r\n                throw (new Error(`Cannot unsubscribe from '${method}' since the method has no subscriptions.`));\r\n            }\r\n            // If this callback has no subscriptions..\r\n            if (!this.subscriptionCallbacks.has(callback)) {\r\n                // Reject this promise with an explanation.\r\n                throw (new Error(`Cannot unsubscribe with '${callback.name}' since the callback has no subscriptions.`));\r\n            }\r\n            // Count the number of methods subscribed to this payload.\r\n            const serverMethodPayloadCount = Object.values(this.subscriptionMethods[method])\r\n                .filter((payload) => payload === subscriptionParameters).length;\r\n            // Count the number of callbacks attached to this method.\r\n            const callbackMethodPayloadCount = (this.subscriptionCallbacks.get(callback) || [])\r\n                .filter((value) => value.method === method).length;\r\n            // Locate the method and callback subscription index.\r\n            const serverMethodPayloadIndex = this.subscriptionMethods[method].indexOf(subscriptionParameters);\r\n            const callbackMethodPayloadIndex = (this.subscriptionCallbacks.get(callback) || [])\r\n                .findIndex((value) => (value.method === method && value.payload === subscriptionParameters));\r\n            // If the method payload could not be located..\r\n            if (serverMethodPayloadIndex < 0) {\r\n                // Reject this promise with an explanation.\r\n                throw (new Error(`Cannot unsubscribe from '${method}' since it has no subscription with the given parameters.`));\r\n            }\r\n            // If the callback payload could not be located..\r\n            if (callbackMethodPayloadIndex < 0) {\r\n                // Reject this promise with an explanation.\r\n                throw (new Error(`Cannot unsubscribe with '${callback.name}' since it has no subscription with the given method and parameters.`));\r\n            }\r\n            // If this is the last payload that any callback has for this method..\r\n            if (serverMethodPayloadCount === 1) {\r\n                // Remove this specific subscription payload from internal tracking.\r\n                this.subscriptionMethods[method].splice(serverMethodPayloadIndex, 1);\r\n                // If the subscription conforms to expected naming standards..\r\n                if (method.endsWith('.subscribe')) {\r\n                    // Send unsubscription request to the server.\r\n                    await this.request(method.replace('.subscribe', '.unsubscribe'), ...parameters);\r\n                }\r\n            }\r\n            // If this is the last payload that this specific callback has to this method..\r\n            if (callbackMethodPayloadCount === 1) {\r\n                // Remove the current callback from listening to given method.\r\n                this.removeListener(method, callback);\r\n            }\r\n            // Get the currently subscribed payloads for this callback, or an empty array if none exist.\r\n            const subscriptionCallbackPayloads = this.subscriptionCallbacks.get(callback) || [];\r\n            // Remove the internal tracking of this callbacks specific method and payload combination.\r\n            this.subscriptionCallbacks.set(callback, subscriptionCallbackPayloads.splice(callbackMethodPayloadIndex, 1));\r\n            // Write a log message.\r\n            debug.client(`Unsubscribed callback '${callback.name}' from '${String(method)}' for the '${subscriptionParameters}' parameters.`);\r\n            // Resolve the subscription promise.\r\n            resolve(true);\r\n        };\r\n        // Return a promise that resolves when the subscription is torn down.\r\n        return new Promise(subscriptionResolver);\r\n    }\r\n    /**\r\n     * Restores existing subscriptions without updating status or triggering manual callbacks.\r\n     *\r\n     * @throws {Error} if subscription data cannot be found for all stored event names.\r\n     * @throws {Error} if the client is disconnected.\r\n     * @returns a promise resolving to true when the subscriptions are restored.\r\n     *\r\n     * @ignore\r\n     */\r\n    async resubscribeOnConnect() {\r\n        // Write a log message.\r\n        debug.client(`Connected to '${this.connection.hostIdentifier}'.`);\r\n        // For each method we have a listener for..\r\n        for (const method of this.eventNames()) {\r\n            // Ignore the connected, disconnected and error method/signals..\r\n            if (method === 'connected' || method === 'disconnected' || method === 'error') {\r\n                continue;\r\n            }\r\n            // Check that we really have a subscription to restore.\r\n            if (!this.subscriptionMethods[String(method)]) {\r\n                // Throw an error since this breaks our expectations.\r\n                throw (new Error(`Unable to resubscribe to ${String(method)} at ${this.connection.hostIdentifier} due to missing subscription data.`));\r\n            }\r\n            // .. and for each parameter we have previously been subscribed to..\r\n            for (const parameterJSON of this.subscriptionMethods[String(method)]) {\r\n                // restore the parameters from JSON.\r\n                const parameters = JSON.parse(parameterJSON);\r\n                // Send a subscription request.\r\n                await this.request(String(method), ...parameters);\r\n            }\r\n            // Write a log message.\r\n            debug.client(`Restored ${this.subscriptionMethods[String(method)].length} previous '${String(method)}' subscriptions for '${this.connection.hostIdentifier}'`);\r\n        }\r\n        // Resolve the subscription promise.\r\n        return true;\r\n    }\r\n    /**\r\n     * Parser messages from the remote server to resolve request promises and emit subscription events.\r\n     *\r\n     * @param {RPCNotification | RPCResponse} message   the response message\r\n     *\r\n     * @throws {Error} if the message ID does not match an existing request.\r\n     * @ignore\r\n     */\r\n    response(message) {\r\n        // If the received message is a notification, we forward it to all event listeners\r\n        if (isRPCNotification(message)) {\r\n            // Write a log message.\r\n            debug.client(`Received notification for '${message.method}' from '${this.connection.host}'`);\r\n            // Forward the message content to all event listeners.\r\n            this.emit(message.method, message.params);\r\n            // Return since it does not have an associated request resolver\r\n            return;\r\n        }\r\n        // If the response ID is null we cannot use it to index our request resolvers\r\n        if (message.id === null) {\r\n            // Throw an internal error, this should not happen.\r\n            throw (new Error('Internal error: Received an RPC response with ID null.'));\r\n        }\r\n        // Look up which request promise we should resolve this.\r\n        const requestResolver = this.requestResolvers[message.id];\r\n        // If we do not have a request resolver for this response message..\r\n        if (!requestResolver) {\r\n            // Throw an internal error, this should not happen.\r\n            throw (new Error('Internal error: Callback for response not available.'));\r\n        }\r\n        // Remove the promise from the request list.\r\n        delete this.requestResolvers[message.id];\r\n        // If the message contains an error..\r\n        if (isRPCErrorResponse(message)) {\r\n            // Forward the message error to the request resolver and omit the `result` parameter.\r\n            requestResolver(new Error(message.error.message));\r\n        }\r\n        else {\r\n            // Forward the message content to the request resolver and omit the `error` parameter\r\n            // (by setting it to undefined).\r\n            requestResolver(undefined, message.result);\r\n        }\r\n    }\r\n    /**\r\n     * Callback function that is called when connection to the Electrum server is lost.\r\n     * Aborts all active requests with an error message indicating that connection was lost.\r\n     *\r\n     * @ignore\r\n     */\r\n    onConnectionDisconnect() {\r\n        // Emit a disconnection signal to any listeners.\r\n        this.emit('disconnected');\r\n        // Loop over active requests\r\n        for (const resolverId in this.requestResolvers) {\r\n            // Extract request resolver for readability\r\n            const requestResolver = this.requestResolvers[resolverId];\r\n            // Resolve the active request with an error indicating that the connection was lost.\r\n            requestResolver(new Error('Connection lost'));\r\n            // Remove the promise from the request list.\r\n            delete this.requestResolvers[resolverId];\r\n        }\r\n    }\r\n}\n\n/**\r\n * Triggers when the cluster connects to enough servers to satisfy both the cluster confidence and distribution policies.\r\n *\r\n * @event ElectrumCluster#ready\r\n */\r\n/**\r\n * Triggers when the cluster loses a connection and can no longer satisfy the cluster distribution policy.\r\n *\r\n * @event ElectrumCluster#degraded\r\n */\r\n/**\r\n * Triggers when the cluster loses a connection and can no longer satisfy the cluster confidence policy.\r\n *\r\n * @event ElectrumCluster#disabled\r\n */\r\n/**\r\n * High-level electrum client that provides transparent load balancing, confidence checking and/or low-latency polling.\r\n */\r\nclass ElectrumCluster extends EventEmitter {\r\n    application;\r\n    version;\r\n    timeout;\r\n    pingInterval;\r\n    useLosslessJsonParser;\r\n    // Declare instance variables\r\n    strategy;\r\n    // Initialize an empty dictionary of clients in the cluster\r\n    clients = {};\r\n    // Start at 0 connected clients\r\n    connections = 0;\r\n    // Set up an empty set of notification data.\r\n    notifications = {};\r\n    // Start the cluster in DISABLED state\r\n    status = ClusterStatus.DISABLED;\r\n    // Start counting request IDs at 0\r\n    requestCounter = 0;\r\n    // Initialize an empty dictionary for keeping track of request resolvers\r\n    requestPromises = {};\r\n    // Lock to prevent concurrency race conditions when sending requests.\r\n    requestLock = new Mutex();\r\n    // Lock to prevent concurrency race conditions when receiving responses.\r\n    responseLock = new Mutex();\r\n    /**\r\n     * @param {string} application    your application name, used to identify to the electrum hosts.\r\n     * @param {string} version        protocol version to use with the hosts.\r\n     * @param {number} confidence     wait for this number of hosts to provide identical results.\r\n     * @param {number} distribution   request information from this number of hosts.\r\n     * @param {ClusterOrder} order    select hosts to communicate with in this order.\r\n     * @param {number} timeout        how long network delays we will wait for before taking action, in milliseconds.\r\n     * @param {number} pingInterval      the time between sending pings to the electrum host, in milliseconds.\r\n     * @param {boolean} useLosslessJsonParser whether to use lossless json library to handle bigint in response.\r\n     */\r\n    constructor(application, version, confidence = DefaultParameters.CLUSTER_CONFIDENCE, distribution = DefaultParameters.CLUSTER_DISTRIBUTION, order = DefaultParameters.CLUSTER_ORDER, timeout = DefaultParameters.TIMEOUT, pingInterval = DefaultParameters.PING_INTERVAL, useLosslessJsonParser = DefaultParameters.LOSSLESS_JSON_PARSER) {\r\n        // Initialize the event emitter.\r\n        super();\r\n        this.application = application;\r\n        this.version = version;\r\n        this.timeout = timeout;\r\n        this.pingInterval = pingInterval;\r\n        this.useLosslessJsonParser = useLosslessJsonParser;\r\n        // Initialize strategy.\r\n        this.strategy =\r\n            {\r\n                distribution: distribution,\r\n                confidence: confidence,\r\n                order: order,\r\n            };\r\n        // Write a log message.\r\n        debug.cluster(`Initialized empty cluster (${confidence} of ${distribution || 'ALL'})`);\r\n        // Print out a warning if we cannot guarantee consensus for subscription notifications.\r\n        // Case 1: we don't know how many servers will be used, so warning just to be safe\r\n        // Case 2: we know the number of servers needed to trust a response is less than 50%.\r\n        if ((distribution === ClusterDistribution.ALL) || (confidence / distribution <= 0.50)) {\r\n            debug.warning(`Subscriptions might return multiple valid responses when confidence (${confidence}) is less than 51% of distribution.`);\r\n        }\r\n    }\r\n    /**\r\n     * Adds a server to the cluster.\r\n     *\r\n     * @param {string} host              fully qualified domain name or IP number of the host.\r\n     * @param {number} port              the TCP network port of the host.\r\n     * @param {TransportScheme} scheme   the transport scheme to use for connection\r\n     * @param {boolean} autoConnect      flag indicating whether the server should automatically connect (default true)\r\n     *\r\n     * @throws {Error} if the cluster's version is not a valid version string.\r\n     * @returns a promise that resolves when the connection has been initiated.\r\n     */\r\n    async addServer(host, port = DefaultParameters.PORT, scheme = DefaultParameters.TRANSPORT_SCHEME, autoConnect = true) {\r\n        // Set up a new electrum client.\r\n        const client = new ElectrumClient(this.application, this.version, host, port, scheme, this.timeout, this.pingInterval, this.useLosslessJsonParser);\r\n        // Store this client.\r\n        this.clients[`${host}:${port}`] =\r\n            {\r\n                state: ClientState.UNAVAILABLE,\r\n                connection: client,\r\n            };\r\n        /**\r\n         * Define a helper function to evaluate and log cluster status.\r\n         *\r\n         * @fires ElectrumCluster#ready\r\n         * @fires ElectrumCluster#degraded\r\n         * @fires ElectrumCluster#disabled\r\n         */\r\n        const updateClusterStatus = () => {\r\n            // Calculate the required distribution, taking into account that distribution to all is represented with 0.\r\n            const distribution = Math.max(this.strategy.confidence, this.strategy.distribution);\r\n            // Check if we have enough connections to saturate distribution.\r\n            if (this.connections >= distribution) {\r\n                // If the cluster is not currently considered ready..\r\n                if (this.status !== ClusterStatus.READY) {\r\n                    // Mark the cluster as ready.\r\n                    this.status = ClusterStatus.READY;\r\n                    // Emit the ready signal to indicate the cluster is running in a ready mode.\r\n                    this.emit('ready');\r\n                    // Write a log message with an update on the current cluster status.\r\n                    debug.cluster(`Cluster status is ready (currently ${this.connections} of ${distribution} connections available.)`);\r\n                }\r\n            }\r\n            // If we still have enough available connections to reach confidence..\r\n            else if (this.connections >= this.strategy.confidence) {\r\n                // If the cluster is not currently considered degraded..\r\n                if (this.status !== ClusterStatus.DEGRADED) {\r\n                    // Mark the cluster as degraded.\r\n                    this.status = ClusterStatus.DEGRADED;\r\n                    // Emit the degraded signal to indicate the cluster is running in a degraded mode.\r\n                    this.emit('degraded');\r\n                    // Write a log message with an update on the current cluster status.\r\n                    debug.cluster(`Cluster status is degraded (only ${this.connections} of ${distribution} connections available.)`);\r\n                }\r\n            }\r\n            // If we don't have enough connections to reach confidence..\r\n            // .. and the cluster is not currently considered disabled..\r\n            else if (this.status !== ClusterStatus.DISABLED) {\r\n                // Mark the cluster as disabled.\r\n                this.status = ClusterStatus.DISABLED;\r\n                // Emit the degraded signal to indicate the cluster is disabled.\r\n                this.emit('disabled');\r\n                // Write a log message with an update on the current cluster status.\r\n                debug.cluster(`Cluster status is disabled (only ${this.connections} of the ${distribution} connections are available.)`);\r\n            }\r\n        };\r\n        // Define a function to run when client has connects.\r\n        const onConnect = async () => {\r\n            // Wrap in a try-catch so we can ignore errors.\r\n            try {\r\n                // Check connection status\r\n                const connectionStatus = client.connection.status;\r\n                // If the connection is fine..\r\n                if (connectionStatus === ConnectionStatus.CONNECTED) {\r\n                    // If this was from an unavailable connection..\r\n                    if (this.clients[`${host}:${port}`].state === ClientState.UNAVAILABLE) {\r\n                        // Update connection counter.\r\n                        this.connections += 1;\r\n                    }\r\n                    // Set client state to available.\r\n                    this.clients[`${host}:${port}`].state = ClientState.AVAILABLE;\r\n                    // update the cluster status.\r\n                    updateClusterStatus();\r\n                }\r\n            }\r\n            catch (error) {\r\n                // Do nothing.\r\n            }\r\n        };\r\n        // Define a function to run when client disconnects.\r\n        const onDisconnect = () => {\r\n            // If this was from an established connection..\r\n            if (this.clients[`${host}:${port}`].state === ClientState.AVAILABLE) {\r\n                // Update connection counter.\r\n                this.connections -= 1;\r\n            }\r\n            // Set client state to unavailable.\r\n            this.clients[`${host}:${port}`].state = ClientState.UNAVAILABLE;\r\n            // update the cluster status.\r\n            updateClusterStatus();\r\n        };\r\n        // Set up handlers for connection and disconnection.\r\n        client.connection.on('connect', onConnect.bind(this));\r\n        client.connection.on('disconnect', onDisconnect.bind(this));\r\n        // Connect if auto-connect is set to true, returning the connection result.\r\n        if (autoConnect) {\r\n            // Set up the connection.\r\n            await client.connect();\r\n        }\r\n    }\r\n    /**\r\n     * Calls a method on the remote server with the supplied parameters.\r\n     *\r\n     * @param {string}    method       name of the method to call.\r\n     * @param {...string} parameters   one or more parameters for the method.\r\n     *\r\n     * @throws {Error} if not enough clients are connected\r\n     * @throws {Error} if no response is received with sufficient integrity\r\n     * @returns a promise that resolves with the result of the method.\r\n     */\r\n    async request(method, ...parameters) {\r\n        // Check if the cluster is unable to serve requests.\r\n        if (this.status === ClusterStatus.DISABLED) {\r\n            throw (new Error(`Cannot request '${method}' when available clients (${this.connections}) is less than required confidence (${this.strategy.confidence}).`));\r\n        }\r\n        // Lock this request method temporarily.\r\n        const unlock = await this.requestLock.acquire();\r\n        // Declare requestId outside of try-catch scope.\r\n        let requestId = 0;\r\n        // NOTE: If this async method is called very rapidly, it's theoretically possible that the parts below could interfere.\r\n        try {\r\n            // Increase the current request counter.\r\n            this.requestCounter += 1;\r\n            // Copy the request counter so we can work with the copy and know it won't change\r\n            // even if the request counter is raised from concurrent requests.\r\n            requestId = this.requestCounter;\r\n        }\r\n        finally {\r\n            // Unlock this request method now that the concurrency sensitive condition is completed.\r\n            unlock();\r\n        }\r\n        // Initialize an empty list of request promises.\r\n        this.requestPromises[requestId] = [];\r\n        // Extract all available client IDs\r\n        const availableClientIDs = Object.keys(this.clients)\r\n            .filter((clientID) => this.clients[clientID].state === ClientState.AVAILABLE);\r\n        // Initialize a sent counter.\r\n        let sentCounter = 0;\r\n        // Determine the number of clients we need to send to, taking ClusterDistribution.ALL (=0) into account.\r\n        let requiredDistribution = (this.strategy.distribution || availableClientIDs.length);\r\n        // If the cluster is in degraded status, we do not have enough available clients to\r\n        // match distribution, but still enough to reach consensus, so we use the clients we have.\r\n        if (this.status === ClusterStatus.DEGRADED) {\r\n            requiredDistribution = availableClientIDs.length;\r\n        }\r\n        // Repeat until we have sent the request to the desired number of clients.\r\n        while (sentCounter < requiredDistribution) {\r\n            // Pick an array index according to our ordering strategy.\r\n            let currentIndex = 0;\r\n            // Use a random array index when cluster order is set to RANDOM\r\n            if (this.strategy.order === ClusterOrder.RANDOM) {\r\n                currentIndex = Math.floor(Math.random() * availableClientIDs.length);\r\n            }\r\n            // Move a client identity from the client list to its own variable.\r\n            const [currentClient] = availableClientIDs.splice(currentIndex, 1);\r\n            // Send the request to the client and store the request promise.\r\n            const requestPromise = this.clients[currentClient].connection.request(method, ...parameters);\r\n            this.requestPromises[requestId].push(requestPromise);\r\n            // Increase the sent counter.\r\n            sentCounter += 1;\r\n        }\r\n        // Define a function to poll for request responses.\r\n        const pollResponse = (resolve, reject) => {\r\n            // Define a function to resolve request responses based on integrity.\r\n            const resolveRequest = async () => {\r\n                // Set up an empty set of response data.\r\n                const responseData = {};\r\n                // Set up a counter to keep track of how many responses we have checked.\r\n                let checkedResponses = 0;\r\n                // For each server we issued a request to..\r\n                for (const currentPromise in this.requestPromises[requestId]) {\r\n                    // Race the request promise against a pre-resolved request to determine promise status.\r\n                    const promises = [this.requestPromises[requestId][currentPromise], Promise.resolve(undefined)];\r\n                    const response = await Promise.race(promises);\r\n                    // If the promise is settled..\r\n                    if (response !== undefined) {\r\n                        // Calculate a unique identifier for this notification data.\r\n                        const responseDataIdentifier = this.useLosslessJsonParser ? stringify(response) : JSON.stringify(response);\r\n                        // Increase the counter for checked responses.\r\n                        checkedResponses += 1;\r\n                        // Either set the response data counter or increase it.\r\n                        if (responseData[responseDataIdentifier] === undefined) {\r\n                            responseData[responseDataIdentifier] = 1;\r\n                        }\r\n                        else {\r\n                            responseData[responseDataIdentifier] += 1;\r\n                        }\r\n                        // Check if this response has enough integrity according to our confidence strategy.\r\n                        if (responseData[responseDataIdentifier] === this.strategy.confidence) {\r\n                            // Write log entry.\r\n                            debug.cluster(`Validated response for '${method}' with sufficient integrity (${this.strategy.confidence}).`);\r\n                            // Resolve the request with this response.\r\n                            resolve(response);\r\n                            // Return after resolving since we do not want to continue the execution.\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                // If all clients have responded but we failed to reach desired integrity..\r\n                if (checkedResponses === this.requestPromises[requestId].length) {\r\n                    // Reject this request with an error message.\r\n                    reject(new Error(`Unable to complete request for '${method}', response failed to reach sufficient integrity (${this.strategy.confidence}).`));\r\n                    // Return after rejecting since we do not want to continue the execution.\r\n                    return;\r\n                }\r\n                // If we are not ready, but have not timed out and should wait more..\r\n                setTimeout(resolveRequest, 1000);\r\n            };\r\n            // Attempt the initial resolution of the request.\r\n            resolveRequest();\r\n        };\r\n        // return some kind of promise that resolves when integrity number of clients results match.\r\n        return new Promise(pollResponse);\r\n    }\r\n    /**\r\n     * Subscribes to the method at the cluster and attaches the callback function to the event feed.\r\n     *\r\n     * @param {function}  callback     a function that should get notification messages.\r\n     * @param {string}    method       one of the subscribable methods the server supports.\r\n     * @param {...string} parameters   one or more parameters for the method.\r\n     *\r\n     * @throws {Error} if not enough clients are connected\r\n     * @throws {Error} if no response is received with sufficient integrity for the initial request\r\n     * @returns a promise resolving to true when the subscription is set up.\r\n     */\r\n    async subscribe(callback, method, ...parameters) {\r\n        // Define a function resolve the subscription setup process.\r\n        const subscriptionResolver = async (resolve) => {\r\n            // Define a callback function to validate server notifications and pass\r\n            // them to the subscribe callback.\r\n            const subscriptionResponder = async (data) => {\r\n                // Lock this response method temporarily.\r\n                const unlock = await this.responseLock.acquire();\r\n                try {\r\n                    // Calculate a unique identifier for this notification data.\r\n                    const responseDataIdentifier = JSON.stringify(data);\r\n                    // Either set the notification counter or increase it.\r\n                    if (this.notifications[responseDataIdentifier] === undefined) {\r\n                        this.notifications[responseDataIdentifier] = 1;\r\n                    }\r\n                    else {\r\n                        this.notifications[responseDataIdentifier] += 1;\r\n                    }\r\n                    // Check if this notification has enough integrity according to our confidence strategy.\r\n                    if (this.notifications[responseDataIdentifier] === this.strategy.confidence) {\r\n                        // Write log entry.\r\n                        debug.cluster(`Validated notification for '${method}' with sufficient integrity (${this.strategy.confidence}).`);\r\n                        // Send the notification data to the callback function.\r\n                        callback(data);\r\n                    }\r\n                }\r\n                finally {\r\n                    // Unlock the response method so it can handle the next set of data.\r\n                    unlock();\r\n                }\r\n            };\r\n            // Set up event listener for this subscription.\r\n            for (const currentClient in this.clients) {\r\n                // Copy the current client for brevity.\r\n                const client = this.clients[currentClient].connection;\r\n                // If this method is not yet being listened on..\r\n                if (!client.listeners(method).includes(subscriptionResponder)) {\r\n                    // Set up event listener for this subscription.\r\n                    client.addListener(method, subscriptionResponder);\r\n                }\r\n                // If this method has never been subscribed to before..\r\n                if (!client.subscriptionMethods[method]) {\r\n                    // Initialize an empty subscription payload list for this method.\r\n                    client.subscriptionMethods[method] = [];\r\n                }\r\n                // Store the subscription parameters to track what data we have subscribed to.\r\n                client.subscriptionMethods[method].push(JSON.stringify(parameters));\r\n                // Get the currently subscribed payloads for this callback, or an empty array if none exist.\r\n                const subscriptionCallbackPayloads = client.subscriptionCallbacks.get(callback) || [];\r\n                // Update the subscription parameters to track what data this callback is listening on.\r\n                subscriptionCallbackPayloads.push({ method, payload: JSON.stringify(parameters) });\r\n                // Store the subscription parameters.\r\n                client.subscriptionCallbacks.set(callback, subscriptionCallbackPayloads);\r\n            }\r\n            // Send initial subscription request.\r\n            const requestData = await this.request(method, ...parameters);\r\n            // Manually send the initial request data to the callback.\r\n            callback(requestData);\r\n            // Resolve the subscription promise.\r\n            resolve(true);\r\n        };\r\n        // Return a promise that resolves when the subscription is set up.\r\n        return new Promise(subscriptionResolver);\r\n    }\r\n    /**\r\n     * Unsubscribes to the method at the cluster and removes any callback functions\r\n     * when there are no more subscriptions for the method.\r\n     *\r\n     * @param {function}  callback     a function that has previously been subscribed for this method.\r\n     * @param {string}    method       one of the subscribable methods the server supports.\r\n     * @param {...string} parameters   one or more parameters for the method.\r\n     *\r\n     * @throws {Error} if, for any of the clients, no subscriptions exist for the combination of the\r\n     * passed `callback`, `method` and `parameters.\r\n     * @returns a promise resolving to true when the subscription has been cancelled.\r\n     */\r\n    async unsubscribe(callback, method, ...parameters) {\r\n        // Define a function resolve the subscription setup process.\r\n        const subscriptionResolver = async (resolve) => {\r\n            // For each client..\r\n            for (const currentClient in this.clients) {\r\n                // Store client in variable for brevity\r\n                const client = this.clients[currentClient].connection;\r\n                // Log a warning if one of the clients is disconnected, but don't throw an error\r\n                if (client.connection.status !== ConnectionStatus.CONNECTED) {\r\n                    debug.warning(`Client with server ${client.connection.host} could not be reached to unsubscribe`);\r\n                    continue;\r\n                }\r\n                // unsubscribe this client.\r\n                client.unsubscribe(callback, method, ...parameters);\r\n            }\r\n            // Resolve the subscription promise.\r\n            resolve(true);\r\n        };\r\n        // Return a promise that resolves when the subscription is set up.\r\n        return new Promise(subscriptionResolver);\r\n    }\r\n    /**\r\n     * Provides a method to check or wait for the cluster to become ready.\r\n     *\r\n     * @returns a promise that resolves when the required servers are available.\r\n     */\r\n    async ready() {\r\n        // Store the current timestamp.\r\n        const readyTimestamp = Date.now();\r\n        // Define a function to poll for availability of the cluster.\r\n        const availabilityPoller = (resolve) => {\r\n            // Define a function to check if the cluster is ready to be used.\r\n            const connectionAvailabilityVerifier = () => {\r\n                // Check if the cluster is active..\r\n                if (this.status === ClusterStatus.READY) {\r\n                    // Resolve with true to indicate that the cluster is ready to use.\r\n                    resolve(true);\r\n                    // Return after resolving since we do not want to continue the execution.\r\n                    return;\r\n                }\r\n                // Calculate how long we have waited, in milliseconds.\r\n                const timeWaited = (Date.now() - readyTimestamp);\r\n                // Check if we have waited longer than our timeout setting.\r\n                if (timeWaited > this.timeout) {\r\n                    // Resolve with false to indicate that we did not get ready in time.\r\n                    resolve(false);\r\n                    // Return after resolving since we do not want to continue the execution.\r\n                    return;\r\n                }\r\n                // If we are not ready, but have not timed out and should wait more..\r\n                setTimeout(connectionAvailabilityVerifier, 50);\r\n            };\r\n            // Run the initial verification.\r\n            connectionAvailabilityVerifier();\r\n        };\r\n        // Return a promise that resolves when the available clients is sufficient.\r\n        return new Promise(availabilityPoller);\r\n    }\r\n    /**\r\n     * Connects all servers from the cluster and attaches event listeners and handlers\r\n     * for all underlying clients and connections.\r\n     *\r\n     * @throws {Error} if the cluster's version is not a valid version string.\r\n     */\r\n    async startup() {\r\n        // Write a log message.\r\n        debug.cluster('Starting up cluster.');\r\n        // Keep track of all connections\r\n        const connections = [];\r\n        // Loop over all clients and reconnect them if they're disconnected\r\n        for (const clientKey in this.clients) {\r\n            // Retrieve connection information for the client\r\n            const { host, port, scheme } = this.clients[clientKey].connection.connection;\r\n            // Only connect currently unavailable/disconnected clients\r\n            if (this.clients[clientKey].state === ClientState.AVAILABLE) {\r\n                // Warn when a server is already connected when calling startup()\r\n                debug.warning(`Called startup(), but server ${host}:${port} is already connected`);\r\n            }\r\n            else {\r\n                // Call the addServer() function with the existing connection data\r\n                // This effectively reconnects the server and re-instates all event listeners\r\n                connections.push(this.addServer(host, port, scheme));\r\n            }\r\n        }\r\n        // Await all connections\r\n        return Promise.all(connections);\r\n    }\r\n    /**\r\n     * Disconnects all servers from the cluster. Removes all event listeners and\r\n     * handlers from all underlying clients and connections. This includes all\r\n     * active subscriptions, unless retainSubscriptions is set to true.\r\n     *\r\n     * @param {boolean} retainSubscriptions   retain subscription data so they will be restored on reconnection.\r\n     *\r\n     * @returns a list with the disconnection result for every client\r\n     */\r\n    async shutdown(retainSubscriptions = false) {\r\n        // Write a log message.\r\n        debug.cluster('Shutting down cluster.');\r\n        // Set up a list of disconnections to wait for.\r\n        const disconnections = [];\r\n        const disconnectResolver = (resolve) => {\r\n            // Resolve once the cluster is marked as disabled\r\n            this.once('disabled', () => resolve(Promise.all(disconnections)));\r\n            // For each client in this cluster..\r\n            for (const clientIndex in this.clients) {\r\n                // Force disconnection regardless of current status.\r\n                disconnections.push(this.clients[clientIndex].connection.disconnect(true, retainSubscriptions));\r\n            }\r\n        };\r\n        // Return a list of booleans indicating disconnections from all clients\r\n        return new Promise(disconnectResolver);\r\n    }\r\n}\n\nexport { ClientState, ClusterDistribution, ClusterOrder, ClusterStatus, ConnectionStatus, DefaultParameters, ElectrumClient, ElectrumCluster, ElectrumTransport, isVersionNegotiated, isVersionRejected };\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n","import $hgUW1$isomorphicws from \"isomorphic-ws\";\n\n\nclass $1dee54fbcb867378$export$2e2bcd8739ae039 {\n    static{\n        this.encoder = new TextEncoder();\n    }\n    static{\n        this.decoder = new TextDecoder();\n    }\n    static generateSecret() {\n        let array = new Uint8Array(16);\n        crypto.getRandomValues(array);\n        return Array.from(array).map((b)=>b.toString(16).padStart(2, '0')).join('');\n    }\n    static async encrypt(message, secret) {\n        let salt = crypto.getRandomValues(new Uint8Array(16));\n        let iv = crypto.getRandomValues(new Uint8Array(12));\n        let key = await this.deriveKey(secret, salt);\n        let encodedMessage = this.encoder.encode(message);\n        let ciphertext = await crypto.subtle.encrypt({\n            name: 'AES-GCM',\n            iv: iv\n        }, key, encodedMessage);\n        let combined = this.concatBuffers([\n            salt,\n            iv,\n            new Uint8Array(ciphertext)\n        ]);\n        return this.base64Encode(combined);\n    }\n    static async decrypt(encMessage, secret) {\n        let data = this.base64Decode(encMessage);\n        let salt = data.slice(0, 16);\n        let iv = data.slice(16, 28);\n        let ciphertext = data.slice(28);\n        let key = await this.deriveKey(secret, salt);\n        let decrypted = await crypto.subtle.decrypt({\n            name: 'AES-GCM',\n            iv: iv\n        }, key, ciphertext);\n        return this.decoder.decode(decrypted);\n    }\n    static async deriveKey(secret, salt) {\n        let encodedSecret = this.encoder.encode(secret);\n        let baseKey = await crypto.subtle.importKey('raw', encodedSecret, 'PBKDF2', false, [\n            'deriveKey'\n        ]);\n        return crypto.subtle.deriveKey({\n            name: 'PBKDF2',\n            salt: salt,\n            iterations: 100000,\n            hash: 'SHA-256'\n        }, baseKey, {\n            name: 'AES-GCM',\n            length: 256\n        }, false, [\n            'encrypt',\n            'decrypt'\n        ]);\n    }\n    static concatBuffers(buffers) {\n        let totalLength = buffers.reduce((sum, b)=>sum + b.length, 0);\n        let result = new Uint8Array(totalLength);\n        let offset = 0;\n        for (let b of buffers){\n            result.set(b, offset);\n            offset += b.length;\n        }\n        return result;\n    }\n    static base64Encode(data) {\n        return btoa(String.fromCharCode(...data));\n    }\n    static base64Decode(b64) {\n        let binary = atob(b64);\n        let len = binary.length;\n        let bytes = new Uint8Array(len);\n        for(let i = 0; i < len; i++)bytes[i] = binary.charCodeAt(i);\n        return bytes;\n    }\n}\n\n\nvar $abb7f0d6cff128a3$export$4baa4fd50b453ebf = /*#__PURE__*/ function(JsonRpcErrorCode) {\n    // Standard JSON-RPC error codes\n    JsonRpcErrorCode[JsonRpcErrorCode[\"ParseError\"] = -32700] = \"ParseError\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"InvalidRequest\"] = -32600] = \"InvalidRequest\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"MethodNotFound\"] = -32601] = \"MethodNotFound\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"InvalidParams\"] = -32602] = \"InvalidParams\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"InternalError\"] = -32603] = \"InternalError\";\n    // Custom error codes\n    JsonRpcErrorCode[JsonRpcErrorCode[\"RequestFailed\"] = -32000] = \"RequestFailed\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"RequestCancelled\"] = -32001] = \"RequestCancelled\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"RequestRejected\"] = -32003] = \"RequestRejected\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"SessionNotFound\"] = -32004] = \"SessionNotFound\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"RequestTimeout\"] = -32008] = \"RequestTimeout\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"SessionConflict\"] = -32009] = \"SessionConflict\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"ConnectionClosed\"] = -32010] = \"ConnectionClosed\";\n    JsonRpcErrorCode[JsonRpcErrorCode[\"InvalidResponse\"] = -32052] = \"InvalidResponse\";\n    return JsonRpcErrorCode;\n}({});\nclass $abb7f0d6cff128a3$export$67bbc29c133d62a1 extends Error {\n    constructor(code, message){\n        super(message), this.code = code;\n        this.name = \"JsonRpcError\";\n    }\n}\n\n\nclass $770bd20b531dfe71$export$2e2bcd8739ae039 {\n    constructor(url, secret){\n        this.url = url;\n        this.secret = secret;\n        this.pending = new Map();\n        this.handlers = new Map();\n        this.nextId = 1;\n        this.pingInterval = 15000;\n    }\n    initializeWebSocket() {\n        this.ws = new (0, $hgUW1$isomorphicws)(this.url);\n        this.ws.onmessage = async (event)=>{\n            let msg;\n            try {\n                msg = await (0, $1dee54fbcb867378$export$2e2bcd8739ae039).decrypt(event.data, this.secret);\n            } catch  {\n                // If decrypt fails, assume it's unencrypted JSON (i.e., relay message)\n                msg = event.data;\n            }\n            this.handleMessage(msg);\n        };\n        this.ws.onclose = ()=>{\n            this.clearKeepAliveTimer();\n            for (let [, { reject: reject }] of this.pending.entries())reject(new (0, $abb7f0d6cff128a3$export$67bbc29c133d62a1)((0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).ConnectionClosed, 'Connection closed.'));\n            this.pending.clear();\n            if (this.onCloseHandler) this.onCloseHandler();\n        };\n        this.ws.onerror = ()=>{\n            this.ws.close();\n        };\n    }\n    async connect(timeout) {\n        this.initializeWebSocket();\n        if (this.ws.readyState !== (0, $hgUW1$isomorphicws).OPEN) await new Promise((resolve, reject)=>{\n            const timeoutId = setTimeout(()=>{\n                this.ws.onopen = null;\n                this.ws.onerror = null;\n                if (this.ws.readyState !== (0, $hgUW1$isomorphicws).CLOSED) this.ws.close();\n                reject(new (0, $abb7f0d6cff128a3$export$67bbc29c133d62a1)((0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).RequestTimeout, `Connection timeout.`));\n            }, timeout);\n            const originalOnError = this.ws.onerror;\n            this.ws.onopen = ()=>{\n                clearTimeout(timeoutId);\n                this.ws.onerror = originalOnError;\n                resolve();\n            };\n            this.ws.onerror = ()=>{\n                clearTimeout(timeoutId);\n                this.ws.onerror = originalOnError;\n                reject(new (0, $abb7f0d6cff128a3$export$67bbc29c133d62a1)((0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).RequestFailed, 'Connection failed.'));\n            };\n        });\n    }\n    disconnect() {\n        this.clearKeepAliveTimer();\n        if (this.ws && this.ws.readyState === (0, $hgUW1$isomorphicws).OPEN) this.ws.close();\n    }\n    onClose(handler) {\n        this.onCloseHandler = handler;\n    }\n    setupKeepAliveTimer() {\n        if (this.keepAliveTimer) return;\n        this.keepAliveTimer = setTimeout(()=>{\n            this.send(JSON.stringify({\n                jsonrpc: '2.0',\n                id: \"keepAlive\",\n                method: 'wl_ping'\n            }));\n        }, this.pingInterval);\n    }\n    clearKeepAliveTimer() {\n        if (this.keepAliveTimer) {\n            clearTimeout(this.keepAliveTimer);\n            this.keepAliveTimer = undefined;\n        }\n    }\n    send(data) {\n        this.clearKeepAliveTimer();\n        if (this.ws.readyState !== (0, $hgUW1$isomorphicws).OPEN) throw new (0, $abb7f0d6cff128a3$export$67bbc29c133d62a1)((0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).ConnectionClosed, 'Connection closed.');\n        this.setupKeepAliveTimer();\n        this.ws.send(data);\n    }\n    async request(method, params, options) {\n        let id = (this.nextId++).toString();\n        let payload = {\n            jsonrpc: '2.0',\n            id: id,\n            method: method,\n            params: params\n        };\n        let raw = JSON.stringify(payload);\n        let msg = options?.encrypted === false ? raw : await (0, $1dee54fbcb867378$export$2e2bcd8739ae039).encrypt(raw, this.secret);\n        this.send(msg);\n        return new Promise((resolve, reject)=>{\n            const cleanUp = ()=>{\n                clearTimeout(timeoutId);\n                options.signal?.removeEventListener('abort', onAbort);\n                this.pending.delete(id);\n            };\n            const onAbort = ()=>{\n                cleanUp();\n                reject(new (0, $abb7f0d6cff128a3$export$67bbc29c133d62a1)((0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).RequestCancelled, 'Request was cancelled.'));\n            };\n            const timeoutId = setTimeout(()=>{\n                cleanUp();\n                reject(new (0, $abb7f0d6cff128a3$export$67bbc29c133d62a1)((0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).RequestTimeout, 'Request timeout.'));\n            }, options.timeout);\n            // If already aborted, cancel immediately\n            if (options?.signal?.aborted) {\n                onAbort();\n                return;\n            }\n            options.signal?.addEventListener('abort', onAbort);\n            this.pending.set(id, {\n                resolve: (result)=>{\n                    cleanUp();\n                    resolve(result);\n                },\n                reject: (err)=>{\n                    cleanUp();\n                    reject(err);\n                }\n            });\n        });\n    }\n    async notify(method, params) {\n        let payload = {\n            jsonrpc: '2.0',\n            method: method,\n            params: params\n        };\n        let encrypted = await (0, $1dee54fbcb867378$export$2e2bcd8739ae039).encrypt(JSON.stringify(payload), this.secret);\n        this.send(encrypted);\n    }\n    on(method, handler) {\n        this.handlers.set(method, handler);\n    }\n    off(method) {\n        this.handlers.delete(method);\n    }\n    async handleMessage(raw) {\n        let msg = JSON.parse(raw);\n        if (this.isJsonRpcResponse(msg)) {\n            let cb = this.pending.get(msg.id);\n            if (cb) {\n                this.pending.delete(msg.id);\n                if (msg.error) cb.reject(new (0, $abb7f0d6cff128a3$export$67bbc29c133d62a1)(msg.error.code, msg.error.message));\n                else cb.resolve(msg.result);\n            }\n        } else if (this.isJsonRpcRequest(msg) || this.isJsonRpcNotification(msg)) {\n            let handler = this.handlers.get(msg.method);\n            if (handler) {\n                let { result: result, error: error } = await this.processMessage(msg, handler);\n                if (!this.isJsonRpcRequest(msg)) return; // Notifications do not require a response\n                if (!result && !error) error = {\n                    code: (0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).InvalidResponse,\n                    message: \"Handler returned neither result nor error\"\n                };\n                let response = {\n                    jsonrpc: '2.0',\n                    id: msg.id,\n                    result: result,\n                    error: error\n                };\n                let encrypted = await (0, $1dee54fbcb867378$export$2e2bcd8739ae039).encrypt(JSON.stringify(response), this.secret);\n                this.send(encrypted);\n            }\n        }\n    }\n    async processMessage(msg, handler) {\n        let result, error;\n        try {\n            if (Array.isArray(msg.params)) result = await handler(...msg.params);\n            else if (msg.params && typeof msg.params === 'object') result = await handler(msg.params);\n            else result = await handler(); // handles undefined/null\n            if (this.isJsonRpcErrorData(result)) {\n                error = {\n                    code: result.code,\n                    message: result.message\n                };\n                result = undefined;\n            }\n        } catch (err) {\n            if (this.isJsonRpcErrorData(err)) error = {\n                code: err.code,\n                message: err.message\n            };\n            else error = {\n                code: (0, $abb7f0d6cff128a3$export$4baa4fd50b453ebf).RequestFailed,\n                message: `Request failed. ${err instanceof Error ? err.message : ''}`\n            };\n        }\n        return {\n            result: result,\n            error: error\n        };\n    }\n    isJsonRpcResponse(msg) {\n        return typeof msg === 'object' && msg !== null && 'jsonrpc' in msg && msg.jsonrpc === '2.0' && 'id' in msg && ('result' in msg || 'error' in msg);\n    }\n    isJsonRpcRequest(msg) {\n        return typeof msg === 'object' && msg !== null && 'jsonrpc' in msg && msg.jsonrpc === '2.0' && 'id' in msg && 'method' in msg;\n    }\n    isJsonRpcNotification(msg) {\n        return typeof msg === 'object' && msg !== null && 'jsonrpc' in msg && msg.jsonrpc === '2.0' && 'method' in msg && !('id' in msg);\n    }\n    isJsonRpcErrorData(data) {\n        return typeof data === 'object' && data !== null && 'code' in data && typeof data.code === 'number' && 'message' in data && typeof data.message === 'string';\n    }\n}\n\n\nclass $69598d18f252c5a5$export$2e2bcd8739ae039 {\n    /**\r\n   * Creates an instance of PeerProvider.\r\n   * \r\n   * @param version - The protocol version.\r\n   * @param relayUrl - The URL of the relay server.\r\n   * @param secret - The shared secret for encryption.\r\n   * @param sessionId - The session ID. Defaults to an empty string.\r\n   */ constructor(version, relayUrl, secret, sessionId = \"\"){\n        this.version = version;\n        this.relayUrl = relayUrl;\n        this.secret = secret;\n        this.sessionId = sessionId;\n        this.client = new (0, $770bd20b531dfe71$export$2e2bcd8739ae039)(this.relayUrl, this.secret);\n    }\n    getSessionInfo() {\n        return {\n            version: this.version,\n            relayUrl: this.relayUrl,\n            sessionId: this.sessionId,\n            secret: this.secret\n        };\n    }\n    /**\r\n   * Connects to the relay server.\r\n   * \r\n   * @param timeoutMs - The connection timeout in milliseconds. Default is 10,000ms.\r\n   * @returns A promise that resolves when the connection is established.\r\n   */ async connect(timeoutMs = 10000) {\n        return this.client.connect(timeoutMs);\n    }\n    disconnect() {\n        this.client.disconnect();\n    }\n    /**\r\n   * Sends a JSON-RPC request to the peer.\r\n   * \r\n   * @param method - The RPC method name.\r\n   * @param params - The RPC method parameters.\r\n   * @param options - The request options, including timeout. Default timeout is 30,000ms.\r\n   * @returns A promise that resolves with the result of the RPC method.\r\n   */ async sendRequest(method, params, options = {\n        timeout: 30000\n    }) {\n        return this.client.request(method, params, options);\n    }\n    /**\r\n   * Sends a JSON-RPC notification to the peer.\r\n   * \r\n   * @param method - The RPC method name.\r\n   * @param params - The RPC method parameters.\r\n   */ async sendNotification(method, params) {\n        await this.client.notify(method, params);\n    }\n    /**\r\n   * Registers a handler for a specific RPC method.\r\n   * \r\n   * @param method - The RPC method name.\r\n   * @param handler - The function to handle the RPC request.\r\n   */ on(method, handler) {\n        this.client.on(method, handler);\n    }\n    /**\r\n   * Removes a handler for a specific RPC method.\r\n   * \r\n   * @param method - The RPC method name.\r\n   */ off(method) {\n        this.client.off(method);\n    }\n    /**\r\n   * Registers a handler for when the peer disconnects from the session.\r\n   * \r\n   * @param handler - The function to handle the peer disconnection.\r\n   */ onPeerDisconnect(handler) {\n        this.on('wl_sessionLeft', handler);\n    }\n    /**\r\n   * Registers a handler for when the WebSocket connection is closed.\r\n   * \r\n   * @param handler - The function to handle the connection close event.\r\n   */ onClose(handler) {\n        this.client.onClose(handler);\n    }\n}\n\n\nclass $fe6ed033804c8bce$export$2e2bcd8739ae039 extends (0, $69598d18f252c5a5$export$2e2bcd8739ae039) {\n    /**\r\n   * Creates an instance of DAppProvider.\r\n   * \r\n   * @param pairingURI - The dApp pairing URI, usually scanned from a QR code.\r\n   */ constructor(pairingURI){\n        let { version: version, relayUrl: relayUrl, secret: secret, sessionId: sessionId } = $fe6ed033804c8bce$export$2e2bcd8739ae039.parsePairingURI(pairingURI);\n        super(version, relayUrl, secret, sessionId);\n    }\n    /**\r\n   * Parses a pairing URI to extract session details.\r\n   * \r\n   * @param uri - The pairing URI.\r\n   * @returns The session details.\r\n   * @throws If the URI is invalid.\r\n   * @internal\r\n   */ static parsePairingURI(uri) {\n        if (!uri.startsWith(\"wl:\")) throw new Error(\"Invalid pairing uri prefix\");\n        const uriBody = uri.substring(3);\n        const atIndex = uriBody.indexOf('@');\n        if (atIndex < 0) throw new Error(\"Invalid pairing uri: missing version\");\n        const version = uriBody.substring(0, atIndex);\n        const relayPart = uriBody.substring(atIndex + 1);\n        const url = new URL(relayPart);\n        const sessionId = url.searchParams.get(\"session\");\n        const secret = url.searchParams.get(\"secret\");\n        if (!sessionId || !secret) throw new Error(\"Missing session or secret\");\n        return {\n            version: version,\n            relayUrl: url.origin + url.pathname,\n            secret: secret,\n            sessionId: sessionId\n        };\n    }\n    /**\r\n   * Connects to the relay server and retrieves the dApp info from the wallet.\r\n   * \r\n   * @param timeoutMs - The connection timeout in milliseconds. Default 10_000ms\r\n   * @returns A promise that resolves with the dApp information.\r\n   * @throws If the connection fails or no app info is received.\r\n   */ async connect(timeoutMs = 10000) {\n        try {\n            await super.connect(timeoutMs);\n            let appInfo = await this.sendRequest(\"wl_getAppInfo\", [\n                this.sessionId\n            ], {\n                encrypted: false,\n                timeout: timeoutMs\n            });\n            if (!appInfo) throw new Error(\"No app info received\");\n            return appInfo;\n        } catch (e) {\n            super.disconnect();\n            throw e;\n        }\n    }\n    /**\r\n   * Notifies the dApp that the wallet has joined the session.\r\n   * \r\n   * @param walletAddress - The address of the wallet joining the session.\r\n   * @param timeoutMs - The request timeout in milliseconds. Default 10_000ms\r\n   * @returns A promise that resolves to true if the notification was sent successfully.\r\n   * @throws If the operation fails.\r\n   */ async joinSession(walletAddress, timeoutMs = 10000) {\n        // Notify the relay (unencrypted)\n        let success = await this.sendRequest(\"wl_joinSession\", [\n            this.sessionId\n        ], {\n            encrypted: false,\n            timeout: timeoutMs\n        });\n        if (!success) throw new Error(\"Failed to join session\");\n        // Notify the dApp (encrypted)\n        await this.sendNotification(\"wl_sessionJoined\", [\n            walletAddress\n        ]);\n        return success;\n    }\n    /**\r\n   * Registers a handler for the \"wallet_signMessage\" request from the dApp.\r\n   * \r\n   * @param handler - The function to handle the sign message request.\r\n   */ onSignMessage(handler) {\n        this.on(\"wallet_signMessage\", handler);\n    }\n    /**\r\n   * Registers a handler for the \"wallet_getAccount\" request from the dApp.\r\n   * \r\n   * @param handler - The function to handle the get account request.\r\n   */ onGetAccount(handler) {\n        this.on(\"wallet_getAccount\", handler);\n    }\n    /**\r\n   * Registers a handler for the \"wallet_addToken\" request from the dApp.\r\n   * \r\n   * @param handler - The function to handle the add token request.\r\n   */ onAddToken(handler) {\n        this.on(\"wallet_addToken\", handler);\n    }\n    /**\r\n   * Registers a handler for the \"wallet_signTransaction\" request from the dApp.\r\n   * \r\n   * @param handler - The function to handle the sign transaction request.\r\n   */ onSignTransaction(handler) {\n        this.on(\"wallet_signTransaction\", handler);\n    }\n    /**\r\n   * Registers a handler for the \"wallet_sendTransaction\" request from the dApp.\r\n   * \r\n   * @param handler - The function to handle the send transaction request.\r\n   */ onSendTransaction(handler) {\n        this.on(\"wallet_sendTransaction\", handler);\n    }\n    /**\r\n   * Registers a handler for the \"wallet_switchNetwork\" request from the dApp.\r\n   * \r\n   * @param handler - The function to handle the switch network request.\r\n   */ onSwitchNetwork(handler) {\n        this.on(\"wallet_switchNetwork\", handler);\n    }\n}\n\n\n\n\nclass $ff9d81fc068ff3b6$export$2e2bcd8739ae039 extends (0, $69598d18f252c5a5$export$2e2bcd8739ae039) {\n    /**\r\n   * Creates an instance of WalletProvider.\r\n   * \r\n   * @param relayUrl - The URL of the relay server.\r\n   * @param appInfo - Information about the dApp.\r\n   * @param version - The protocol version. Default is \"1\".\r\n   */ constructor(relayUrl, appInfo, version = \"1\"){\n        super(version, relayUrl, (0, $1dee54fbcb867378$export$2e2bcd8739ae039).generateSecret()), this.appInfo = appInfo;\n    }\n    /**\r\n   * Connects to the relay server and creates a new session.\r\n   * \r\n   * @param timeoutMs - The connection timeout in milliseconds. Default is 10,000ms.\r\n   * @returns A promise that resolves when the connection is established and the session is created.\r\n   * @throws If the connection or session creation fails.\r\n   */ async connect(timeoutMs = 10000) {\n        try {\n            await super.connect(timeoutMs);\n            let sessionId = await this.sendRequest('wl_createSession', [\n                this.appInfo\n            ], {\n                encrypted: false,\n                timeout: timeoutMs\n            });\n            if (typeof sessionId !== 'string') throw new Error('Invalid session ID received from relay');\n            this.sessionId = sessionId;\n        } catch (e) {\n            super.disconnect();\n            throw e;\n        }\n    }\n    /**\r\n   * Disconnects from the relay server and cancels any pending wallet connection waits.\r\n   */ disconnect() {\n        this.cancelWaitForWallet();\n        super.disconnect();\n    }\n    /**\r\n   * Gets the pairing URI for the current session.\r\n   * \r\n   * This URI should be displayed as a QR code for the wallet to scan.\r\n   * \r\n   * @returns The pairing URI.\r\n   */ getPairingURI() {\n        return `wl:${this.version}@${this.relayUrl}?session=${this.sessionId}&secret=${this.secret}`;\n    }\n    /**\r\n   * Waits for a wallet to join the session.\r\n   * \r\n   * @param timeoutMs - The timeout in milliseconds to wait for the wallet. Default is 30,000ms.\r\n   * @returns A promise that resolves with the wallet's address.\r\n   * @throws If the operation times out or is canceled.\r\n   */ async waitForWallet(timeoutMs = 30000) {\n        if (this.walletWaiterAbortController) throw new Error('Already waiting for wallet');\n        this.walletWaiterAbortController = new AbortController();\n        let { signal: signal } = this.walletWaiterAbortController;\n        return new Promise((resolve, reject)=>{\n            let timer = setTimeout(()=>{\n                cleanup();\n                reject(new Error('Wallet connection timeout'));\n            }, timeoutMs);\n            const handler = (address)=>{\n                cleanup();\n                resolve(address);\n            };\n            const cleanup = ()=>{\n                clearTimeout(timer);\n                this.off('wl_sessionJoined');\n                this.walletWaiterAbortController = undefined;\n            };\n            this.on('wl_sessionJoined', handler);\n            signal.addEventListener('abort', ()=>{\n                cleanup();\n                reject(new Error('Wallet wait canceled'));\n            });\n        });\n    }\n    /**\r\n   * Cancels the wait for a wallet to connect.\r\n   */ cancelWaitForWallet() {\n        this.walletWaiterAbortController?.abort();\n    }\n    /**\r\n   * Requests the connected wallet to sign a message.\r\n   * \r\n   * @param account - The account address to use for signing.\r\n   * @param message - The message to sign - as utf8 string hex representation.\r\n   * @param timeoutMs - The request timeout in milliseconds. Default is 30,000ms.\r\n   * @param signal - An AbortSignal to cancel the request.\r\n   * @returns A promise that resolves with the signed message.\r\n   * @throws If the wallet is not connected or the request fails.\r\n   */ async signMessage(account, message, timeoutMs = 30000, signal) {\n        if (!this.sessionId) throw new Error('Not connected to a wallet');\n        return this.sendRequest('wallet_signMessage', {\n            account: account,\n            message: message\n        }, {\n            timeout: timeoutMs,\n            signal: signal\n        });\n    }\n    /**\r\n   * Requests the connected wallet's account address.\r\n   * \r\n   * @param timeoutMs - The request timeout in milliseconds. Default is 30,000ms.\r\n   * @param signal - An AbortSignal to cancel the request.\r\n   * @returns A promise that resolves with the account address.\r\n   * @throws If the wallet is not connected or the request fails.\r\n   */ async getAccount(timeoutMs = 30000, signal) {\n        if (!this.sessionId) throw new Error('Not connected to a wallet');\n        return this.sendRequest('wallet_getAccount', [], {\n            timeout: timeoutMs,\n            signal: signal\n        });\n    }\n    /**\r\n   * Requests the connected wallet to add a token to its tokens list.\r\n   * \r\n   * @param account - The account address.\r\n   * @param token - The token identifier to add.\r\n   * @param timeoutMs - The request timeout in milliseconds. Default is 30,000ms.\r\n   * @param signal - An AbortSignal to cancel the request.\r\n   * @returns A promise that resolves to true if the token was added successfully.\r\n   * @throws If the wallet is not connected or the request fails.\r\n   */ async addToken(account, token, timeoutMs = 30000, signal) {\n        if (!this.sessionId) throw new Error('Not connected to a wallet');\n        return this.sendRequest('wallet_addToken', {\n            account: account,\n            token: token\n        }, {\n            timeout: timeoutMs,\n            signal: signal\n        });\n    }\n    /**\r\n   * Requests the connected wallet to sign a transaction.\r\n   *\r\n   * @param account - The account address to use for signing.\r\n   * @param hex - The transaction hex to sign.\r\n   * @param broadcast - Whether to broadcast the transaction after signing.\r\n   * @param timeoutMs - The request timeout in milliseconds. Default is 30,000ms.\r\n   * @param signal - An AbortSignal to cancel the request.\r\n   * @returns A promise that resolves with the signed transaction hex, or transaction ID if broadcast is `true`.\r\n   * @throws If the wallet is not connected or the request fails.\r\n   */ async signTransaction(account, hex, broadcast, timeoutMs = 30000, signal) {\n        if (!this.sessionId) throw new Error('Not connected to a wallet');\n        return this.sendRequest('wallet_signTransaction', {\n            account: account,\n            hex: hex,\n            broadcast: broadcast\n        }, {\n            timeout: timeoutMs,\n            signal: signal\n        });\n    }\n    /**\r\n   * Requests the connected wallet to send a transaction.\r\n   *\r\n   * @param from - The sender's address.\r\n   * @param to - The recipient and amount.\r\n   * @param feePerByte - The fee per byte for the transaction.\r\n   * @param data - Optional data to include in the transaction.\r\n   * @param timeoutMs - The request timeout in milliseconds. Default is 30,000ms.\r\n   * @param signal - An AbortSignal to cancel the request.\r\n   * @returns A promise that resolves with the transaction ID.\r\n   * @throws If the wallet is not connected or the request fails.\r\n   */ async sendTransaction(from, to, feePerByte, data, timeoutMs = 30000, signal) {\n        if (!this.sessionId) throw new Error('Not connected to a wallet');\n        return this.sendRequest('wallet_sendTransaction', {\n            from: from,\n            to: to,\n            feePerByte: feePerByte,\n            data: data\n        }, {\n            timeout: timeoutMs,\n            signal: signal\n        });\n    }\n    /**\r\n   * Requests the connected wallet to switch to a different network.\r\n   * \r\n   * @param network - The network to switch to.\r\n   * @param timeoutMs - The request timeout in milliseconds. Default is 30,000ms.\r\n   * @param signal - An AbortSignal to cancel the request.\r\n   * @returns A promise that resolves to true if the network was switched successfully.\r\n   * @throws If the wallet is not connected or the request fails.\r\n   */ async switchNetwork(network, timeoutMs = 30000, signal) {\n        if (!this.sessionId) throw new Error('Not connected to a wallet');\n        return this.sendRequest('wallet_switchNetwork', {\n            network: network\n        }, {\n            timeout: timeoutMs,\n            signal: signal\n        });\n    }\n}\n\n\n\n\n\nexport {$fe6ed033804c8bce$export$2e2bcd8739ae039 as DAppProvider, $ff9d81fc068ff3b6$export$2e2bcd8739ae039 as WalletProvider, $abb7f0d6cff128a3$export$67bbc29c133d62a1 as JsonRpcError, $abb7f0d6cff128a3$export$4baa4fd50b453ebf as JsonRpcErrorCode};\n//# sourceMappingURL=index.mjs.map\n","import {SighashType as $149c1bd638913645$re_export$SighashType, Networks as $hgUW1$Networks, HDPrivateKey as $hgUW1$HDPrivateKey, TransactionBuilder as $hgUW1$TransactionBuilder, Message as $hgUW1$Message, AddressType as $hgUW1$AddressType, Address as $hgUW1$Address, CommonUtils as $hgUW1$CommonUtils, BufferWriter as $hgUW1$BufferWriter, Hash as $hgUW1$Hash, TxSigner as $hgUW1$TxSigner, TxSignature as $hgUW1$TxSignature, ScriptTemplateInput as $hgUW1$ScriptTemplateInput, ScriptFactory as $hgUW1$ScriptFactory, Script as $hgUW1$Script, UnitUtils as $hgUW1$UnitUtils, Transaction as $hgUW1$Transaction, GroupToken as $hgUW1$GroupToken, BufferUtils as $hgUW1$BufferUtils, Opcode as $hgUW1$Opcode, Output as $hgUW1$Output, BNExtended as $hgUW1$BNExtended} from \"libnexa-ts\";\nimport {generateMnemonic as $hgUW1$generateMnemonic, wordlists as $hgUW1$wordlists, mnemonicToSeedSync as $hgUW1$mnemonicToSeedSync, validateMnemonic as $hgUW1$validateMnemonic} from \"bip39\";\nimport {isNil as $hgUW1$isNil, isString as $hgUW1$isString, isBuffer as $hgUW1$isBuffer, isArray as $hgUW1$isArray, parseInt as $hgUW1$parseInt, isObject as $hgUW1$isObject} from \"lodash-es\";\nimport {ConnectionStatus as $hgUW1$ConnectionStatus, ElectrumClient as $hgUW1$ElectrumClient} from \"@vgrunner/electrum-cash\";\nimport $hgUW1$jsbigdecimal from \"js-big-decimal\";\nimport {DAppProvider as $hgUW1$DAppProvider, JsonRpcError as $hgUW1$JsonRpcError, JsonRpcErrorCode as $hgUW1$JsonRpcErrorCode, WalletProvider as $hgUW1$WalletProvider} from \"wallet-comms-sdk\";\n\n\n      var $parcel$global = globalThis;\n    // @ts-ignore\nvar $df64573ef6d51081$exports = {};\n$df64573ef6d51081$exports = JSON.parse(\"{\\\"name\\\":\\\"nexa-wallet-sdk\\\",\\\"version\\\":\\\"0.5.0\\\",\\\"type\\\":\\\"module\\\",\\\"source\\\":\\\"src/index.ts\\\",\\\"types\\\":\\\"dist/index.d.ts\\\",\\\"main\\\":\\\"dist/index.cjs\\\",\\\"module\\\":\\\"dist/index.mjs\\\",\\\"browser\\\":\\\"dist/index.web.mjs\\\",\\\"exports\\\":{\\\"types\\\":\\\"./dist/index.d.ts\\\",\\\"node\\\":{\\\"import\\\":\\\"./dist/index.mjs\\\",\\\"require\\\":\\\"./dist/index.cjs\\\"},\\\"browser\\\":\\\"./dist/index.web.mjs\\\",\\\"default\\\":\\\"./dist/index.mjs\\\"},\\\"scripts\\\":{\\\"build\\\":\\\"parcel build\\\",\\\"lint\\\":\\\"eslint .\\\",\\\"fix-lint\\\":\\\"eslint --fix .\\\",\\\"dev\\\":\\\"parcel watch\\\",\\\"test\\\":\\\"vitest run\\\",\\\"clean\\\":\\\"rm -rf dist .parcel-cache\\\",\\\"docs\\\":\\\"typedoc\\\",\\\"docs:serve\\\":\\\"typedoc && npx serve docs -l 8080\\\",\\\"docs:mkdocs\\\":\\\"typedoc && mkdocs serve\\\",\\\"docs:build\\\":\\\"typedoc && mkdocs build\\\",\\\"docs:setup\\\":\\\"./scripts/setup-docs.sh\\\",\\\"wallet-cli\\\":\\\"node examples/wallet-cli.cjs\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git+ssh://git@gitlab.com/nexa/wallet-sdk-ts.git\\\"},\\\"keywords\\\":[\\\"nexa\\\",\\\"wallet\\\",\\\"web3\\\",\\\"crypto\\\",\\\"dapp\\\",\\\"walletcomms\\\",\\\"walletsdk\\\"],\\\"contributors\\\":[{\\\"name\\\":\\\"Dolaned\\\"},{\\\"name\\\":\\\"Griffith\\\"},{\\\"name\\\":\\\"Vgrunner\\\"},{\\\"name\\\":\\\"myendy\\\"}],\\\"author\\\":\\\"Dolaned\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://gitlab.com/nexa/wallet-sdk-ts/issues\\\"},\\\"homepage\\\":\\\"https://gitlab.com/nexa/wallet-sdk-ts#readme\\\",\\\"description\\\":\\\"Wallet SDK for the Nexa blockchain\\\",\\\"devDependencies\\\":{\\\"@parcel/packager-ts\\\":\\\"^2.15.4\\\",\\\"@parcel/transformer-typescript-types\\\":\\\"^2.15.4\\\",\\\"@types/lodash-es\\\":\\\"^4.17.12\\\",\\\"@types/node\\\":\\\"^22.13.1\\\",\\\"eslint\\\":\\\"^9.20.1\\\",\\\"parcel\\\":\\\"^2.15.4\\\",\\\"typedoc\\\":\\\"^0.28.7\\\",\\\"typedoc-plugin-markdown\\\":\\\"^4.7.0\\\",\\\"typedoc-plugin-rename-defaults\\\":\\\"^0.7.3\\\",\\\"typescript\\\":\\\"^5.8.3\\\",\\\"typescript-eslint\\\":\\\"^8.24.1\\\",\\\"vitest\\\":\\\"^3.0.8\\\"},\\\"targets\\\":{\\\"main\\\":{\\\"context\\\":\\\"node\\\",\\\"outputFormat\\\":\\\"commonjs\\\",\\\"distDir\\\":\\\"dist\\\",\\\"isLibrary\\\":true,\\\"includeNodeModules\\\":[\\\"lodash-es\\\"]},\\\"module\\\":{\\\"context\\\":\\\"node\\\",\\\"outputFormat\\\":\\\"esmodule\\\",\\\"distDir\\\":\\\"dist\\\",\\\"isLibrary\\\":true},\\\"browser\\\":{\\\"context\\\":\\\"browser\\\",\\\"outputFormat\\\":\\\"esmodule\\\",\\\"distDir\\\":\\\"dist\\\",\\\"isLibrary\\\":true}},\\\"dependencies\\\":{\\\"@vgrunner/electrum-cash\\\":\\\"^2.0.12\\\",\\\"bip39\\\":\\\"^3.1.0\\\",\\\"js-big-decimal\\\":\\\"^2.2.0\\\",\\\"libnexa-ts\\\":\\\"^1.0.5\\\",\\\"lodash-es\\\":\\\"^4.17.21\\\",\\\"prompt-sync\\\":\\\"^4.2.0\\\",\\\"wallet-comms-sdk\\\":\\\"^0.6.1\\\"},\\\"files\\\":[\\\"dist\\\"],\\\"directories\\\":{\\\"test\\\":\\\"tests\\\"},\\\"@parcel/resolver-default\\\":{\\\"packageExports\\\":true}}\");\n\n\n\n\n\nconst $3cd8d0b72420af59$export$1f6f962b0b96558 = {\n    WS: 'ws',\n    WSS: 'wss',\n    TCP: \"tcp\",\n    TCP_TLS: \"tcp_tls\"\n};\n\n\n\nclass $884ce55f1db7e177$export$ba81aefc89aef50c {\n    constructor(){}\n    /**\n     * Get Rostum Server Version\n     */ async getVersion() {\n        return await this.execute('server.version');\n    }\n    /**\n     * Get the block tip of the network / chain we are currently connected to\n     */ async getBlockTip() {\n        return await this.execute('blockchain.headers.tip');\n    }\n    /**\n     * Get the nexa balance of an address without the token balances\n     * @param address\n     */ async getBalance(address) {\n        return await this.execute('blockchain.address.get_balance', address, 'exclude_tokens');\n    }\n    /**\n     * Get The transaction history for an address\n     * @param address\n     */ async getTransactionHistory(address) {\n        return await this.execute('blockchain.address.get_history', address);\n    }\n    /**\n     * Get the block height or block has of when the address was first used\n     * @param address\n     */ async getFirstUse(address) {\n        return await this.execute('blockchain.address.get_first_use', address);\n    }\n    /**\n     * Get a single transaction object\n     * @param id\n     * @param verbose\n     */ async getTransaction(id, verbose = true) {\n        return await this.execute('blockchain.transaction.get', id, verbose);\n    }\n    /**\n     * Get a single unspent output including group data\n     * @param outpoint\n     */ async getUtxo(outpoint) {\n        return await this.execute('blockchain.utxo.get', outpoint);\n    }\n    /**\n     * Get Utxos only containing nexa information\n     * @param address\n     */ async getNexaUtxos(address) {\n        return await this.execute('blockchain.address.listunspent', address, 'exclude_tokens');\n    }\n    /**\n     * Get all the utxo's for a token at an address\n     * @param address\n     * @param token\n     */ async getTokenUtxos(address, token) {\n        let listunspent = await this.execute('token.address.listunspent', address, null, token);\n        return listunspent.unspent;\n    }\n    /**\n     * Get the token balances for an address\n     * @param address\n     * @param token\n     */ async getTokensBalance(address, token) {\n        if (token) return await this.execute('token.address.get_balance', address, null, token);\n        return await this.execute('token.address.get_balance', address);\n    }\n    /**\n     * Get the token genesis for a token\n     * @param token\n     */ async getTokenGenesis(token) {\n        return await this.execute('token.genesis.info', token);\n    }\n    /**\n     * Subscribe to address call back notifications, handy for updating the user when they receive nexa or tokens in\n     * their wallet\n     * @param addresses\n     * @param callback\n     */ async subscribeToAddresses(addresses, callback) {\n        for (const addr of addresses)await this.client?.subscribe(callback, 'blockchain.address.subscribe', addr);\n    }\n    /**\n     * Unsubscribe from address notifications to prevent memory leaks\n     * @param addresses\n     * @param callback\n     */ async unsubscribeFromAddresses(addresses, callback) {\n        for (const addr of addresses)await this.client?.unsubscribe(callback, 'blockchain.address.subscribe', addr);\n    }\n    /**\n     * Broadcast a presigned transaction hash\n     * @param txHex\n     */ async broadcast(txHex) {\n        return await this.execute('blockchain.transaction.broadcast', txHex);\n    }\n    /**\n     * Get the latency of the server connection\n     */ async getLatency() {\n        try {\n            let start = Date.now();\n            let res = await this.getBlockTip();\n            if (res) return Date.now() - start;\n            return 0;\n        } catch  {\n            return 0;\n        }\n    }\n    /**\n     * Create initial connection with the rostrum server\n     * @param netOrParams - Network identifier or RostrumParams object\n     * @param params - RostrumParams object (for backward compatibility)\n     * @param electrumClient - Optional pre-configured ElectrumClient instance\n     */ async connect(netOrParams, params, electrumClient) {\n        try {\n            let connectionParams;\n            // Handle backward compatibility: connect(params) or connect(network, params)\n            if (netOrParams && typeof netOrParams === 'object' && 'host' in netOrParams && 'port' in netOrParams && 'scheme' in netOrParams) // First parameter is RostrumParams\n            connectionParams = netOrParams;\n            else if (params) // Second parameter contains RostrumParams, ignore network\n            connectionParams = params;\n            else {\n                // Use network to determine default params\n                const network = netOrParams ? (0, $hgUW1$Networks).get(netOrParams) : (0, $hgUW1$Networks).mainnet;\n                if (network === (0, $hgUW1$Networks).mainnet) connectionParams = {\n                    host: 'electrum.nexa.org',\n                    port: 20004,\n                    scheme: (0, $3cd8d0b72420af59$export$1f6f962b0b96558).WSS\n                };\n                else if (network === (0, $hgUW1$Networks).testnet) connectionParams = {\n                    host: 'testnet-electrum.nexa.org',\n                    port: 30004,\n                    scheme: (0, $3cd8d0b72420af59$export$1f6f962b0b96558).WSS\n                };\n                else // Default fallback for other networks (like regtest)\n                connectionParams = {\n                    host: 'localhost',\n                    port: 30004,\n                    scheme: (0, $3cd8d0b72420af59$export$1f6f962b0b96558).WS\n                };\n            }\n            if (electrumClient) {\n                this.client = electrumClient;\n                if (this.client.connection.status == (0, $hgUW1$ConnectionStatus).DISCONNECTED) await this.client.connect();\n            } else {\n                this.client = new (0, $hgUW1$ElectrumClient)(\"com.nexa.wallet-sdk\", \"1.4.3\", connectionParams.host, connectionParams.port, connectionParams.scheme, 30000, 10000, true);\n                await this.client.connect();\n            }\n        } catch (e) {\n            if (e instanceof Error) console.info(e.message);\n            else console.error(e);\n            throw e;\n        }\n    }\n    /**\n     * Disconnect from the rostrum server\n     * @param force\n     */ async disconnect(force) {\n        try {\n            return await this.client.disconnect(force);\n        } catch (e) {\n            console.log(e);\n            return false;\n        }\n    }\n    /**\n     * internal function to call commands against the rostrum API\n     * @param method\n     * @param parameters\n     * @private\n     */ async execute(method, ...parameters) {\n        let res = await this.client.request(method, ...parameters);\n        if (res instanceof Error) throw res;\n        return res;\n    }\n}\nconst $884ce55f1db7e177$export$eaa49f0478d81b9d = new $884ce55f1db7e177$export$ba81aefc89aef50c();\n\n\n\n\n\n\n\n\nclass $b76a3f2ef1862027$export$c54c8796e94a37a0 {\n    get transactions() {\n        return this._transactions;\n    }\n    constructor(_bip44Account){\n        this._tokenBalances = {};\n        this._transactions = new Map();\n        this._bip44Account = _bip44Account;\n        this._balance = {\n            confirmed: 0,\n            unconfirmed: 0\n        };\n        this._tokenBalances = {};\n    }\n    get balance() {\n        return this._balance;\n    }\n    set balance(value) {\n        this._balance = value;\n    }\n    get tokenBalances() {\n        return this._tokenBalances;\n    }\n    set tokenBalances(value) {\n        this._tokenBalances = value;\n    }\n    async fetchAndClassifyTransactions(transactionAddress, fromHeight) {\n        const transactions = await (0, $6f559318d8845d29$export$a2ed4b531376a5a4)([\n            transactionAddress\n        ], fromHeight ?? 0);\n        const txPromises = Array.from(transactions.txs.values()).map((tx)=>(0, $6f559318d8845d29$export$9c6f4f51acbc89b9)(tx, [\n                transactionAddress\n            ]));\n        const txEntities = await Promise.all(txPromises);\n        for (let txEntity of txEntities)this.transactions.set(txEntity.txId, txEntity);\n        return this.transactions;\n    }\n}\n\n\n\nclass $448355556707518b$export$2e2bcd8739ae039 extends (0, $b76a3f2ef1862027$export$c54c8796e94a37a0) {\n    constructor(bip44Account, accountIndex, addressKey){\n        super(bip44Account);\n        this._accountIndex = accountIndex;\n        this._accountKey = addressKey;\n    }\n    // this is used in AccountStore.ts to get the key to be used in the map for this account\n    getAccountStoreKey() {\n        return String(this._bip44Account + '.' + this._accountIndex);\n    }\n    getAccountType() {\n        return (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT;\n    }\n    getNewAddress() {\n        return this._accountKey.address;\n    }\n    getNewChangeAddress() {\n        return this.getNewAddress();\n    }\n    get accountIndexes() {\n        return {\n            rIndex: this._accountIndex,\n            cIndex: 0\n        };\n    }\n    get accountKeys() {\n        return {\n            receiveKeys: [\n                this._accountKey\n            ],\n            changeKeys: [] // Empty for single-key accounts\n        };\n    }\n    async loadBalances() {\n        let balances = await (0, $6f559318d8845d29$export$9e38d26dbd7c33f4)([\n            this._accountKey\n        ]);\n        let tokenBalances = [\n            this._accountKey\n        ].map((k)=>k.tokensBalance);\n        super.balance = (0, $6f559318d8845d29$export$a26005fb5b8d1e4a)(balances);\n        super.tokenBalances = (0, $6f559318d8845d29$export$dec515296f176dbe)(tokenBalances);\n    }\n    getKeyFromAddress(address) {\n        if (address !== this._accountKey.address) throw new Error(`Address ${address} does not belong to this account`);\n        return this._accountKey;\n    }\n    async getTransactions(fromHeight, address) {\n        const transactionAddress = address ?? this._accountKey.address;\n        return this.fetchAndClassifyTransactions(transactionAddress, fromHeight);\n    }\n    getAddresses() {\n        return [\n            this._accountKey\n        ];\n    }\n    hasChangeAddresses() {\n        return false;\n    }\n    getPrimaryAddressKey() {\n        return this._accountKey;\n    }\n}\n\n\n\n\nclass $5c605efdbcfd6698$export$2e2bcd8739ae039 extends (0, $b76a3f2ef1862027$export$c54c8796e94a37a0) {\n    constructor(bip44Account, accountIndexes, accountKeys){\n        super(bip44Account);\n        if (accountIndexes.rIndex < 0) throw new Error(`Can not create nexa account with an rindex of ${accountIndexes.rIndex}. must be >= 0.`);\n        if (accountIndexes.cIndex < 0) throw new Error(`Can not create nexa account with an cindex of ${accountIndexes.cIndex}. must be >= 0.`);\n        this._accountIndexes = accountIndexes;\n        this._accountKeys = accountKeys;\n    }\n    // this is used in AccountStore.ts to get the key to be used in the map for this account\n    getAccountStoreKey() {\n        return String(this._bip44Account);\n    }\n    getAccountType() {\n        return (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).NEXA_ACCOUNT;\n    }\n    getNewAddress() {\n        return this._accountKeys.receiveKeys[this._accountKeys.receiveKeys.length - 1]?.address ?? '';\n    }\n    getNewChangeAddress() {\n        return this._accountKeys.changeKeys[this._accountKeys.changeKeys.length - 1]?.address ?? '';\n    }\n    get accountIndexes() {\n        return this._accountIndexes;\n    }\n    get accountKeys() {\n        return this._accountKeys;\n    }\n    async loadBalances() {\n        let balances = await (0, $6f559318d8845d29$export$9e38d26dbd7c33f4)(this._accountKeys.receiveKeys.concat(this._accountKeys.changeKeys));\n        let tokenBalances = this._accountKeys.receiveKeys.concat(this._accountKeys.changeKeys).map((k)=>k.tokensBalance);\n        super.balance = (0, $6f559318d8845d29$export$a26005fb5b8d1e4a)(balances);\n        super.tokenBalances = (0, $6f559318d8845d29$export$dec515296f176dbe)(tokenBalances);\n    }\n    getKeyFromAddress(address) {\n        const allKeys = this._accountKeys.receiveKeys.concat(this._accountKeys.changeKeys);\n        const keyFound = allKeys.find((key)=>key.address === address);\n        return keyFound;\n    }\n    async getTransactions(fromHeight, address) {\n        let receiveAddresses = this.accountKeys.receiveKeys.map((ak)=>ak.address);\n        let changeAddresses = this.accountKeys.changeKeys.map((ak)=>ak.address);\n        let allAddresses = receiveAddresses.concat(changeAddresses);\n        // If specific address provided, only fetch for that address\n        if (address != null) {\n            const transactions = await (0, $6f559318d8845d29$export$a2ed4b531376a5a4)([\n                address\n            ], fromHeight ?? 0);\n            const txPromises = Array.from(transactions.txs.values()).map((tx)=>(0, $6f559318d8845d29$export$9c6f4f51acbc89b9)(tx, allAddresses));\n            const txEntities = await Promise.all(txPromises);\n            for (let txEntity of txEntities)this.transactions.set(txEntity.txId, txEntity);\n            return this.transactions;\n        }\n        // Fetch from both receive and change addresses\n        let rTxs = (0, $6f559318d8845d29$export$a2ed4b531376a5a4)(receiveAddresses, fromHeight ?? 0);\n        let cTxs = (0, $6f559318d8845d29$export$a2ed4b531376a5a4)(changeAddresses, fromHeight ?? 0);\n        let [rData, cData] = await Promise.all([\n            rTxs,\n            cTxs\n        ]);\n        // Combine transaction data, avoiding duplicates\n        let txHistory = rData.txs;\n        for (let tx of cData.txs.values())txHistory.set(tx.tx_hash, tx);\n        // Classify all transactions in parallel\n        const txPromises = Array.from(txHistory.values()).map((tx)=>(0, $6f559318d8845d29$export$9c6f4f51acbc89b9)(tx, allAddresses));\n        const txEntities = await Promise.all(txPromises);\n        for (let txEntity of txEntities)this.transactions.set(txEntity.txId, txEntity);\n        return this.transactions;\n    }\n    getAddresses() {\n        return this._accountKeys.receiveKeys.concat(this._accountKeys.changeKeys);\n    }\n    hasChangeAddresses() {\n        return true; // BIP44 accounts always support change addresses\n    }\n    getPrimaryAddressKey() {\n        // For DefaultAccount, return the first receive key as the primary key\n        if (this._accountKeys.receiveKeys.length === 0) throw new Error(\"No receive keys available in account\");\n        return this._accountKeys.receiveKeys[0];\n    }\n}\n\n\n\n\nclass $ce8955c0465759ad$export$2e2bcd8739ae039 extends (0, $b76a3f2ef1862027$export$c54c8796e94a37a0) {\n    constructor(bip44Account, accountIndex, addressKey){\n        super(bip44Account);\n        this._accountIndex = accountIndex;\n        this._accountKey = addressKey;\n    }\n    // this is used in AccountStore.ts to get the key to be used in the map for this account\n    getAccountStoreKey() {\n        return String(this._bip44Account + '.' + this._accountIndex);\n    }\n    getAccountType() {\n        return (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).VAULT_ACCOUNT;\n    }\n    getNewAddress() {\n        return this._accountKey.address;\n    }\n    getNewChangeAddress() {\n        return this.getNewAddress();\n    }\n    get accountIndexes() {\n        return {\n            rIndex: this._accountIndex,\n            cIndex: 0\n        };\n    }\n    get accountKeys() {\n        return {\n            receiveKeys: [\n                this._accountKey\n            ],\n            changeKeys: [] // Empty for single-key accounts\n        };\n    }\n    async loadBalances() {\n        let balances = await (0, $6f559318d8845d29$export$9e38d26dbd7c33f4)([\n            this._accountKey\n        ]);\n        let tokenBalances = [\n            this._accountKey\n        ].map((k)=>k.tokensBalance);\n        super.balance = (0, $6f559318d8845d29$export$a26005fb5b8d1e4a)(balances);\n        super.tokenBalances = (0, $6f559318d8845d29$export$dec515296f176dbe)(tokenBalances);\n    }\n    getKeyFromAddress(address) {\n        if (address !== this._accountKey.address) throw new Error(`Address ${address} does not belong to this account`);\n        return this._accountKey;\n    }\n    async getTransactions(fromHeight, address) {\n        const transactionAddress = address ?? this._accountKey.address;\n        return this.fetchAndClassifyTransactions(transactionAddress, fromHeight);\n    }\n    getAddresses() {\n        return [\n            this._accountKey\n        ];\n    }\n    hasChangeAddresses() {\n        return false;\n    }\n    getPrimaryAddressKey() {\n        return this._accountKey;\n    }\n}\n\n\n\n\nconst $d78972a39a5ae94f$export$8ba128bc85947a2a = 9223372036854775807n;\nfunction $d78972a39a5ae94f$export$78d0476e8d098ba7() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction $d78972a39a5ae94f$export$c8733ae29fb53302(arg) {\n    return !arg || arg.length === 0;\n}\nfunction $d78972a39a5ae94f$export$78e516cc94be797b(amount, decimals) {\n    let val = new (0, $hgUW1$jsbigdecimal)(amount).divide(new (0, $hgUW1$jsbigdecimal)(Math.pow(10, decimals)), decimals).getPrettyValue();\n    if (val.match(/\\./)) val = val.replace(/\\.?0+$/, '');\n    return val;\n}\nfunction $d78972a39a5ae94f$export$9ad78026dec58d6(amount, decimals) {\n    return new (0, $hgUW1$jsbigdecimal)(amount).multiply(new (0, $hgUW1$jsbigdecimal)(Math.pow(10, decimals))).getValue();\n}\nfunction $d78972a39a5ae94f$export$23010fd5dda8dec1(address) {\n    if ((0, $hgUW1$CommonUtils).isHexa(address)) return Buffer.from(address, 'hex');\n    return (0, $hgUW1$Address).fromString(address).data;\n}\nfunction $d78972a39a5ae94f$export$254a5c7330bbfd41(token) {\n    if ((0, $hgUW1$CommonUtils).isHexa(token)) return token;\n    return $d78972a39a5ae94f$export$23010fd5dda8dec1(token).toString('hex');\n}\nfunction $d78972a39a5ae94f$export$f12d707d2b261fb6(txIdem, outputIndex) {\n    const writer = new (0, $hgUW1$BufferWriter)(undefined);\n    const outpoint = writer.write(Buffer.from(txIdem, 'hex').reverse()).writeUInt32LE(outputIndex).toBuffer();\n    return (0, $hgUW1$Hash).sha256(outpoint).reverse().toString('hex');\n}\n\n\nvar $6f559318d8845d29$export$dcc1fb6ad5308e56 = /*#__PURE__*/ function(TxTokenType) {\n    TxTokenType[TxTokenType[\"NO_GROUP\"] = 0] = \"NO_GROUP\";\n    TxTokenType[TxTokenType[\"CREATE\"] = 1] = \"CREATE\";\n    TxTokenType[TxTokenType[\"MINT\"] = 2] = \"MINT\";\n    TxTokenType[TxTokenType[\"MELT\"] = 3] = \"MELT\";\n    TxTokenType[TxTokenType[\"RENEW\"] = 4] = \"RENEW\";\n    TxTokenType[TxTokenType[\"TRANSFER\"] = 5] = \"TRANSFER\";\n    return TxTokenType;\n}({});\nvar $6f559318d8845d29$export$b8ca5fa4899cbfc7 = /*#__PURE__*/ function(AccountType) {\n    AccountType[AccountType[\"NEXA_ACCOUNT\"] = 0] = \"NEXA_ACCOUNT\";\n    AccountType[AccountType[\"VAULT_ACCOUNT\"] = 1] = \"VAULT_ACCOUNT\";\n    AccountType[AccountType[\"DAPP_ACCOUNT\"] = 2] = \"DAPP_ACCOUNT\";\n    return AccountType;\n}({});\nfunction $6f559318d8845d29$export$8d986bd2866fe6ab(address, network, type = (0, $hgUW1$AddressType).PayToScriptTemplate) {\n    return (0, $hgUW1$Address).isValid(address, network, type);\n}\nfunction $6f559318d8845d29$export$11f4ae2b4ff9633d(mnemonic, passphrase) {\n    const seed = $hgUW1$mnemonicToSeedSync(mnemonic, passphrase);\n    const masterKey = (0, $hgUW1$HDPrivateKey).fromSeed(seed);\n    return masterKey.deriveChild(44, true).deriveChild(29223, true);\n}\nfunction $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, account) {\n    return masterKey.deriveChild(account, true);\n}\nfunction $6f559318d8845d29$export$d6e8eb22902c6b88(accountKey, fromRIndex, rIndex, fromCIndex, cIndex) {\n    if (fromRIndex < 0) throw new Error(`Can not generate keys with fromRIndex ${fromRIndex}. must be >= 0.`);\n    if (fromCIndex < 0) throw new Error(`Can not generate keys with fromCIndex ${fromCIndex}. must be >= 0.`);\n    let receive = accountKey.deriveChild(0, false);\n    let change = accountKey.deriveChild(1, false);\n    let rKeys = [], cKeys = [];\n    for(let index = fromRIndex; index < rIndex; index++){\n        let k = receive.deriveChild(index, false);\n        let addr = k.privateKey.toAddress().toString();\n        rKeys.push({\n            key: k,\n            address: addr,\n            balance: \"0\",\n            tokensBalance: {}\n        });\n    }\n    for(let index = fromCIndex; index < cIndex; index++){\n        let k = change.deriveChild(index, false);\n        let addr = k.privateKey.toAddress().toString();\n        cKeys.push({\n            key: k,\n            address: addr,\n            balance: \"0\",\n            tokensBalance: {}\n        });\n    }\n    return {\n        receiveKeys: rKeys,\n        changeKeys: cKeys\n    };\n}\nfunction $6f559318d8845d29$export$1e0ce394ebe84ca9(accountKey, rIndex) {\n    let receive = accountKey.deriveChild(0, false);\n    let k = receive.deriveChild(rIndex, false);\n    let addr = k.privateKey.toAddress().toString();\n    return {\n        key: k,\n        address: addr,\n        balance: \"0\",\n        tokensBalance: {}\n    };\n}\nasync function $6f559318d8845d29$var$discoverUsedAccountIndexes(deriveKey) {\n    let lastUsed = -1, index = 0, toScan = 20;\n    while(toScan > 0){\n        toScan--;\n        let rAddr = deriveKey.deriveChild(index, false).privateKey.toAddress().toString();\n        let isUsed = await $6f559318d8845d29$var$isAddressUsed(rAddr);\n        if (isUsed) {\n            lastUsed = index;\n            toScan = 20;\n        }\n        index++;\n    }\n    // return the last used index, returns -1 if no indexes are used\n    return lastUsed;\n}\nasync function $6f559318d8845d29$export$4aeb2c92e53ab137(accountKey) {\n    let receiveKey = accountKey.deriveChild(0, false);\n    let changeKey = accountKey.deriveChild(1, false);\n    let rIndexPromise = $6f559318d8845d29$var$discoverUsedAccountIndexes(receiveKey);\n    let cIndexPromise = $6f559318d8845d29$var$discoverUsedAccountIndexes(changeKey);\n    let [rIndex, cIndex] = await Promise.all([\n        rIndexPromise,\n        cIndexPromise\n    ]);\n    // get the index that is the last used nexa addr\n    let indexes = {\n        rIndex: rIndex,\n        cIndex: cIndex\n    };\n    return indexes;\n}\nasync function $6f559318d8845d29$export$f421913908d4303e(masterKey) {\n    let accounts = [];\n    let index = 0;\n    while(true){\n        const nexaAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, index);\n        const indexes = await $6f559318d8845d29$export$4aeb2c92e53ab137(nexaAccountKey);\n        if (indexes.rIndex < 0 && indexes.cIndex < 0) break;\n        if (indexes.rIndex < 0) indexes.rIndex = 0;\n        if (indexes.cIndex < 0) indexes.cIndex = 0;\n        // make account after break check, otherwise we might push an empty account\n        const nexaAccount = new (0, $5c605efdbcfd6698$export$2e2bcd8739ae039)(index, indexes, $6f559318d8845d29$export$d6e8eb22902c6b88(nexaAccountKey, indexes.rIndex + 1, indexes.rIndex + 20, indexes.cIndex + 1, indexes.cIndex + 20));\n        await nexaAccount.loadBalances();\n        accounts.push(nexaAccount);\n        if (index == 0) index = 100;\n        else index++;\n    }\n    if (accounts.length == 0) {\n        // default account was unused but we need to populate at least one account,\n        // make the default account here\n        let defaultNexaAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, 0);\n        // get the last used indexes, -1 means unused\n        let defaultIndexes = {\n            rIndex: 0,\n            cIndex: 0\n        };\n        const defaultAccount = new (0, $5c605efdbcfd6698$export$2e2bcd8739ae039)(0, defaultIndexes, $6f559318d8845d29$export$d6e8eb22902c6b88(defaultNexaAccountKey, defaultIndexes.rIndex, defaultIndexes.rIndex + 20, defaultIndexes.cIndex, defaultIndexes.cIndex + 20));\n        await defaultAccount.loadBalances();\n        accounts.push(defaultAccount);\n    }\n    return accounts;\n}\nasync function $6f559318d8845d29$var$findUsedVaultAccounts(masterKey) {\n    // all vaults are in bip44 account 1\n    let vaultAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, 1);\n    // all vaults are in the external chain\n    let vaultChain = vaultAccountKey.deriveChild(0, false);\n    // get the index that is the last used vault\n    return await $6f559318d8845d29$var$discoverUsedAccountIndexes(vaultChain);\n}\nasync function $6f559318d8845d29$export$eb24265dd203eccb(masterKey) {\n    let accounts = [];\n    // all vaults are in bip44 account 1\n    let vaultAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, 1);\n    // find the next unused vault\n    let lastUsedVaultIndex = await $6f559318d8845d29$var$findUsedVaultAccounts(masterKey);\n    // if all vaults unused, generate at least the first vault account\n    if (lastUsedVaultIndex < 0) lastUsedVaultIndex = 0;\n    // for each vault found, make the DefaultAccount for that vault\n    for(let index = 0; index <= lastUsedVaultIndex; index++){\n        const vaultAccount = new (0, $ce8955c0465759ad$export$2e2bcd8739ae039)(1, index, $6f559318d8845d29$export$1e0ce394ebe84ca9(vaultAccountKey, index));\n        await vaultAccount.loadBalances();\n        accounts.push(vaultAccount);\n    }\n    return accounts;\n}\nasync function $6f559318d8845d29$var$findUsedDappAccounts(masterKey) {\n    // all dApp accounts are in bip44 account 2\n    let dappAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, 2);\n    // all dApp accounts use the external chain\n    let dappChain = dappAccountKey.deriveChild(0, false);\n    // get the index that is the next unused dApp account\n    return await $6f559318d8845d29$var$discoverUsedAccountIndexes(dappChain);\n}\nasync function $6f559318d8845d29$export$e3d879d0e09f52c3(masterKey) {\n    let accounts = [];\n    // all dApp accounts are in bip44 account 2\n    let dappAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, 2);\n    // find the next unused dapp account\n    let lastUsedDappIndex = await $6f559318d8845d29$var$findUsedDappAccounts(masterKey);\n    // if all dapp accounts unused, generate at least the first dapp account\n    if (lastUsedDappIndex < 0) lastUsedDappIndex = 0;\n    // for each dApp account found, make the DefaultAccount for that dApp account\n    // for each vault found, make the DefaultAccount for that vault\n    for(let index = 0; index <= lastUsedDappIndex; index++){\n        const dappAccount = new (0, $448355556707518b$export$2e2bcd8739ae039)(2, index, $6f559318d8845d29$export$1e0ce394ebe84ca9(dappAccountKey, index));\n        await dappAccount.loadBalances();\n        accounts.push(dappAccount);\n    }\n    return accounts;\n}\nasync function $6f559318d8845d29$export$4e4f91181d6bd31c(masterKey) {\n    let accounts = [];\n    // accounts 0, 100+\n    const nexaAccounts = await $6f559318d8845d29$export$f421913908d4303e(masterKey);\n    // vaults in bip44 account 1\n    const vaultAccounts = await $6f559318d8845d29$export$eb24265dd203eccb(masterKey);\n    // dApp accounts in bip44 account 2\n    const dappAccounts = await $6f559318d8845d29$export$e3d879d0e09f52c3(masterKey);\n    // 3 - 99 are reserved and will go here when added\n    accounts = accounts.concat(nexaAccounts);\n    accounts = accounts.concat(vaultAccounts);\n    accounts = accounts.concat(dappAccounts);\n    return accounts;\n}\nasync function $6f559318d8845d29$var$isAddressUsed(address) {\n    try {\n        let firstUse = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getFirstUse(address);\n        return firstUse.tx_hash && firstUse.tx_hash !== \"\";\n    } catch (e) {\n        if (e instanceof Error && e.message.includes(\"not found\")) return false;\n        throw e;\n    }\n}\nasync function $6f559318d8845d29$var$getKeyTokenBalance(key) {\n    let tokensBalance = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTokensBalance(key.address);\n    let balance = {};\n    for(const cToken in tokensBalance.confirmed)if (tokensBalance.confirmed[cToken] != 0) balance[cToken] = {\n        confirmed: BigInt(tokensBalance.confirmed[cToken]).toString(),\n        unconfirmed: \"0\"\n    };\n    for(const uToken in tokensBalance.unconfirmed)if (tokensBalance.unconfirmed[uToken] != 0) {\n        if (balance[uToken]) balance[uToken].unconfirmed = BigInt(tokensBalance.unconfirmed[uToken]).toString();\n        else balance[uToken] = {\n            confirmed: \"0\",\n            unconfirmed: BigInt(tokensBalance.unconfirmed[uToken]).toString()\n        };\n    }\n    return balance;\n}\nasync function $6f559318d8845d29$var$getAndUpdateAddressKeyBalance(key) {\n    let balance = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getBalance(key.address);\n    key.balance = (BigInt(balance.confirmed) + BigInt(balance.unconfirmed)).toString();\n    key.tokensBalance = await $6f559318d8845d29$var$getKeyTokenBalance(key);\n    return balance;\n}\nasync function $6f559318d8845d29$export$9e38d26dbd7c33f4(keys) {\n    let promises = [];\n    keys.forEach((key)=>{\n        let b = $6f559318d8845d29$var$getAndUpdateAddressKeyBalance(key);\n        promises.push(b);\n    });\n    return await Promise.all(promises);\n}\nfunction $6f559318d8845d29$export$a26005fb5b8d1e4a(balances) {\n    let confirmed = new (0, $hgUW1$jsbigdecimal)(0), unconfirmed = new (0, $hgUW1$jsbigdecimal)(0);\n    balances.forEach((b)=>{\n        confirmed = confirmed.add(new (0, $hgUW1$jsbigdecimal)(b.confirmed));\n        unconfirmed = unconfirmed.add(new (0, $hgUW1$jsbigdecimal)(b.unconfirmed));\n    });\n    return {\n        confirmed: confirmed.getValue(),\n        unconfirmed: unconfirmed.getValue()\n    };\n}\nfunction $6f559318d8845d29$export$dec515296f176dbe(balances) {\n    let tokensBalance = {};\n    balances.forEach((b)=>{\n        for(const key in b)if (tokensBalance[key]) {\n            tokensBalance[key].confirmed = (BigInt(tokensBalance[key].confirmed) + BigInt(b[key].confirmed)).toString();\n            tokensBalance[key].unconfirmed = (BigInt(tokensBalance[key].unconfirmed) + BigInt(b[key].unconfirmed)).toString();\n        } else tokensBalance[key] = {\n            confirmed: b[key].confirmed,\n            unconfirmed: b[key].unconfirmed\n        };\n    });\n    return tokensBalance;\n}\nasync function $6f559318d8845d29$export$a2ed4b531376a5a4(addresses, fromHeight) {\n    let index = 0, i = 0, data = new Map(), maxHeight = fromHeight;\n    for (let address of addresses){\n        i++;\n        let txHistory = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTransactionHistory(address);\n        if (txHistory && txHistory.length > 0) {\n            index = i;\n            for (let tx of txHistory)if (tx.height === 0 || tx.height > fromHeight) {\n                maxHeight = Math.max(maxHeight, tx.height);\n                data.set(tx.tx_hash, tx);\n            }\n        }\n    }\n    return {\n        index: index,\n        txs: data,\n        lastHeight: maxHeight\n    };\n}\nasync function $6f559318d8845d29$var$rescanAddressesHistory(addresses) {\n    let index = 0, i = 0, minHeight = Number.MAX_SAFE_INTEGER;\n    for (let address of addresses){\n        i++;\n        let txHistory = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTransactionHistory(address);\n        if (!(0, $hgUW1$isNil)(txHistory)) {\n            index = i;\n            let heights = txHistory.filter((tx)=>tx.height > 0).map((h)=>h.height);\n            if (!(0, $hgUW1$isNil)(heights)) minHeight = Math.min(minHeight, ...heights);\n        }\n    }\n    return {\n        index: index > 0 ? index + 1 : 0,\n        height: minHeight == Number.MAX_SAFE_INTEGER ? 0 : minHeight\n    };\n}\nasync function $6f559318d8845d29$export$ef13479e8d3251d7(accountType, masterKey) {\n    if (accountType == 0) {\n        let defaultNexaAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, 0);\n        const defaultIndexes = await $6f559318d8845d29$export$4aeb2c92e53ab137(defaultNexaAccountKey);\n        if (defaultIndexes.rIndex < 0 && defaultIndexes.cIndex < 0) return 0;\n        else // account 0 was not empty\n        for(let index = 100;; index++){\n            const nexaAccountKey = $6f559318d8845d29$export$b3a12d67e2f5f8c9(masterKey, index);\n            const indexes = await $6f559318d8845d29$export$4aeb2c92e53ab137(nexaAccountKey);\n            if (indexes.rIndex < 0 && indexes.cIndex < 0) return index;\n        }\n    } else if (accountType == 1) {\n        // find the next unused vault\n        const lastUsedVault = await $6f559318d8845d29$var$findUsedVaultAccounts(masterKey);\n        return lastUsedVault + 1;\n    } else if (accountType == 2) {\n        // find the next unused dapp account\n        const lastUsedDappAccount = await $6f559318d8845d29$var$findUsedDappAccounts(masterKey);\n        return lastUsedDappAccount + 1;\n    } else throw new Error(\"Can not get next account index. Invalid accountType.\");\n}\nasync function $6f559318d8845d29$export$9c6f4f51acbc89b9(txHistory, myAddresses) {\n    let t = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTransaction(txHistory.tx_hash);\n    let outputs = t.vout.filter((utxo)=>!(0, $hgUW1$isNil)(utxo.scriptPubKey.addresses));\n    let isOutgoing = t.vin.length > 0 && myAddresses.includes(t.vin[0].addresses[0]);\n    let isIncoming = !isOutgoing || outputs.every((utxo)=>myAddresses.includes(utxo.scriptPubKey.addresses[0]));\n    let isConfirmed = t.height > 0;\n    let txEntry = {};\n    txEntry.txId = t.txid;\n    txEntry.txIdem = t.txidem;\n    txEntry.height = isConfirmed ? t.height : 0;\n    txEntry.time = isConfirmed ? t.time : (0, $d78972a39a5ae94f$export$78d0476e8d098ba7)();\n    txEntry.fee = t.fee_satoshi;\n    if (isOutgoing && isIncoming) {\n        txEntry.state = 'both';\n        txEntry.value = \"0\";\n        txEntry.payTo = \"Payment to yourself\";\n    } else if (isIncoming) {\n        txEntry.state = 'incoming';\n        let utxos = outputs.filter((utxo)=>myAddresses.includes(utxo.scriptPubKey.addresses[0]));\n        let amount = new (0, $hgUW1$jsbigdecimal)(0);\n        utxos.forEach((utxo)=>{\n            amount = amount.add(new (0, $hgUW1$jsbigdecimal)(utxo.value_satoshi));\n        });\n        txEntry.value = amount.getValue();\n        txEntry.payTo = utxos[0].scriptPubKey.addresses[0];\n    } else if (isOutgoing) {\n        txEntry.state = 'outgoing';\n        let utxos = outputs.filter((utxo)=>!myAddresses.includes(utxo.scriptPubKey.addresses[0]));\n        let amount = new (0, $hgUW1$jsbigdecimal)(0);\n        utxos.forEach((utxo)=>{\n            amount = amount.add(new (0, $hgUW1$jsbigdecimal)(utxo.value_satoshi));\n        });\n        txEntry.value = amount.getValue();\n        txEntry.payTo = utxos[0].scriptPubKey.addresses[0];\n    }\n    let [txType, txGroup, tokenAmount, extraGroup] = $6f559318d8845d29$var$classifyTokenTransaction(t.vin, outputs, txEntry.state, myAddresses);\n    txEntry.txGroupType = txType;\n    txEntry.token = txGroup;\n    txEntry.tokenAmount = tokenAmount;\n    txEntry.extraGroup = extraGroup;\n    return txEntry;\n}\nfunction $6f559318d8845d29$var$classifyTokenTransaction(vin, vout, txState, myAddresses) {\n    let groupInputs = vin.filter((input)=>!(0, $d78972a39a5ae94f$export$c8733ae29fb53302)(input.group));\n    let groupOutputs = vout.filter((output)=>!(0, $d78972a39a5ae94f$export$c8733ae29fb53302)(output.scriptPubKey.group));\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(groupInputs) && (0, $d78972a39a5ae94f$export$c8733ae29fb53302)(groupOutputs)) return [\n        0,\n        \"none\",\n        \"0\",\n        \"none\"\n    ];\n    let myGroupInputs = groupInputs.filter((input)=>myAddresses.includes(input.addresses[0]));\n    let myGroupOutputs = groupOutputs.filter((output)=>myAddresses.includes(output.scriptPubKey.addresses[0]));\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(myGroupInputs) && (0, $d78972a39a5ae94f$export$c8733ae29fb53302)(myGroupOutputs)) return [\n        0,\n        \"none\",\n        \"0\",\n        \"none\"\n    ];\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(groupInputs)) {\n        let group = myGroupOutputs.find((output)=>BigInt(output.scriptPubKey.groupQuantity) < 0n)?.scriptPubKey.group ?? \"none\";\n        return [\n            1,\n            group,\n            \"0\",\n            \"none\"\n        ];\n    }\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(groupOutputs)) {\n        if (txState === 'incoming') return [\n            0,\n            \"none\",\n            \"0\",\n            \"none\"\n        ];\n        let inputs = myGroupInputs.filter((input)=>BigInt(input.groupQuantity) > 0n);\n        if (!(0, $d78972a39a5ae94f$export$c8733ae29fb53302)(inputs)) {\n            let amount = new (0, $hgUW1$jsbigdecimal)(0);\n            inputs.forEach((utxo)=>{\n                amount = amount.add(new (0, $hgUW1$jsbigdecimal)(utxo.groupQuantity));\n            });\n            let group = inputs[0].group;\n            let extraGroup = myGroupInputs.find((input)=>BigInt(input.groupQuantity) < 0n && inputs[0].group != input.group)?.group ?? \"none\";\n            return [\n                3,\n                group,\n                amount.getValue(),\n                extraGroup\n            ];\n        }\n        let group = myGroupInputs.find((input)=>BigInt(input.groupQuantity) < 0n)?.group ?? \"none\";\n        let extraGroup = myGroupInputs.find((input)=>BigInt(input.groupQuantity) < 0n && group != input.group)?.group ?? \"none\";\n        return [\n            3,\n            group,\n            \"0\",\n            extraGroup\n        ];\n    }\n    let tokenInputs = groupInputs.filter((input)=>BigInt(input.groupQuantity) > 0n);\n    let tokenOutputs = groupOutputs.filter((output)=>BigInt(output.scriptPubKey.groupQuantity) > 0n);\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(tokenInputs) && (0, $d78972a39a5ae94f$export$c8733ae29fb53302)(tokenOutputs)) {\n        let group = groupInputs.find((input)=>BigInt(input.groupQuantity) < 0n)?.group ?? \"none\";\n        let extraGroup = groupOutputs.find((output)=>BigInt(output.scriptPubKey.groupQuantity) < 0n && group != output.scriptPubKey.group)?.scriptPubKey.group ?? \"none\";\n        return [\n            4,\n            extraGroup !== 'none' ? extraGroup : group,\n            \"0\",\n            extraGroup !== 'none' ? group : extraGroup\n        ];\n    }\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(tokenInputs)) {\n        let group = tokenOutputs[0].scriptPubKey.group;\n        let amount = new (0, $hgUW1$jsbigdecimal)(0);\n        tokenOutputs.forEach((utxo)=>{\n            amount = amount.add(new (0, $hgUW1$jsbigdecimal)(utxo.scriptPubKey.groupQuantity));\n        });\n        let extraGroup = groupInputs.find((input)=>BigInt(input.groupQuantity) < 0n && group != input.group)?.group ?? \"none\";\n        return [\n            2,\n            group,\n            amount.getValue(),\n            extraGroup\n        ];\n    }\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(tokenOutputs)) {\n        let group = tokenInputs[0].group;\n        let amount = new (0, $hgUW1$jsbigdecimal)(0);\n        tokenInputs.forEach((utxo)=>{\n            amount = amount.add(new (0, $hgUW1$jsbigdecimal)(utxo.groupQuantity));\n        });\n        let extraGroup = groupInputs.find((input)=>BigInt(input.groupQuantity) < 0n && group != input.group)?.group ?? \"none\";\n        return [\n            3,\n            group,\n            amount.getValue(),\n            extraGroup\n        ];\n    }\n    let outQuantitySum = tokenOutputs.map((output)=>BigInt(output.scriptPubKey.groupQuantity)).reduce((a, b)=>a + b, 0n);\n    let inQuantitySum = tokenInputs.map((input)=>BigInt(input.groupQuantity)).reduce((a, b)=>a + b, 0n);\n    if (outQuantitySum > inQuantitySum) {\n        let group = tokenOutputs[0].scriptPubKey.group;\n        let extraGroup = groupInputs.find((input)=>BigInt(input.groupQuantity) < 0n && group != input.group)?.group ?? \"none\";\n        return [\n            2,\n            group,\n            (outQuantitySum - inQuantitySum).toString(),\n            extraGroup\n        ];\n    }\n    if (inQuantitySum > outQuantitySum) {\n        let group = tokenInputs[0].group;\n        let extraGroup = groupInputs.find((input)=>BigInt(input.groupQuantity) < 0n && group != input.group)?.group ?? \"none\";\n        return [\n            3,\n            group,\n            (inQuantitySum - outQuantitySum).toString(),\n            extraGroup\n        ];\n    }\n    let group = tokenOutputs[0].scriptPubKey.group;\n    let amount = \"\";\n    if (txState === 'incoming') amount = tokenOutputs.filter((output)=>myAddresses.includes(output.scriptPubKey.addresses[0])).map((output)=>BigInt(output.scriptPubKey.groupQuantity)).reduce((a, b)=>a + b, 0n).toString();\n    else if (txState === 'outgoing') amount = tokenOutputs.filter((output)=>!myAddresses.includes(output.scriptPubKey.addresses[0])).map((output)=>BigInt(output.scriptPubKey.groupQuantity)).reduce((a, b)=>a + b, 0n).toString();\n    else amount = \"0\";\n    return [\n        5,\n        group,\n        amount,\n        \"none\"\n    ];\n}\n\n\n\n\n\n\nclass $441c371114e3ba96$export$94f569bf4eb0f6f6 {\n    static getAllKeys(keys) {\n        return keys.receiveKeys.concat(keys.changeKeys);\n    }\n    static getAllAddresses(keys) {\n        return $441c371114e3ba96$export$94f569bf4eb0f6f6.getAllKeys(keys).map((key)=>key.address);\n    }\n}\n\n\n\n\n\nfunction $59b5736a17e7320d$export$7f7cffd29bf2d96d(authFlags, permission) {\n    if (authFlags > 0) return false;\n    let flags = BigInt.asUintN(64, BigInt(authFlags));\n    switch(permission){\n        case 'authorise':\n            return (0, $hgUW1$GroupToken).allowsRenew(flags);\n        case 'mint':\n            return (0, $hgUW1$GroupToken).allowsMint(flags);\n        case 'melt':\n            return (0, $hgUW1$GroupToken).allowsMelt(flags);\n        case 'rescript':\n            return (0, $hgUW1$GroupToken).allowsRescript(flags);\n        case 'subgroup':\n            return (0, $hgUW1$GroupToken).allowsSubgroup(flags);\n        default:\n            return false;\n    }\n}\nfunction $59b5736a17e7320d$export$636fb0b03b94ac81(authFlags, withSubgroup = true) {\n    if (authFlags > 0) return 0n;\n    let flags = BigInt.asUintN(64, BigInt(authFlags));\n    let newFlags = (0, $hgUW1$GroupToken).authFlags.AUTHORITY;\n    if ((0, $hgUW1$GroupToken).allowsRenew(flags)) newFlags |= (0, $hgUW1$GroupToken).authFlags.BATON;\n    if ((0, $hgUW1$GroupToken).allowsMint(flags)) newFlags |= (0, $hgUW1$GroupToken).authFlags.MINT;\n    if ((0, $hgUW1$GroupToken).allowsMelt(flags)) newFlags |= (0, $hgUW1$GroupToken).authFlags.MELT;\n    if ((0, $hgUW1$GroupToken).allowsRescript(flags)) newFlags |= (0, $hgUW1$GroupToken).authFlags.RESCRIPT;\n    if ((0, $hgUW1$GroupToken).allowsSubgroup(flags) && withSubgroup) newFlags |= (0, $hgUW1$GroupToken).authFlags.SUBGROUP;\n    return newFlags;\n}\nfunction $59b5736a17e7320d$export$e240c810a53c3a0c(perms) {\n    let newFlags = (0, $hgUW1$GroupToken).authFlags.AUTHORITY;\n    for (let perm of perms)switch(perm){\n        case 'authorise':\n            newFlags |= (0, $hgUW1$GroupToken).authFlags.BATON;\n            break;\n        case 'mint':\n            newFlags |= (0, $hgUW1$GroupToken).authFlags.MINT;\n            break;\n        case 'melt':\n            newFlags |= (0, $hgUW1$GroupToken).authFlags.MELT;\n            break;\n        case 'rescript':\n            newFlags |= (0, $hgUW1$GroupToken).authFlags.RESCRIPT;\n            break;\n        case 'subgroup':\n            newFlags |= (0, $hgUW1$GroupToken).authFlags.SUBGROUP;\n            break;\n    }\n    return newFlags;\n}\n\n\n/** Maximum number of inputs/outputs allowed in a single transaction */ const $3e8a638e2275dab4$var$MAX_INPUTS_OUTPUTS = 250;\nasync function $3e8a638e2275dab4$export$afd979971a55acfc(txBuilder, keys, totalTxValue, options) {\n    let rKeys = keys.receiveKeys.filter((k)=>BigInt(k.balance) > 0n);\n    let cKeys = keys.changeKeys.filter((k)=>BigInt(k.balance) > 0n);\n    let allKeys = rKeys.concat(cKeys);\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(allKeys)) throw new Error(\"Not enough Nexa balance.\");\n    let usedKeys = new Map();\n    let origAmount = options.isConsolidate ? 0 : Number(totalTxValue);\n    for (let key of allKeys){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getNexaUtxos(key.address);\n        for (let utxo of utxos){\n            let input = {\n                outpoint: utxo.outpoint_hash,\n                address: key.address,\n                satoshis: utxo.value,\n                templateData: options.templateData\n            };\n            txBuilder.from(input);\n            if (!usedKeys.has(key.address)) usedKeys.set(key.address, key.key.privateKey);\n            if (options.isConsolidate) {\n                txBuilder.change(options.toChange ?? keys.receiveKeys[keys.receiveKeys.length - 1].address);\n                if (txBuilder.transaction.inputs.length > $3e8a638e2275dab4$var$MAX_INPUTS_OUTPUTS) return Array.from(usedKeys.values());\n            } else {\n                let tx = txBuilder.transaction;\n                if (tx.inputs.length > $3e8a638e2275dab4$var$MAX_INPUTS_OUTPUTS) throw new Error(\"Too many inputs. Consider consolidate transactions or reduce the send amount.\");\n                let unspent = tx.getUnspentValue();\n                if (unspent < 0n) continue;\n                if (unspent == 0n && options.feeFromAmount) {\n                    let txFee = tx.estimateRequiredFee();\n                    tx.updateOutputAmount(0, origAmount - txFee);\n                    return Array.from(usedKeys.values());\n                }\n                const changeAddress = options.toChange ?? (keys.changeKeys.length > 0 ? keys.changeKeys[keys.changeKeys.length - 1].address : keys.receiveKeys[keys.receiveKeys.length - 1].address);\n                txBuilder.change(changeAddress);\n                if (options.feeFromAmount) {\n                    let hasChange = tx.getChangeOutput();\n                    let txFee = tx.estimateRequiredFee();\n                    tx.updateOutputAmount(0, origAmount - txFee);\n                    // edge case where change added after update\n                    if (!hasChange && tx.getChangeOutput()) {\n                        txFee = tx.estimateRequiredFee();\n                        tx.updateOutputAmount(0, origAmount - txFee);\n                    }\n                }\n                // check again after change output manipulation\n                if (tx.getUnspentValue() < tx.estimateRequiredFee()) continue;\n                return Array.from(usedKeys.values());\n            }\n        }\n    }\n    if (options.isConsolidate) {\n        if (usedKeys.size > 0) return Array.from(usedKeys.values());\n        throw new Error(\"Not enough Nexa balance.\");\n    }\n    let err = {\n        errorMsg: \"Not enough Nexa balance.\",\n        amount: (0, $hgUW1$UnitUtils).formatNEXA(txBuilder.transaction.outputs[0].value),\n        fee: (0, $hgUW1$UnitUtils).formatNEXA(txBuilder.transaction.estimateRequiredFee())\n    };\n    throw new Error(JSON.stringify(err));\n}\nasync function $3e8a638e2275dab4$export$931e37acdaa22dcf(txBuilder, keys, token, outTokenAmount) {\n    let tokenHex = (0, $d78972a39a5ae94f$export$254a5c7330bbfd41)(token);\n    let rKeys = keys.receiveKeys.filter((k)=>Object.keys(k.tokensBalance).includes(tokenHex));\n    let cKeys = keys.changeKeys.filter((k)=>Object.keys(k.tokensBalance).includes(tokenHex));\n    let allKeys = rKeys.concat(cKeys);\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(allKeys)) throw new Error(\"Not enough token balance.\");\n    let usedKeys = new Map();\n    let inTokenAmount = 0n;\n    for (let key of allKeys){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTokenUtxos(key.address, token);\n        for (let utxo of utxos){\n            if (utxo.token_amount < 0) continue;\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: key.address,\n                satoshis: utxo.value,\n                groupId: utxo.group,\n                groupAmount: BigInt(utxo.token_amount)\n            });\n            inTokenAmount = inTokenAmount + BigInt(utxo.token_amount);\n            if (!usedKeys.has(key.address)) usedKeys.set(key.address, key.key.privateKey);\n            if (inTokenAmount > (0, $d78972a39a5ae94f$export$8ba128bc85947a2a)) throw new Error(\"Token inputs exceeded max amount. Consider sending in small chunks\");\n            if (txBuilder.transaction.inputs.length > $3e8a638e2275dab4$var$MAX_INPUTS_OUTPUTS) throw new Error(\"Too many inputs. Consider consolidating transactions or reduce the send amount.\");\n            if (inTokenAmount == outTokenAmount) return Array.from(usedKeys.values());\n            if (inTokenAmount > outTokenAmount) {\n                // change\n                const tokenChangeAddress = keys.changeKeys.length > 0 ? keys.changeKeys[keys.changeKeys.length - 1].address : keys.receiveKeys[keys.receiveKeys.length - 1].address;\n                txBuilder.to(tokenChangeAddress, (0, $hgUW1$Transaction).DUST_AMOUNT, token, inTokenAmount - outTokenAmount);\n                return Array.from(usedKeys.values());\n            }\n        }\n    }\n    throw new Error(\"Not enough token balance\");\n}\nasync function $3e8a638e2275dab4$export$d7f2b844e1d59768(txBuilder, keys, opReturnData, network) {\n    // TODO validate opreturn data\n    const allKeys = (0, $441c371114e3ba96$export$94f569bf4eb0f6f6).getAllKeys(keys);\n    let outpoint = '';\n    let usedKeys = [];\n    let signKey = undefined;\n    for (let key of allKeys){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getNexaUtxos(key.address);\n        for (let utxo of utxos){\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: key.address,\n                satoshis: utxo.value\n            });\n            if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(outpoint)) {\n                outpoint = utxo.outpoint_hash;\n                let id = (0, $hgUW1$GroupToken).findGroupId(outpoint, Buffer.from(opReturnData, 'hex'), (0, $hgUW1$GroupToken).authFlags.ACTIVE_FLAG_BITS);\n                const groupId = new (0, $hgUW1$Address)(id.hashBuffer, network, (0, $hgUW1$AddressType).GroupIdAddress).toString();\n                txBuilder.to(keys.receiveKeys.at(-1).address, (0, $hgUW1$Transaction).DUST_AMOUNT, groupId, (0, $hgUW1$GroupToken).authFlags.ACTIVE_FLAG_BITS | id.nonce);\n                signKey = key.key.privateKey;\n                usedKeys.push(signKey);\n                return usedKeys;\n            }\n        }\n    }\n    throw new Error(\"Not enough Nexa balance.\");\n}\nasync function $3e8a638e2275dab4$export$48a48877d6df17e9(txBuilder, keys, outpoint) {\n    let utxo = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getUtxo(outpoint);\n    let address = utxo.addresses[0];\n    txBuilder.from({\n        outpoint: outpoint,\n        address: address,\n        satoshis: utxo.amount\n    });\n    let allKeys = (0, $441c371114e3ba96$export$94f569bf4eb0f6f6).getAllKeys(keys);\n    let addrKey = allKeys.find((k)=>k.address === address);\n    if (!addrKey) throw new Error('UTXO associated key not found in the wallet');\n    return [\n        addrKey.key.privateKey\n    ];\n}\nasync function $3e8a638e2275dab4$export$1dfa5d829fc95097(txBuilder, keys, token, perm, subgroup = '', subgroupAddr = '', quantity) {\n    let allKeys = (0, $441c371114e3ba96$export$94f569bf4eb0f6f6).getAllKeys(keys);\n    for (let key of allKeys){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTokenUtxos(key.address, token);\n        for (let utxo of utxos){\n            if (!(0, $59b5736a17e7320d$export$7f7cffd29bf2d96d)(utxo.token_amount, perm)) continue;\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: key.address,\n                satoshis: utxo.value\n            });\n            if (perm === 'subgroup') {\n                const subgroupQuantity = quantity ?? (0, $59b5736a17e7320d$export$636fb0b03b94ac81)(utxo.token_amount, false);\n                txBuilder.to(subgroupAddr, (0, $hgUW1$Transaction).DUST_AMOUNT, subgroup, subgroupQuantity);\n            }\n            // if renew flag included, we don't want to burn it\n            if ((0, $hgUW1$GroupToken).allowsRenew(BigInt.asUintN(64, BigInt(utxo.token_amount)))) {\n                const authChangeAddress = keys.changeKeys.length > 0 ? keys.changeKeys[keys.changeKeys.length - 1].address : keys.receiveKeys[keys.receiveKeys.length - 1].address;\n                txBuilder.to(authChangeAddress, (0, $hgUW1$Transaction).DUST_AMOUNT, token, (0, $59b5736a17e7320d$export$636fb0b03b94ac81)(utxo.token_amount));\n            }\n            return [\n                key.key.privateKey\n            ];\n        }\n    }\n    throw new Error(\"The requested authority not found\");\n}\nasync function $3e8a638e2275dab4$export$28a843ca046a6b3f(txBuilder, keys, token, perms, toAddr) {\n    let allKeys = (0, $441c371114e3ba96$export$94f569bf4eb0f6f6).getAllKeys(keys);\n    let usedKeys = [];\n    let reqiredPerms = new Set(perms);\n    reqiredPerms.add('authorise');\n    for (let key of allKeys){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTokenUtxos(key.address, token);\n        for (let utxo of utxos){\n            if (utxo.token_amount > 0) continue;\n            let found = false;\n            for (let perm of reqiredPerms)if ((0, $59b5736a17e7320d$export$7f7cffd29bf2d96d)(utxo.token_amount, perm)) {\n                reqiredPerms.delete(perm);\n                found = true;\n            }\n            if (!found) continue;\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: key.address,\n                satoshis: utxo.value\n            });\n            usedKeys.push(key.key.privateKey);\n            // duplicate\n            const duplicateAddress = toAddr != null ? toAddr : keys.changeKeys.length > 0 ? keys.changeKeys[keys.changeKeys.length - 1].address : keys.receiveKeys[keys.receiveKeys.length - 1].address;\n            txBuilder.to(duplicateAddress, (0, $hgUW1$Transaction).DUST_AMOUNT, token, (0, $59b5736a17e7320d$export$636fb0b03b94ac81)(utxo.token_amount));\n            if (reqiredPerms.size === 0) return usedKeys;\n        }\n    }\n    throw new Error(\"The required authorities not found\");\n}\n\n\n\n\n\n\n\nclass $329d65a0aed426f1$export$bba690fb5c12ba04 {\n    /**\n     * Creates a new TransactionCreator instance\n     * @param tx Optional existing TransactionBuilder, hex string, or buffer\n     */ constructor(tx){\n        /** Array of async functions to execute when building the transaction */ this._builder = [];\n        /** Total value of NEXA being sent in this transaction */ this._totalValue = BigInt(0);\n        /** Network this transaction will be broadcast on */ this._network = (0, $hgUW1$Networks).mainnet;\n        /** Transaction options for customizing behavior */ this._txOptions = {};\n        if (tx instanceof (0, $hgUW1$TransactionBuilder)) this.transactionBuilder = tx;\n        this.tokens = new Set();\n        this.transactionBuilder = new (0, $hgUW1$TransactionBuilder)();\n    }\n    /**\n     * Parse transaction from hex string with common logic\n     * @param tx Transaction hex string\n     * @returns This instance for chaining\n     */ parseTxHex(tx) {\n        // Clear any existing builder operations since we're dealing with a pre-built transaction\n        this.builder = [];\n        // Add the parsing operation to the builder queue\n        this.builder.push(async ()=>{\n            try {\n                const txBuilder = new (0, $hgUW1$TransactionBuilder)(tx);\n                const newTxBuilder = new (0, $hgUW1$TransactionBuilder)();\n                const oldInputs = txBuilder.transaction.inputs;\n                // Reconstruct inputs with proper script template data if needed\n                for(let i = 0; i < oldInputs.length; i++){\n                    const input = oldInputs[i];\n                    const utxo = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getUtxo(input.outpoint.toString('hex'));\n                    const scriptPubkey = (0, $hgUW1$Script).fromHex(utxo.scriptpubkey);\n                    if (scriptPubkey.isScriptTemplateOut()) {\n                        const scriptSig = input.scriptSig;\n                        newTxBuilder.transaction.addInput(new (0, $hgUW1$ScriptTemplateInput)({\n                            amount: input.amount,\n                            outpoint: input.outpoint.toString('hex'),\n                            scriptSig: input.scriptSig,\n                            templateData: {\n                                templateScript: (0, $hgUW1$BufferUtils).isHashBuffer(scriptPubkey.getTemplateHash()) ? (0, $hgUW1$Script).fromBuffer(scriptSig.chunks[0].buf) : (0, $hgUW1$Script).empty(),\n                                constraintScript: (0, $hgUW1$BufferUtils).isHashBuffer(scriptPubkey.getConstraintHash()) ? (0, $hgUW1$Script).fromBuffer(scriptSig.chunks[1].buf) : (0, $hgUW1$Opcode).OP_FALSE\n                            },\n                            output: {\n                                type: input.type,\n                                value: utxo.amount,\n                                scriptPubKey: utxo.scriptpubkey\n                            }\n                        }));\n                    } else // For non-template inputs, add them normally\n                    newTxBuilder.from({\n                        outpoint: input.outpoint.toString('hex'),\n                        satoshis: input.amount,\n                        address: utxo.addresses[0],\n                        scriptPubKey: utxo.scriptpubkey\n                    });\n                    // Hook for subclasses to handle input-specific logic (like key management)\n                    await this.handleParsedInput(input, utxo, i);\n                }\n                // Copy the outputs from the original transaction\n                newTxBuilder.transaction.outputs = txBuilder.transaction.outputs;\n                this.transactionBuilder = newTxBuilder;\n                // Hook for subclasses to perform post-processing\n                await this.handleParsingComplete();\n            } catch (error) {\n                console.error('parseTxHex: Error parsing transaction:', error);\n                throw error;\n            }\n        });\n        return this;\n    }\n    /**\n     * Hook for subclasses to handle individual parsed inputs\n     * @param input The original input from the transaction\n     * @param utxo UTXO data for this input\n     * @param index Input index\n     */ async handleParsedInput(input, utxo, index) {\n    // Default implementation does nothing - subclasses can override\n    }\n    /**\n     * Hook for subclasses to perform post-processing after parsing is complete\n     */ async handleParsingComplete() {\n    // Default implementation does nothing - subclasses can override\n    }\n    /**\n     * Sets the network for this transaction\n     * @param network Network name or Networkish object\n     * @returns This instance for chaining\n     */ onNetwork(network) {\n        this.network = (0, $hgUW1$Networks).get(network);\n        return this;\n    }\n    /** Gets transaction options */ get txOptions() {\n        return this._txOptions;\n    }\n    /** Sets transaction options */ set txOptions(value) {\n        this._txOptions = value;\n    }\n    /** Gets the network for this transaction */ get network() {\n        return this._network;\n    }\n    /** Sets the network for this transaction */ set network(value) {\n        this._network = value;\n    }\n    /** Gets the builder function array */ get builder() {\n        return this._builder;\n    }\n    /** Sets the builder function array */ set builder(value) {\n        this._builder = value;\n    }\n    /** Gets the underlying transaction builder */ get transactionBuilder() {\n        return this._transactionBuilder;\n    }\n    /** Sets the underlying transaction builder */ set transactionBuilder(value) {\n        this._transactionBuilder = value;\n    }\n    /** Gets the set of token actions */ get tokens() {\n        return this._tokens;\n    }\n    /** Sets the set of token actions */ set tokens(value) {\n        this._tokens = value;\n    }\n    /** Gets the total NEXA value being sent */ get totalValue() {\n        return this._totalValue;\n    }\n    /** Sets the total NEXA value being sent */ set totalValue(value) {\n        this._totalValue = value;\n    }\n    /**\n     * Validates and creates a token action\n     * @param toAddr Destination address\n     * @param amount Amount to send\n     * @param token Token ID\n     * @param action Action type (mint, melt, send, etc.)\n     * @throws Error if validation fails\n     */ tokenAction(toAddr, amount, token, action) {\n        // Validate destination address\n        if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network) && !(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network, (0, $hgUW1$AddressType).PayToPublicKeyHash)) throw new Error('Invalid Address.');\n        // Validate amount ranges\n        if (token && BigInt(amount) < 1n || !token && (0, $hgUW1$parseInt)(amount) < (0, $hgUW1$Transaction).DUST_AMOUNT) throw new Error(\"The amount is too low.\");\n        if (token && BigInt(amount) > (0, $d78972a39a5ae94f$export$8ba128bc85947a2a) || !token && (0, $hgUW1$parseInt)(amount) > (0, $hgUW1$Transaction).MAX_MONEY) throw new Error(\"The amount is too high.\");\n        // Validate token ID\n        if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(token, this.network, (0, $hgUW1$AddressType).GroupIdAddress)) throw new Error('Invalid Token ID');\n        // Ensure tokens are sent to script template addresses\n        if ((0, $hgUW1$Address).getOutputType(toAddr) === 0) throw new Error('Token must be sent to script template address');\n        // Add output to transaction\n        this.transactionBuilder.to(toAddr, (0, $hgUW1$Transaction).DUST_AMOUNT, token, BigInt(amount));\n        // Record the token action\n        this.tokens.add({\n            token: token,\n            amount: BigInt(amount),\n            action: action\n        });\n    }\n    /**\n     * Configures transaction to consolidate UTXOs to a single address\n     * @param toAddr Address to consolidate funds to\n     * @returns This instance for chaining\n     */ consolidate(toAddr) {\n        this.builder.push(async ()=>{\n            if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network) && !(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network, (0, $hgUW1$AddressType).PayToPublicKeyHash)) throw new Error('Invalid Address.');\n            this._txOptions.isConsolidate = true;\n            this._txOptions.toChange = toAddr;\n        });\n        return this;\n    }\n    /**\n     * Configures transaction to deduct fee from the send amount\n     * @returns This instance for chaining\n     */ feeFromAmount() {\n        this.builder.push(async ()=>{\n            this._txOptions.feeFromAmount = true;\n        });\n        return this;\n    }\n    /**\n     * Adds a token send operation to the transaction\n     * @param toAddr Destination address\n     * @param amount Amount of tokens to send\n     * @param token Token ID\n     * @param dustAmount Optional dust amount for the output (defaults to Transaction.DUST_AMOUNT)\n     * @returns This instance for chaining\n     */ sendToToken(toAddr, amount, token, dustAmount = (0, $hgUW1$Transaction).DUST_AMOUNT) {\n        this.builder.push(async ()=>{\n            // Validate destination address\n            if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network) && !(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network, (0, $hgUW1$AddressType).PayToPublicKeyHash)) throw new Error('Invalid Address.');\n            // Validate amount ranges\n            if (BigInt(amount) < 1n) throw new Error(\"The amount is too low.\");\n            if (BigInt(amount) > (0, $d78972a39a5ae94f$export$8ba128bc85947a2a)) throw new Error(\"The amount is too high.\");\n            // Validate token ID\n            if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(token, this.network, (0, $hgUW1$AddressType).GroupIdAddress)) throw new Error('Invalid Token ID');\n            // Ensure tokens are sent to script template addresses\n            if ((0, $hgUW1$Address).getOutputType(toAddr) === 0) throw new Error('Token must be sent to script template address');\n            // Add output to transaction with configurable dust amount\n            this.transactionBuilder.to(toAddr, dustAmount, token, BigInt(amount));\n            // Record the token action\n            this.tokens.add({\n                token: token,\n                amount: BigInt(amount),\n                action: 'send'\n            });\n        });\n        return this;\n    }\n    /**\n     * Adds a NEXA send operation to the transaction\n     * @param toAddr Destination address\n     * @param amount Amount of NEXA to send\n     * @returns This instance for chaining\n     */ sendTo(toAddr, amount) {\n        this.builder.push(async ()=>{\n            if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network) && !(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network, (0, $hgUW1$AddressType).PayToPublicKeyHash)) throw new Error('Invalid Address.');\n            this.transactionBuilder.to(toAddr, amount);\n            this.totalValue = BigInt(this.totalValue + amount);\n        });\n        return this;\n    }\n    /**\n     * Adds a token authority renewal operation\n     * @param token Token ID to renew authority for\n     * @param perms Permissions to renew\n     * @param toAddr\n     * @returns This instance for chaining\n     */ renewAuthority(token, perms, toAddr) {\n        this.builder.push(async ()=>{\n            if (toAddr != null) {\n                if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network) && !(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(toAddr, this.network, (0, $hgUW1$AddressType).PayToPublicKeyHash)) throw new Error('Invalid Address.');\n            }\n            this.tokens.add({\n                token: token,\n                action: 'renew',\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                parentToken: undefined,\n                extraData: {\n                    perms: perms,\n                    address: toAddr\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Adds a token authority deletion operation\n     * @param token Token ID to delete authority for\n     * @param outpoint Outpoint of the authority to delete\n     * @returns This instance for chaining\n     */ deleteAuthority(token, outpoint) {\n        this.builder.push(async ()=>{\n            this.tokens.add({\n                token: token,\n                action: 'delete',\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                parentToken: undefined,\n                extraData: {\n                    outpoint: outpoint\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Creates a legacy token (not implemented)\n     * @returns This instance for chaining\n     */ legacyToken(name, ticker, decimals, docUrl, docHash) {\n        this.builder.push(async ()=>{\n            const opReturn = (0, $hgUW1$ScriptFactory).buildTokenDescriptionLegacy(ticker, name, docUrl, docHash, decimals);\n            this.transactionBuilder.addData(opReturn, true);\n            this.tokens.add({\n                action: 'group',\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                extraData: {\n                    opReturnData: opReturn.toHex()\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Creates a legacy group (not implemented)\n     * @returns This instance for chaining\n     */ legacyGroup(name, ticker, docUrl, docHash) {\n        this.builder.push(async ()=>{\n            const opReturn = (0, $hgUW1$ScriptFactory).buildTokenDescriptionLegacy(ticker, name, docUrl, docHash);\n            this.transactionBuilder.addData(opReturn, true);\n            this.tokens.add({\n                action: 'group',\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                extraData: {\n                    opReturnData: opReturn.toHex()\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Creates a token with metadata\n     * @param name Token name\n     * @param ticker Token ticker symbol\n     * @param decimals Number of decimal places\n     * @param docUrl URL to token documentation\n     * @param docHash Hash of token documentation\n     * @returns This instance for chaining\n     */ token(name, ticker, decimals, docUrl, docHash) {\n        this.builder.push(async ()=>{\n            const opReturn = (0, $hgUW1$ScriptFactory).buildTokenDescription(ticker, name, docUrl, docHash, decimals);\n            this.transactionBuilder.addData(opReturn, true);\n            this.tokens.add({\n                action: 'group',\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                extraData: {\n                    opReturnData: opReturn.toHex()\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Creates an NFT collection with metadata\n     * @param name Collection name\n     * @param ticker Collection ticker symbol\n     * @param docUrl URL to collection documentation\n     * @param docHash Hash of collection documentation\n     * @returns This instance for chaining\n     */ collection(name, ticker, docUrl, docHash) {\n        this.builder.push(async ()=>{\n            const opReturn = (0, $hgUW1$ScriptFactory).buildNFTCollectionDescription(ticker, name, docUrl, docHash);\n            this.transactionBuilder.addData(opReturn, true);\n            this.tokens.add({\n                action: 'group',\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                extraData: {\n                    opReturnData: opReturn.toHex()\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Creates an NFT within a collection\n     * @param parent Parent collection token ID\n     * @param zipUrl URL to NFT content ZIP file\n     * @param zipHash Hash of NFT content ZIP file\n     * @returns This instance for chaining\n     */ nft(parent, zipUrl, zipHash) {\n        this.builder.push(async ()=>{\n            // add op_return for the nft\n            let opReturn = (0, $hgUW1$ScriptFactory).buildNFTDescription(zipUrl, zipHash);\n            this.transactionBuilder.addData(opReturn, true);\n            // generate subgroup ID\n            const subGroupBuffer = (0, $hgUW1$GroupToken).generateSubgroupId(parent, zipHash);\n            const subGroupAddress = new (0, $hgUW1$Address)(subGroupBuffer, (0, $hgUW1$Networks).get(this.network) || (0, $hgUW1$Networks).mainnet, (0, $hgUW1$AddressType).GroupIdAddress).toString();\n            this.tokens.add({\n                token: subGroupAddress,\n                parentToken: parent,\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                action: 'subgroup',\n                extraData: {\n                    quantity: 1n\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Creates an SFT (Semi-Fungible Token) within a collection with specified quantity\n     * @param parent Parent collection token ID\n     * @param zipUrl URL to SFT content ZIP file\n     * @param zipHash Hash of SFT content ZIP file\n     * @param quantity Quantity of SFTs to create\n     * @returns This instance for chaining\n     */ sft(parent, zipUrl, zipHash, quantity) {\n        this.builder.push(async ()=>{\n            // add op_return for the sft\n            let opReturn = (0, $hgUW1$ScriptFactory).buildNFTDescription(zipUrl, zipHash);\n            this.transactionBuilder.addData(opReturn, true);\n            // generate subgroup ID\n            const subGroupBuffer = (0, $hgUW1$GroupToken).generateSubgroupId(parent, zipHash);\n            const subGroupAddress = new (0, $hgUW1$Address)(subGroupBuffer, (0, $hgUW1$Networks).get(this.network) || (0, $hgUW1$Networks).mainnet, (0, $hgUW1$AddressType).GroupIdAddress).toString();\n            this.tokens.add({\n                token: subGroupAddress,\n                parentToken: parent,\n                amount: BigInt((0, $hgUW1$Transaction).DUST_AMOUNT),\n                action: 'subgroup',\n                extraData: {\n                    quantity: quantity\n                }\n            });\n        });\n        return this;\n    }\n    /**\n     * Adds an OP_RETURN output to the transaction\n     * @param data Data to include in the OP_RETURN\n     * @param isFullScript Whether the data is already a complete script\n     * @returns This instance for chaining\n     */ addOpReturn(data, isFullScript = false) {\n        this.builder.push(async ()=>{\n            let script = isFullScript ? new (0, $hgUW1$Script)(data) : (0, $hgUW1$ScriptFactory).buildDataOut(data);\n            let output = new (0, $hgUW1$Output)(0, script);\n            this.transactionBuilder.transaction.addOutput(output);\n        });\n        return this;\n    }\n    /**\n     * Adds nexa contract constraint to spending inputs\n     * @param templateScript\n     * @param constraintScript\n     * @param visibleArgs\n     * @param pubKey\n     * @returns This instance for chaining\n     */ addContract(templateScript, constraintScript, visibleArgs, pubKey) {\n        this.builder.push(async ()=>{\n            this.txOptions.templateData = {\n                publicKey: pubKey,\n                templateScript: templateScript,\n                constraintScript: constraintScript,\n                visibleArgs: visibleArgs\n            };\n        });\n        return this;\n    }\n    /**\n     * Builds the transaction by executing all queued operations\n     * @returns Promise resolving to the serialized transaction hex\n     */ async build() {\n        for (const task of this.builder)await task();\n        return this.transactionBuilder.transaction.serialize({\n            disableAll: true\n        });\n    }\n}\n\n\nclass $d71d9063d6876a10$export$2e2bcd8739ae039 extends (0, $329d65a0aed426f1$export$bba690fb5c12ba04) {\n    constructor(fromAccount, tx){\n        super(tx), this._keysToSign = [];\n        this._account = fromAccount;\n        this.validateAccount();\n    }\n    fromAccount(fromAccount) {\n        this._account = fromAccount;\n        return this;\n    }\n    parseTxHex(tx) {\n        // Call parent's parseTxHex which handles the common parsing logic\n        return super.parseTxHex(tx);\n    }\n    /**\n     * Handle wallet-specific logic for each parsed input (find and store private keys)\n     */ async handleParsedInput(input, utxo, index) {\n        // Find and store the private key for this input\n        const foundKey = this.findPrivateKeyFromAddress(utxo.addresses[0]);\n        if (foundKey) this._keysToSign.push(foundKey.key.privateKey);\n    }\n    /**\n     * Handle wallet-specific post-processing after parsing is complete\n     */ async handleParsingComplete() {\n        // If no keys found, use the primary account key as fallback\n        if (this._keysToSign.length == 0) this._keysToSign.push(this._account.getPrimaryAddressKey().key.privateKey);\n    }\n    parseTxBuffer(tx) {\n        // Clear any existing builder operations since we're dealing with a pre-built transaction\n        this.builder = [];\n        // For buffer, we can parse immediately since it doesn't require async operations\n        this.transactionBuilder = new (0, $hgUW1$TransactionBuilder)(tx);\n        // Extract all possible keys from the account that might be needed for signing\n        // Since we don't have UTXO data, we'll add all account keys\n        const addresses = this._account.getAddresses();\n        for (const addressKey of addresses)if (!this._keysToSign.includes(addressKey.key.privateKey)) this._keysToSign.push(addressKey.key.privateKey);\n        // If no keys found, use the primary account key as fallback\n        if (this._keysToSign.length == 0) this._keysToSign.push(this._account.getPrimaryAddressKey().key.privateKey);\n        return this;\n    }\n    mint(token, amount) {\n        this.builder.push(async ()=>{\n            let toAddr = this._account.accountKeys.receiveKeys.at(-1).address;\n            this.tokenAction(toAddr, amount, token, 'mint');\n        });\n        return this;\n    }\n    melt(token, amount) {\n        this.builder.push(async ()=>{\n            let toAddr = this._account.accountKeys.receiveKeys.at(-1).address;\n            this.tokenAction(toAddr, amount, token, 'melt');\n        });\n        return this;\n    }\n    populate() {\n        this.validateAccount();\n        this.builder.push(async ()=>{\n            let tK = [];\n            let nK = [];\n            if (this.tokens.size > 0) for (const tokenAction of this.tokens){\n                if (tokenAction.action == 'mint' || tokenAction.action == 'melt') tK = tK.concat(await (0, $3e8a638e2275dab4$export$1dfa5d829fc95097)(this.transactionBuilder, this._account.accountKeys, tokenAction.token, tokenAction.action));\n                else if (tokenAction.action == 'group') tK = tK.concat(await (0, $3e8a638e2275dab4$export$d7f2b844e1d59768)(this.transactionBuilder, this._account.accountKeys, tokenAction.extraData?.opReturnData, this.network));\n                else if (tokenAction.action == 'subgroup') tK = tK.concat(await (0, $3e8a638e2275dab4$export$1dfa5d829fc95097)(this.transactionBuilder, this._account.accountKeys, tokenAction.parentToken, 'subgroup', tokenAction.token, this._account.accountKeys.receiveKeys.at(-1).address, tokenAction.extraData?.quantity));\n                else if (tokenAction.action == 'renew') tK = tK.concat(await (0, $3e8a638e2275dab4$export$28a843ca046a6b3f)(this.transactionBuilder, this._account.accountKeys, tokenAction.token, tokenAction.extraData.perms, tokenAction.extraData.address));\n                else if (tokenAction.action == 'delete') tK = tK.concat(await (0, $3e8a638e2275dab4$export$48a48877d6df17e9)(this.transactionBuilder, this._account.accountKeys, tokenAction.extraData.outpoint));\n                else tK = tK.concat(await (0, $3e8a638e2275dab4$export$931e37acdaa22dcf)(this.transactionBuilder, this._account.accountKeys, tokenAction.token, tokenAction.amount));\n                this._keysToSign.concat(tK);\n            }\n            nK = nK.concat(await (0, $3e8a638e2275dab4$export$afd979971a55acfc)(this.transactionBuilder, this._account.accountKeys, this.totalValue, this.txOptions));\n            this._keysToSign = tK.concat(nK);\n        });\n        return this;\n    }\n    sign() {\n        this.builder.push(async ()=>{\n            const blockHeight = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getBlockTip();\n            this.transactionBuilder.lockUntilBlockHeight(blockHeight.height);\n            // Process each transaction input using placeholder-based signing\n            const inputs = this.transactionBuilder.transaction.inputs;\n            for(let inputIndex = 0; inputIndex < inputs.length; inputIndex++){\n                const input = inputs[inputIndex];\n                // Analyze the scriptSig to determine signing strategy\n                const analysis = this.analyzeScriptSig(input.scriptSig);\n                if (analysis.strategy === 'skip') {\n                    console.log(`Skipping input ${inputIndex} - no placeholder found`);\n                    continue;\n                }\n                // Determine sighash type from placeholder bytes (or default to SIGHASH_ALL)\n                const sighashType = analysis.sighashType || new (0, $149c1bd638913645$re_export$SighashType)();\n                // Try signing with all available keys until one works\n                let signed = false;\n                const allAddressKeys = this._account.getAddresses();\n                for (const addressKey of allAddressKeys)try {\n                    // Sign the input\n                    const sig = (0, $hgUW1$TxSigner).sign(this.transactionBuilder.transaction, inputIndex, sighashType, this.transactionBuilder.transaction.inputs[inputIndex].getSubscript(), addressKey.key.privateKey);\n                    // Create signature buffer (Schnorr signature for Nexa)\n                    const signatureBuffer = new (0, $hgUW1$TxSignature)({\n                        publicKey: addressKey.key.publicKey,\n                        sigType: sighashType,\n                        signature: sig,\n                        subscript: this.transactionBuilder.transaction.inputs[inputIndex].getSubscript(),\n                        inputIndex: inputIndex\n                    }).toTxSatisfier();\n                    if (analysis.strategy === 'sign_all') this.transactionBuilder.signInput(inputIndex, addressKey.key.privateKey, sighashType);\n                    else if (analysis.strategy === 'replace_placeholder' && analysis.placeholderIndex !== undefined) {\n                        // Handle script template with mixed satisfier elements\n                        if (input instanceof (0, $hgUW1$ScriptTemplateInput) && analysis.satisfierElements && analysis.satisfierElements.length > 0) {\n                            // Reconstruct script template with preserved satisfier elements plus signature\n                            const templateInput = input;\n                            const allSatisfierElements = [\n                                ...analysis.satisfierElements\n                            ];\n                            // Insert signature at the correct position (where placeholder was)\n                            const relativeIndex = analysis.placeholderIndex - 2; // Adjust for template and constraint chunks\n                            allSatisfierElements.splice(relativeIndex, 0, signatureBuffer);\n                            this.transactionBuilder.transaction.inputs[inputIndex].scriptSig = this.buildScriptSig(templateInput.templateScript, templateInput.constraintScript, allSatisfierElements);\n                        } else if (input instanceof (0, $hgUW1$ScriptTemplateInput)) {\n                            // Script template with only placeholder (no other satisfier elements)\n                            const templateInput = input;\n                            this.transactionBuilder.transaction.inputs[inputIndex].scriptSig = this.buildScriptSig(templateInput.templateScript, templateInput.constraintScript, [\n                                signatureBuffer\n                            ]);\n                        } else // P2PKH script: signature placeholder + public key\n                        this.transactionBuilder.transaction.inputs[inputIndex].scriptSig = (0, $hgUW1$ScriptFactory).buildPublicKeyHashIn(addressKey.key.publicKey, sig);\n                    }\n                    signed = true;\n                    break;\n                } catch (error) {\n                // console.log(`Key for address ${addressKey.address} failed to sign input ${inputIndex}:`, (error as Error).message)\n                }\n                signed;\n            }\n        });\n        return this;\n    }\n    buildSatisfier(elements) {\n        let script = new (0, $hgUW1$Script)();\n        for (const element of elements)script = script.add(element);\n        return script;\n    }\n    buildScriptSig(template, constraint, satisfierElements) {\n        const satisfierScript = this.buildSatisfier(satisfierElements);\n        return (0, $hgUW1$ScriptFactory).buildScriptTemplateIn(template, constraint, satisfierScript);\n    }\n    /**\n     * Check if a buffer is a 64-byte placeholder (all zeros)\n     * @param buf - Buffer to check\n     * @returns true if it's a 64-byte zero placeholder\n     */ isPlaceholder(buf) {\n        if (!buf || buf.length < 64) return false;\n        const placeholderBytes = Buffer.alloc(64, 0);\n        return buf.subarray(0, 64).equals(placeholderBytes);\n    }\n    /**\n     * Extract sighash type from placeholder buffer (bytes after the 64-byte placeholder)\n     * @param buf - Buffer that may contain sighash type after placeholder\n     * @returns SighashType or null if using default SIGHASH_ALL (empty sighash = 0)\n     */ extractSighashFromPlaceholder(buf) {\n        if (buf.length <= 64) // Empty SigHash - use single byte 0 (sign all inputs and outputs)\n        return (0, $149c1bd638913645$re_export$SighashType).ALL; // Use default SIGHASH_ALL\n        // Parse the sighash bytes starting at offset 64\n        const sighashBytes = buf.subarray(64);\n        if (sighashBytes.length === 0) return (0, $149c1bd638913645$re_export$SighashType).ALL; // Default SIGHASH_ALL\n        // Get the sighashtype flag byte\n        const flagByte = sighashBytes[0];\n        // Upper 4 bits = input type, Lower 4 bits = output type\n        const inputType = flagByte >> 4 & 0x0F;\n        const outputType = flagByte & 0x0F;\n        const sighashType = new (0, $149c1bd638913645$re_export$SighashType)();\n        let byteIndex = 1;\n        // Parse input type flags\n        switch(inputType){\n            case 0:\n                sighashType.inType = 0; // ALL\n                break;\n            case 1:\n                sighashType.inType = 1; // FIRST_N\n                if (byteIndex < sighashBytes.length) {\n                    sighashType.inData = [\n                        sighashBytes[byteIndex]\n                    ];\n                    byteIndex++;\n                }\n                break;\n            case 2:\n                sighashType.inType = 2; // THIS\n                break;\n            default:\n                // Unknown input type, default to ALL\n                sighashType.inType = 0;\n        }\n        // Parse output type flags\n        switch(outputType){\n            case 0:\n                sighashType.outType = 0; // ALL\n                break;\n            case 1:\n                sighashType.outType = 1; // FIRST_N\n                if (byteIndex < sighashBytes.length) {\n                    sighashType.outData = [\n                        sighashBytes[byteIndex]\n                    ];\n                    byteIndex++;\n                }\n                break;\n            case 2:\n                sighashType.outType = 2; // TWO_OUTPUTS (if supported)\n                const outData = [];\n                if (byteIndex < sighashBytes.length) {\n                    outData.push(sighashBytes[byteIndex]);\n                    byteIndex++;\n                }\n                if (byteIndex < sighashBytes.length) {\n                    outData.push(sighashBytes[byteIndex]);\n                    byteIndex++;\n                }\n                sighashType.outData = outData;\n                break;\n            default:\n                // Unknown output type, default to ALL\n                sighashType.outType = 0;\n        }\n        return sighashType;\n    }\n    /**\n     * Determine signing behavior based on scriptSig content\n     * @param scriptSig - The scriptSig to analyze\n     * @returns Object with signing strategy and sighash type\n     */ analyzeScriptSig(scriptSig) {\n        const chunks = scriptSig.chunks;\n        // Empty scriptSig - sign with SIGHASH_ALL\n        if (chunks.length === 0) return {\n            strategy: 'sign_all',\n            sighashType: null\n        };\n        // Single chunk\n        if (chunks.length === 1) {\n            const chunk = chunks[0];\n            if (chunk.buf && this.isPlaceholder(chunk.buf)) {\n                // Single placeholder - treat same as empty, sign with SIGHASH_ALL or extract sighash\n                const sighashType = this.extractSighashFromPlaceholder(chunk.buf);\n                return {\n                    strategy: 'sign_all',\n                    sighashType: sighashType\n                };\n            }\n            // Single non-placeholder chunk - skip signing\n            return {\n                strategy: 'skip',\n                sighashType: null\n            };\n        }\n        // For script templates, check if this follows the 3-part structure: template, constraint, satisfier elements\n        // If chunks.length >= 3, assume it's a script template where chunks[2:] are satisfier elements\n        if (chunks.length >= 3) {\n            // Extract satisfier elements (chunks starting from index 2)\n            const satisfierElements = [];\n            let placeholderIndex;\n            let sighashType = null;\n            for(let i = 2; i < chunks.length; i++){\n                const chunk = chunks[i];\n                if (chunk.buf && this.isPlaceholder(chunk.buf)) {\n                    // Found placeholder in satisfier elements\n                    placeholderIndex = i;\n                    sighashType = this.extractSighashFromPlaceholder(chunk.buf);\n                } else // Non-placeholder satisfier element - preserve it\n                satisfierElements.push({\n                    buf: chunk.buf,\n                    len: chunk.len || (chunk.buf ? chunk.buf.length : 0),\n                    opcodenum: chunk.opcodenum\n                });\n            }\n            if (placeholderIndex !== undefined) return {\n                strategy: 'replace_placeholder',\n                sighashType: sighashType,\n                placeholderIndex: placeholderIndex,\n                satisfierElements: satisfierElements\n            };\n        }\n        // Multiple chunks - look for placeholder (fallback for non-template scripts)\n        for(let i = 0; i < chunks.length; i++){\n            const chunk = chunks[i];\n            if (chunk.buf && this.isPlaceholder(chunk.buf)) {\n                const sighashType = this.extractSighashFromPlaceholder(chunk.buf);\n                return {\n                    strategy: 'replace_placeholder',\n                    sighashType: sighashType,\n                    placeholderIndex: i\n                };\n            }\n        }\n        // Multiple chunks without placeholder - skip signing\n        return {\n            strategy: 'skip',\n            sighashType: null\n        };\n    }\n    /**\n     * Validates that the account has the necessary keys before performing operations\n     * @throws Error if account or keys are not properly initialized\n     */ validateAccount() {\n        if (!this._account) throw new Error('Account must be set before performing transactions');\n        if (!this._account.accountKeys) throw new Error('Account keys are not initialized');\n        if (!this._account.accountKeys.receiveKeys || this._account.accountKeys.receiveKeys.length === 0) throw new Error('No receive keys available in account');\n    }\n    findPrivateKeyFromAddress(addr) {\n        const keys = this._account.getAddresses();\n        return keys.find((key)=>key.address === addr);\n    }\n}\n\n\n\n\n\n\nclass $7e26340ce0f64954$export$2e2bcd8739ae039 {\n    /**\n     * Creates a new AccountStore instance\n     * Initializes an empty map to store accounts\n     */ constructor(){\n        this._accounts = new Map();\n    }\n    /**\n     * Generates a unique store key for an account based on its type and index\n     * @param accountType The type of account (DAPP, VAULT, or DEFAULT)\n     * @param index The account index\n     * @returns Unique string key for storing the account\n     */ getAccountStoreKey(accountType, index) {\n        switch(accountType){\n            case (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT:\n                // DApp accounts use format: \"2.index\"\n                return String(accountType + '.' + index);\n            case (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).VAULT_ACCOUNT:\n                // Vault accounts use format: \"1.index\"\n                return String(accountType + '.' + index);\n            default:\n                // Default accounts use just the index\n                return String(index);\n        }\n    }\n    /**\n     * Creates a new account of the specified type\n     * @param accountType Type of account to create (DAPP, VAULT, or DEFAULT)\n     * @param masterKey Master HD private key for deriving account keys\n     * @returns Promise resolving to the created account\n     */ async createAccount(accountType, masterKey) {\n        // Get the next available index for this account type\n        const nextIndex = await (0, $6f559318d8845d29$export$ef13479e8d3251d7)(accountType, masterKey);\n        const accountStoreKey = this.getAccountStoreKey(accountType, nextIndex);\n        // Check if account already exists\n        const indexExists = this._accounts.get(String(accountStoreKey));\n        if (indexExists) return indexExists;\n        switch(accountType){\n            case (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT:\n                // Create DApp account (purpose 2)\n                let dappAccountKey = (0, $6f559318d8845d29$export$b3a12d67e2f5f8c9)(masterKey, 2);\n                const dAppAccount = new (0, $448355556707518b$export$2e2bcd8739ae039)(2, nextIndex, (0, $6f559318d8845d29$export$1e0ce394ebe84ca9)(dappAccountKey, nextIndex));\n                await dAppAccount.loadBalances();\n                this._accounts.set(dAppAccount.getAccountStoreKey(), dAppAccount);\n                return dAppAccount;\n            case (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).VAULT_ACCOUNT:\n                // Create Vault account (purpose 1)\n                let vaultAccountKey = (0, $6f559318d8845d29$export$b3a12d67e2f5f8c9)(masterKey, 1);\n                const vaultAccount = new (0, $ce8955c0465759ad$export$2e2bcd8739ae039)(1, nextIndex, (0, $6f559318d8845d29$export$1e0ce394ebe84ca9)(vaultAccountKey, nextIndex));\n                await vaultAccount.loadBalances();\n                this._accounts.set(vaultAccount.getAccountStoreKey(), vaultAccount);\n                return vaultAccount;\n            default:\n                // Create default NEXA account with receive and change addresses\n                let nexaAccountKey = (0, $6f559318d8845d29$export$b3a12d67e2f5f8c9)(masterKey, nextIndex);\n                const nexaAccountIndexes = {\n                    rIndex: 0,\n                    cIndex: 0\n                };\n                const nexaAccount = new (0, $5c605efdbcfd6698$export$2e2bcd8739ae039)(nextIndex, nexaAccountIndexes, (0, $6f559318d8845d29$export$d6e8eb22902c6b88)(nexaAccountKey, nexaAccountIndexes.rIndex + 1, nexaAccountIndexes.rIndex + 20, nexaAccountIndexes.cIndex + 1, nexaAccountIndexes.cIndex + 20));\n                await nexaAccount.loadBalances();\n                this._accounts.set(nexaAccount.getAccountStoreKey(), nexaAccount);\n                return nexaAccount;\n        }\n    }\n    /**\n     * Finds the private key associated with a given address across all accounts\n     * @param address The address to search for\n     * @returns The AddressKey containing the private key, or null if not found\n     */ findKeyForAddress(address) {\n        // Search through all accounts\n        for (const [_, account] of this._accounts.entries()){\n            // Get all addresses for this account\n            const allKeys = account.getAddresses();\n            // Check each key for a matching address\n            for (const key of allKeys){\n                if (key.address == address) return key;\n            }\n        }\n        return null;\n    }\n    /**\n     * Imports an existing account into the store\n     * @param accountData The account data to import\n     * @throws Error if an account with the same key already exists\n     */ importAccount(accountData) {\n        let index = accountData.getAccountStoreKey();\n        if (this._accounts.get(index)) throw Error('Account already exists!');\n        this._accounts.set(String(index), accountData);\n    }\n    /**\n     * Exports account data by index\n     * @param accountIndex The account index to export\n     * @returns The account data\n     * @throws Error if the account doesn't exist\n     */ exportAccount(accountIndex) {\n        if (!this._accounts.get(accountIndex)) throw Error('Cannot find account!');\n        return this._accounts.get(accountIndex);\n    }\n    /**\n     * Removes an account from the store\n     * @param accountIndex The account index to remove\n     * @throws Error if the account doesn't exist\n     */ removeAccount(accountIndex) {\n        if (!this._accounts.get(accountIndex)) throw Error('Cannot find account!');\n        this._accounts.delete(accountIndex);\n    }\n    /**\n     * Returns all accounts in the store\n     * @returns Map of account store keys to BaseAccount objects\n     */ listAccounts() {\n        return this._accounts;\n    }\n    /**\n     * Retrieves a specific account by its index\n     * @param index The account index to retrieve\n     * @returns The account if found, undefined otherwise\n     */ getAccount(index) {\n        return this._accounts.get(index);\n    }\n    /**\n     * Retrieves all accounts of a specific type\n     * @param accountType The type of accounts to retrieve\n     * @returns Array of accounts matching the specified type\n     */ getAccountsByType(accountType) {\n        const accounts = [];\n        for (const [key, account] of this._accounts)// Check account type based on store key pattern\n        switch(accountType){\n            case (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT:\n                // DApp accounts have keys like \"2.0\", \"2.1\", etc.\n                if (key.startsWith('2.')) accounts.push(account);\n                break;\n            case (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).VAULT_ACCOUNT:\n                // Vault accounts have keys like \"1.0\", \"1.1\", etc.\n                if (key.startsWith('1.')) accounts.push(account);\n                break;\n            case (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).NEXA_ACCOUNT:\n                // Default accounts have numeric keys like \"0\", \"100\", etc. (no dot)\n                if (!key.includes('.')) accounts.push(account);\n                break;\n        }\n        return accounts;\n    }\n}\n\n\n\nclass $006d7f03de390713$export$2e2bcd8739ae039 {\n    /**\n     * Validate that a state condition is true\n     * \n     * @param condition - The condition to validate\n     * @param message - Error message to throw if condition is false\n     * @throws {Error} If condition is false\n     * \n     * @example\n     * ```typescript\n     * ValidationUtils.validateState(wallet.isInitialized, 'Wallet must be initialized');\n     * ```\n     */ static validateState(condition, message) {\n        if (!condition) throw new Error(`Invalid State: ${message}`);\n    }\n    /**\n     * Validate that an argument condition is true\n     * \n     * @param condition - The condition to validate\n     * @param argumentName - Name of the argument being validated\n     * @param message - Optional additional error message\n     * @throws {Error} If condition is false\n     * \n     * @example\n     * ```typescript\n     * ValidationUtils.validateArgument(\n     *   typeof amount === 'number',\n     *   'amount',\n     *   'must be a number'\n     * );\n     * ```\n     */ static validateArgument(condition, argumentName, message = \"\") {\n        if (!condition) throw new Error(`Invalid Argument: ${argumentName}. ${message}`);\n    }\n    /**\n     * Validate that an argument is of the expected type\n     * \n     * @param argument - The argument to validate\n     * @param type - Expected type (string name or constructor function)\n     * @param argumentName - Name of the argument being validated\n     * @throws {TypeError} If argument is not of expected type\n     * \n     * @example\n     * ```typescript\n     * ValidationUtils.validateArgumentType(buffer, 'Buffer', 'data');\n     * ValidationUtils.validateArgumentType(wallet, Wallet, 'wallet');\n     * ValidationUtils.validateArgumentType(amount, 'number', 'amount');\n     * ```\n     */ static validateArgumentType(argument, type, argumentName) {\n        argumentName = argumentName || '(unknown name)';\n        if ((0, $hgUW1$isString)(type)) {\n            if (type === 'Buffer') {\n                if (!Buffer.isBuffer(argument)) throw new TypeError(`Invalid Argument for ${argumentName}, expected ${type} but got ${typeof argument}`);\n            } else if (typeof argument !== type) throw new TypeError(`Invalid Argument for ${argumentName}, expected ${type} but got ${typeof argument}`);\n        } else {\n            if (!(argument instanceof type)) throw new TypeError(`Invalid Argument for ${argumentName}, expected ${type} but got ${typeof argument}`);\n        }\n    }\n}\n\n\nclass $8265cc68049fe82c$export$2e2bcd8739ae039 {\n    /**\n     * Creates a new Wallet instance\n     *\n     * @param data - Optional wallet data:\n     *   - undefined: Generate new random seed phrase\n     *   - string: Use as BIP39 seed phrase\n     *   - HDPrivateKey: Use as master key directly\n     * @param network - Network name ('mainnet', 'testnet', 'regtest'). Defaults to 'mainnet'\n     *\n     * @example\n     * ```typescript\n     * // Create new wallet with random seed\n     * const wallet = new Wallet();\n     *\n     * // Create from seed phrase\n     * const wallet = new Wallet('abandon abandon abandon...');\n     *\n     * // Create from master key\n     * const masterKey = HDPrivateKey.fromString('xprv...');\n     * const wallet = new Wallet(masterKey);\n     *\n     * // Create on testnet\n     * const wallet = new Wallet(undefined, 'testnet');\n     * ```\n     */ constructor(data, network){\n        this._network = (0, $hgUW1$Networks).get(network) ?? (0, $hgUW1$Networks).mainnet;\n        this._accountStore = new (0, $7e26340ce0f64954$export$2e2bcd8739ae039)();\n        if ((0, $hgUW1$isNil)(data)) {\n            // Generate new random seed phrase\n            this.phrase = $hgUW1$generateMnemonic(128, undefined, $hgUW1$wordlists.english);\n            const seed = $hgUW1$mnemonicToSeedSync(this.phrase, '');\n            const masterKey = (0, $hgUW1$HDPrivateKey).fromSeed(seed, this._network ?? (0, $hgUW1$Networks).mainnet);\n            this.masterKey = masterKey.deriveChild(44, true).deriveChild(29223, true);\n        } else if (data instanceof (0, $hgUW1$HDPrivateKey)) // Use provided HDPrivateKey directly\n        this.masterKey = data.deriveChild(44, true).deriveChild(29223, true);\n        else if ((0, $hgUW1$isString)(data)) {\n            // Validate and use provided seed phrase\n            (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument($hgUW1$validateMnemonic(data), 'Invalid BIP39 seed phrase provided');\n            this.phrase = data;\n            const seed = $hgUW1$mnemonicToSeedSync(this.phrase, '');\n            const masterKey = (0, $hgUW1$HDPrivateKey).fromSeed(seed, this._network ?? (0, $hgUW1$Networks).mainnet);\n            this.masterKey = masterKey.deriveChild(44, true).deriveChild(29223, true);\n        }\n    }\n    /**\n     * Create a new wallet with a randomly generated seed phrase\n     *\n     * This is the recommended way to create a new wallet for first-time users.\n     * The generated seed phrase should be securely stored by the user.\n     *\n     * @returns A new Wallet instance with a random 12-word seed phrase\n     *\n     * @example\n     * ```typescript\n     * const wallet = Wallet.create();\n     * console.log(wallet.export().phrase); // Store this securely!\n     * ```\n     */ static create() {\n        return new $8265cc68049fe82c$export$2e2bcd8739ae039();\n    }\n    /**\n     * Create a wallet from an existing BIP39 seed phrase\n     *\n     * Use this method to restore a wallet from a previously generated seed phrase.\n     * The seed phrase should be a valid BIP39 mnemonic.\n     *\n     * @param phrase - The BIP39 seed phrase (12 or 24 words)\n     * @param network - Optional network name ('mainnet', 'testnet', 'regtest')\n     * @returns A new Wallet instance restored from the seed phrase\n     * @throws {Error} If the seed phrase is invalid or not provided\n     *\n     * @example\n     * ```typescript\n     * const wallet = Wallet.fromSeedPhrase(\n     *   'abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about',\n     *   'testnet'\n     * );\n     * ```\n     */ static fromSeedPhrase(phrase, network) {\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(phrase), 'seedphrase must be provided');\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument($hgUW1$validateMnemonic(phrase), 'Invalid BIP39 seed phrase provided');\n        return new $8265cc68049fe82c$export$2e2bcd8739ae039(phrase, network);\n    }\n    /**\n     * Create a wallet from an extended private key (xpriv)\n     *\n     * Use this method to create a wallet from a master private key in extended format.\n     * This is useful for advanced users who want to use a specific key derivation.\n     *\n     * @param xpriv - The extended private key string (starts with 'xprv')\n     * @param network - Optional network name ('mainnet', 'testnet', 'regtest')\n     * @returns A new Wallet instance using the provided master key\n     * @throws {Error} If the private key is invalid or not provided\n     *\n     * @example\n     * ```typescript\n     * const wallet = Wallet.fromXpriv(\n     *   'xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi'\n     * );\n     * ```\n     */ static fromXpriv(xpriv, network) {\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(xpriv), 'private key must be provided');\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(xpriv.trim().length > 0, 'private key cannot be empty');\n        let masterKey;\n        try {\n            masterKey = (0, $hgUW1$HDPrivateKey).fromString(xpriv);\n        } catch (error) {\n            throw new Error(`Invalid extended private key format: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        }\n        return new $8265cc68049fe82c$export$2e2bcd8739ae039(masterKey, network);\n    }\n    /**\n     * Initialize the wallet by discovering accounts and loading balances\n     *\n     * This method performs account discovery using the BIP44 derivation path\n     * and scans for existing accounts with transaction history or balances.\n     * Must be called before using the wallet's accounts.\n     *\n     * @returns Promise that resolves when initialization is complete\n     *\n     * @example\n     * ```typescript\n     * const wallet = Wallet.fromSeedPhrase('your seed phrase');\n     * await wallet.initialize();\n     *\n     * // Now you can access discovered accounts\n     * const accounts = wallet.accountStore.listAccounts();\n     * ```\n     */ async initialize() {\n        const walletAccounts = await (0, $6f559318d8845d29$export$4e4f91181d6bd31c)(this.masterKey);\n        for (const account of walletAccounts)this._accountStore.importAccount(account);\n    }\n    /**\n     * Create a new transaction builder for this wallet\n     *\n     * @param fromAccount - The account to send the transaction from\n     * @param x - Optional existing transaction data:\n     *   - TransactionBuilder: Use existing transaction builder\n     *   - string: Parse from hex string\n     *   - Buffer: Parse from binary buffer\n     *   - undefined: Create new empty transaction\n     * @returns A new WalletTransactionCreator instance\n     *\n     * @example\n     * ```typescript\n     * const account = wallet.accountStore.getAccount(0);\n     * const tx = wallet.newTransaction(account)\n     *   .to('nexa:address', 1000000) // 1 NEXA\n     *   .sign();\n     *\n     * // Or from existing transaction hex\n     * const tx = wallet.newTransaction(account, 'raw_tx_hex')\n     *   .sign();\n     * ```\n     */ newTransaction(fromAccount, x) {\n        let tx;\n        if (x instanceof (0, $hgUW1$TransactionBuilder)) tx = new (0, $d71d9063d6876a10$export$2e2bcd8739ae039)(fromAccount, x);\n        else if ((0, $hgUW1$isString)(x)) tx = new (0, $d71d9063d6876a10$export$2e2bcd8739ae039)(fromAccount).parseTxHex(x);\n        else if ((0, $hgUW1$isBuffer)(x) && !(0, $hgUW1$isNil)(x)) tx = new (0, $d71d9063d6876a10$export$2e2bcd8739ae039)(fromAccount).parseTxBuffer(x);\n        else tx = new (0, $d71d9063d6876a10$export$2e2bcd8739ae039)(fromAccount);\n        return tx.onNetwork(this._network);\n    }\n    /**\n     * Create a new account for this wallet\n     *\n     * @param accountType - The type of account to create:\n     *   - 'DefaultAccount': Standard account for general use\n     *   - 'VaultAccount': Secured account with additional protection\n     *   - 'DappAccount': Account optimized for dApp interactions\n     * @returns Promise that resolves to the newly created account\n     *\n     * @example\n     * ```typescript\n     * const defaultAccount = await wallet.newAccount('DefaultAccount');\n     * const vaultAccount = await wallet.newAccount('VaultAccount');\n     * const dappAccount = await wallet.newAccount('DappAccount');\n     * ```\n     */ async newAccount(accountType) {\n        return await this.accountStore.createAccount(accountType, this.masterKey);\n    }\n    /**\n     * Broadcast a signed transaction to the Nexa network\n     *\n     * @param transaction - The signed transaction in hex format\n     * @returns Promise that resolves to the transaction ID (txid)\n     * @throws {Error} If the transaction is invalid or broadcast fails\n     *\n     * @example\n     * ```typescript\n     * const tx = wallet.newTransaction(account)\n     *   .to('nexa:address', 1000000)\n     *   .sign();\n     *\n     * const txId = await wallet.sendTransaction(tx.toHex());\n     * console.log('Transaction sent:', txId);\n     * ```\n     */ async sendTransaction(transaction) {\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(transaction), 'transaction must be present and valid');\n        return (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).broadcast(transaction);\n    }\n    /**\n     * Subscribe to address notifications for transaction updates\n     *\n     * This method allows you to monitor one or more addresses for incoming and outgoing transactions.\n     * You can provide either a single address string or an array of addresses. The callback will be\n     * invoked whenever there are updates to any of the monitored addresses.\n     *\n     * @param addresses - A single address string or array of addresses to monitor\n     * @param callback - Function to call when address notifications are received\n     * @returns Promise that resolves when subscription is established\n     * @throws {Error} If addresses parameter is invalid or empty\n     *\n     * @example\n     * ```typescript\n     * // Subscribe to a single address\n     * await wallet.subscribeToAddressNotifications(\n     *   'nexa:address123',\n     *   (notification) => {\n     *     console.log('Address notification:', notification);\n     *   }\n     * );\n     *\n     * // Subscribe to multiple addresses\n     * await wallet.subscribeToAddressNotifications(\n     *   ['nexa:address1', 'nexa:address2', 'nexa:address3'],\n     *   (notification) => {\n     *     console.log('Address notification:', notification);\n     *   }\n     * );\n     *\n     * // Subscribe to all wallet addresses\n     * const accounts = wallet.accountStore.listAccounts();\n     * const addresses = accounts.flatMap(account =>\n     *   account.getAddresses().map(addr => addr.address)\n     * );\n     * await wallet.subscribeToAddressNotifications(addresses, callback);\n     * ```\n     */ async subscribeToAddressNotifications(addresses, callback) {\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(addresses), 'addresses parameter is required');\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(callback), 'callback function is required');\n        let addressArray;\n        if ((0, $hgUW1$isString)(addresses)) addressArray = [\n            addresses\n        ];\n        else if ((0, $hgUW1$isArray)(addresses)) {\n            (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(addresses.length > 0, 'addresses array cannot be empty');\n            addressArray = addresses;\n        } else throw new Error('addresses must be a string or array of strings');\n        return (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).subscribeToAddresses(addressArray, callback);\n    }\n    /**\n     * Unsubscribe from address notifications to prevent memory leaks\n     *\n     * This method stops listening for notifications on the specified addresses.\n     * It's important to call this method when you no longer need to monitor addresses\n     * to prevent memory leaks from accumulating callback references.\n     *\n     * @param addresses - Single address string or array of address strings to unsubscribe from\n     * @param callback - The exact same callback function used in subscribeToAddressNotifications\n     *\n     * @example\n     * ```typescript\n     * // Unsubscribe from a single address\n     * await wallet.unsubscribeFromAddressNotifications(\n     *     'nexa:nqtsq5g5jsdmqqywaqd82lhnnk3a8wqunjz6gtxdtavnnekc',\n     *     myCallback\n     * );\n     *\n     * // Unsubscribe from multiple addresses\n     * await wallet.unsubscribeFromAddressNotifications(addresses, myCallback);\n     * ```\n     */ async unsubscribeFromAddressNotifications(addresses, callback) {\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(addresses), 'addresses parameter is required');\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(callback), 'callback function is required');\n        let addressArray;\n        if ((0, $hgUW1$isString)(addresses)) addressArray = [\n            addresses\n        ];\n        else if ((0, $hgUW1$isArray)(addresses)) {\n            (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(addresses.length > 0, 'addresses array cannot be empty');\n            addressArray = addresses;\n        } else throw new Error('addresses must be a string or array of strings');\n        return (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).unsubscribeFromAddresses(addressArray, callback);\n    }\n    /**\n     * Sign a message using a specific address from this wallet\n     *\n     * The message is signed using the private key associated with the given address.\n     * This can be used for authentication or to prove ownership of an address.\n     *\n     * @param message - The message to sign\n     * @param addressToUse - The address whose private key should sign the message\n     * @returns The signature as a base64-encoded string\n     * @throws {Error} If the address is not owned by this wallet\n     *\n     * @example\n     * ```typescript\n     * const account = wallet.accountStore.getAccount(0);\n     * const address = account.getReceiveAddress();\n     * const signature = wallet.signMessage('Hello World', address);\n     * ```\n     */ signMessage(message, addressToUse) {\n        let msg = new (0, $hgUW1$Message)(message);\n        const addressKey = this.accountStore.findKeyForAddress(addressToUse);\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(addressKey), \"You dont own this private key\");\n        return msg.sign(addressKey?.key.privateKey);\n    }\n    /**\n     * Verify a message signature against an address\n     *\n     * This method can verify signatures created by any address, not just addresses\n     * owned by this wallet. It's useful for verifying messages from other parties.\n     *\n     * @param message - The original message that was signed\n     * @param signature - The signature to verify (base64-encoded)\n     * @param address - The address that supposedly signed the message\n     * @returns true if the signature is valid, false otherwise\n     * @throws {Error} If any parameters are missing or invalid\n     *\n     * @example\n     * ```typescript\n     * const isValid = wallet.verifyMessage(\n     *   'Hello World',\n     *   'signature_string',\n     *   'nexa:address'\n     * );\n     * console.log('Signature valid:', isValid);\n     * ```\n     */ verifyMessage(message, signature, address) {\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(message), 'message is required');\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(signature), 'signature is required');\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(address), 'address is required ');\n        let msg = new (0, $hgUW1$Message)(message);\n        const addressKey = this.accountStore.findKeyForAddress(address);\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument(!(0, $hgUW1$isNil)(addressKey), \"You dont own this private key\");\n        return msg.verify(address, signature);\n    }\n    /**\n     * Export the wallet data for backup or storage\n     *\n     * Returns an object containing the wallet's seed phrase, master key, and accounts.\n     * This data can be used to restore the wallet later. The seed phrase should be\n     * stored securely as it provides full access to the wallet.\n     *\n     * @returns Object containing wallet data\n     * @property {string} phrase - The BIP39 seed phrase (if available)\n     * @property {HDPrivateKey} masterKey - The master private key\n     * @property {BaseAccount[]} accounts - Array of discovered accounts\n     *\n     * @example\n     * ```typescript\n     * const walletData = wallet.export();\n     *\n     * // Store the seed phrase securely\n     * const seedPhrase = walletData.phrase;\n     *\n     * // Later, restore the wallet\n     * const restoredWallet = Wallet.fromSeedPhrase(seedPhrase);\n     * ```\n     */ export() {\n        return {\n            phrase: this.phrase,\n            masterKey: this.masterKey,\n            accounts: this._accountStore.listAccounts()\n        };\n    }\n    /**\n     * Get the account store for managing wallet accounts\n     *\n     * The account store provides methods to create, import, and manage accounts\n     * within this wallet. Each account has its own set of addresses and keys.\n     *\n     * @returns The wallet's account store\n     *\n     * @example\n     * ```typescript\n     * const accountStore = wallet.accountStore;\n     * const accounts = accountStore.listAccounts();\n     * const firstAccount = accountStore.getAccount(0);\n     * ```\n     */ get accountStore() {\n        return this._accountStore;\n    }\n    /**\n     * Get the network this wallet is operating on\n     *\n     * @returns The network object (mainnet, testnet, or regtest)\n     *\n     * @example\n     * ```typescript\n     * const network = wallet.network;\n     * console.log('Network:', network.name);\n     * ```\n     */ get network() {\n        return this._network;\n    }\n}\n\n\n\n\n\n\n\n\n\nconst $c03143e0cae56add$var$MAX_INPUTS_OUTPUTS = 250;\nasync function $c03143e0cae56add$export$20e004915450ed44(txBuilder, addresses, totalTxValue, options) {\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(addresses)) throw new Error(\"Not enough Nexa balance.\");\n    let usedAddresses = new Set();\n    let origAmount = options.isConsolidate ? 0 : Number(totalTxValue);\n    for (let item of addresses){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getNexaUtxos(item.address);\n        for (let utxo of utxos){\n            let input = {\n                outpoint: utxo.outpoint_hash,\n                address: item.address,\n                satoshis: utxo.value,\n                templateData: options.templateData\n            };\n            txBuilder.from(input);\n            if (!usedAddresses.has(item.address)) usedAddresses.add(item.address);\n            if (options.isConsolidate) {\n                // need to handle change\n                txBuilder.change(options.toChange ?? item.address);\n                if (txBuilder.transaction.inputs.length > $c03143e0cae56add$var$MAX_INPUTS_OUTPUTS) return Array.from(usedAddresses.values());\n            } else {\n                let tx = txBuilder.transaction;\n                if (tx.inputs.length > $c03143e0cae56add$var$MAX_INPUTS_OUTPUTS) throw new Error(\"Too many inputs. Consider consolidate transactions or reduce the send amount.\");\n                let unspent = tx.getUnspentValue();\n                if (unspent < 0n) continue;\n                if (unspent == 0n && options.feeFromAmount) {\n                    let txFee = tx.estimateRequiredFee();\n                    tx.updateOutputAmount(0, origAmount - txFee);\n                    return Array.from(usedAddresses.values());\n                }\n                txBuilder.change(options.toChange ?? item.address);\n                if (options.feeFromAmount) {\n                    let hasChange = tx.getChangeOutput();\n                    let txFee = tx.estimateRequiredFee();\n                    tx.updateOutputAmount(0, origAmount - txFee);\n                    // edge case where change added after update\n                    if (!hasChange && tx.getChangeOutput()) {\n                        txFee = tx.estimateRequiredFee();\n                        tx.updateOutputAmount(0, origAmount - txFee);\n                    }\n                }\n                // check again after change output manipulation\n                if (tx.getUnspentValue() < tx.estimateRequiredFee()) continue;\n                return Array.from(usedAddresses.values());\n            }\n        }\n    }\n    if (options.isConsolidate) {\n        if (usedAddresses.size > 0) return Array.from(usedAddresses.values());\n        throw new Error(\"Not enough Nexa balance.\");\n    }\n    let err = {\n        errorMsg: \"Not enough Nexa balance.\",\n        amount: (0, $hgUW1$UnitUtils).formatNEXA(Number(totalTxValue)),\n        fee: (0, $hgUW1$UnitUtils).formatNEXA(txBuilder.transaction.estimateRequiredFee())\n    };\n    throw new Error(JSON.stringify(err));\n}\nasync function $c03143e0cae56add$export$49bc96b87058cba4(txBuilder, addresses, token, outTokenAmount) {\n    if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(addresses)) throw new Error(\"Not enough token balance.\");\n    let usedKeys = new Set();\n    let inTokenAmount = 0n;\n    for (let item of addresses){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTokenUtxos(item.address, token);\n        for (let utxo of utxos){\n            if (utxo.token_amount < 0) continue;\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: item.address,\n                satoshis: utxo.value,\n                groupId: utxo.group,\n                groupAmount: BigInt(utxo.token_amount)\n            });\n            inTokenAmount = inTokenAmount + BigInt(utxo.token_amount);\n            if (!usedKeys.has(item.address)) usedKeys.add(item.address);\n            if (inTokenAmount > (0, $d78972a39a5ae94f$export$8ba128bc85947a2a)) throw new Error(\"Token inputs exceeded max amount. Consider sending in small chunks\");\n            if (txBuilder.transaction.inputs.length > $c03143e0cae56add$var$MAX_INPUTS_OUTPUTS) throw new Error(\"Too many inputs. Consider consolidating transactions or reduce the send amount.\");\n            if (inTokenAmount == outTokenAmount) return Array.from(usedKeys.values());\n            if (inTokenAmount > outTokenAmount) {\n                // change\n                txBuilder.to(item.address, (0, $hgUW1$Transaction).DUST_AMOUNT, token, inTokenAmount - outTokenAmount);\n                return Array.from(usedKeys.values());\n            }\n        }\n    }\n    throw new Error(\"Not enough token balance\");\n}\nasync function $c03143e0cae56add$export$74e83de914f372c5(txBuilder, addresses, opReturnData, network) {\n    let outpoint = '';\n    let usedKeys = [];\n    for (let item of addresses){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getNexaUtxos(item.address);\n        for (let utxo of utxos){\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: item.address,\n                satoshis: utxo.value\n            });\n            if ((0, $d78972a39a5ae94f$export$c8733ae29fb53302)(outpoint) && !utxo.has_token) {\n                outpoint = utxo.outpoint_hash;\n                let id = (0, $hgUW1$GroupToken).findGroupId(outpoint, Buffer.from(opReturnData, 'hex'), (0, $hgUW1$GroupToken).authFlags.ACTIVE_FLAG_BITS);\n                const groupId = new (0, $hgUW1$Address)(id.hashBuffer, network, (0, $hgUW1$AddressType).GroupIdAddress).toString();\n                txBuilder.to(item.address, (0, $hgUW1$Transaction).DUST_AMOUNT, groupId, (0, $hgUW1$GroupToken).authFlags.ACTIVE_FLAG_BITS | id.nonce);\n                usedKeys.push(item.address);\n                return usedKeys;\n            }\n        }\n    }\n    throw new Error(\"Not enough Nexa balance.\");\n}\nasync function $c03143e0cae56add$export$1eb54f2f084fd3c6(txBuilder, addresses, outpoint) {\n    let utxo = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getUtxo(outpoint);\n    let address = utxo.addresses[0];\n    txBuilder.from({\n        outpoint: outpoint,\n        address: address,\n        satoshis: utxo.amount\n    });\n    let addrKey = addresses.find((k)=>k.address === address);\n    if (!addrKey) throw new Error('UTXO associated key not found in the wallet');\n    return [\n        addrKey.address\n    ];\n}\nasync function $c03143e0cae56add$export$d7c9c386067a6463(txBuilder, addresses, token, perm, subgroup = '', quantity) {\n    for (let item of addresses){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTokenUtxos(item.address, token);\n        for (let utxo of utxos){\n            if (!(0, $59b5736a17e7320d$export$7f7cffd29bf2d96d)(utxo.token_amount, perm)) continue;\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: item.address,\n                satoshis: utxo.value\n            });\n            if (perm === 'subgroup') {\n                const subgroupQuantity = quantity ?? (0, $59b5736a17e7320d$export$636fb0b03b94ac81)(utxo.token_amount, false);\n                txBuilder.to(item.address, (0, $hgUW1$Transaction).DUST_AMOUNT, subgroup, subgroupQuantity);\n            }\n            // if renew flag included, we don't want to burn it\n            if ((0, $hgUW1$GroupToken).allowsRenew(BigInt.asUintN(64, BigInt(utxo.token_amount)))) txBuilder.to(item.address, (0, $hgUW1$Transaction).DUST_AMOUNT, token, (0, $59b5736a17e7320d$export$636fb0b03b94ac81)(utxo.token_amount));\n            return [\n                item.address\n            ];\n        }\n    }\n    throw new Error(\"The requested authority not found\");\n}\nasync function $c03143e0cae56add$export$5c44e04d8c04c292(txBuilder, addresses, token, perms, toAddr) {\n    let usedAddresses = [];\n    let reqiredPerms = new Set(perms);\n    reqiredPerms.add('authorise');\n    for (let item of addresses){\n        let utxos = await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).getTokenUtxos(item.address, token);\n        for (let utxo of utxos){\n            if (utxo.token_amount > 0) continue;\n            let found = false;\n            for (let perm of reqiredPerms)if ((0, $59b5736a17e7320d$export$7f7cffd29bf2d96d)(utxo.token_amount, perm)) {\n                reqiredPerms.delete(perm);\n                found = true;\n            }\n            if (!found) continue;\n            txBuilder.from({\n                outpoint: utxo.outpoint_hash,\n                address: item.address,\n                satoshis: utxo.value\n            });\n            usedAddresses.push(item.address);\n            // duplicate\n            txBuilder.to(toAddr != null ? toAddr : item.address, (0, $hgUW1$Transaction).DUST_AMOUNT, token, (0, $59b5736a17e7320d$export$636fb0b03b94ac81)(utxo.token_amount));\n            if (reqiredPerms.size === 0) return usedAddresses;\n        }\n    }\n    throw new Error(\"The required authorities not found\");\n}\n\n\n\n\nclass $fab743d51c8bbe7e$export$2e2bcd8739ae039 extends (0, $329d65a0aed426f1$export$bba690fb5c12ba04) {\n    /**\n     * Creates a new WatchOnlyTransactionCreator\n     * @param tx Optional existing transaction builder or transaction data\n     */ constructor(tx){\n        super(tx), /** Addresses that need to be signed with (populated during transaction building) */ this._addressesToSignWith = [], /** Available addresses for input selection and change */ this._availableAddresses = [];\n    }\n    /**\n     * Sets the source addresses for transaction inputs\n     * @param address Single address string, array of addresses, or WatchOnlyAddress objects\n     * @returns This instance for chaining\n     */ from(address) {\n        if ((0, $hgUW1$isString)(address)) {\n            if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(address, this.network) && !(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(address, this.network, (0, $hgUW1$AddressType).PayToPublicKeyHash)) throw new Error('Invalid Address.');\n            // Single address string\n            this._availableAddresses.push({\n                address: address\n            });\n        } else if (Array.isArray(address)) // Array of addresses or WatchOnlyAddress objects\n        address.forEach((addr)=>{\n            if ((0, $hgUW1$isString)(addr)) {\n                if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(addr, this.network) && !(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(addr, this.network, (0, $hgUW1$AddressType).PayToPublicKeyHash)) throw new Error('Invalid Address.');\n                // String address\n                this._availableAddresses.push({\n                    address: addr\n                });\n            } else if (addr && typeof addr === 'object' && 'address' in addr) // WatchOnlyAddress object\n            this._availableAddresses.push(addr);\n        });\n        else if (address.address != null) // Single WatchOnlyAddress object\n        this._availableAddresses.push(address);\n        return this;\n    }\n    /**\n     * Adds a token minting operation to the transaction\n     * @param token Token ID to mint\n     * @param amount Amount to mint\n     * @param toAddr Destination address for minted tokens\n     * @returns This instance for chaining\n     */ mint(token, amount, toAddr) {\n        this.builder.push(async ()=>{\n            this.tokenAction(toAddr, amount, token, 'mint');\n        });\n        return this;\n    }\n    /**\n     * Adds a token melting operation to the transaction\n     * @param token Token ID to melt\n     * @param amount Amount to melt\n     * @param toAddr Destination address for melted tokens\n     * @returns This instance for chaining\n     */ melt(token, amount, toAddr) {\n        this.builder.push(async ()=>{\n            this.tokenAction(toAddr, amount, token, 'melt');\n        });\n        return this;\n    }\n    /**\n     * Populates the transaction with inputs and outputs based on the configured actions.\n     * Handles different token operations (mint, melt, group creation, etc.) and\n     * populates NEXA inputs for transaction fees.\n     * @returns This instance for chaining\n     */ populate() {\n        this.builder.push(async ()=>{\n            let tokenAddresses = [];\n            let nexaAddresses = [];\n            // Process token operations if any are configured\n            if (this.tokens.size > 0) for (const tokenAction of this.tokens){\n                if (tokenAction.action == 'mint' || tokenAction.action == 'melt') // Handle token minting/melting - requires authority\n                tokenAddresses = tokenAddresses.concat(await (0, $c03143e0cae56add$export$d7c9c386067a6463)(this.transactionBuilder, this._availableAddresses, tokenAction.token, tokenAction.action));\n                else if (tokenAction.action == 'group') // Handle group token creation\n                tokenAddresses = tokenAddresses.concat(await (0, $c03143e0cae56add$export$74e83de914f372c5)(this.transactionBuilder, this._availableAddresses, tokenAction.extraData?.opReturnData, this.network));\n                else if (tokenAction.action == 'subgroup') // Handle subgroup token creation\n                tokenAddresses = tokenAddresses.concat(await (0, $c03143e0cae56add$export$d7c9c386067a6463)(this.transactionBuilder, this._availableAddresses, tokenAction.parentToken, tokenAction.action, tokenAction.token, tokenAction.extraData?.quantity));\n                else if (tokenAction.action == 'renew') // Handle authority renewal\n                tokenAddresses = tokenAddresses.concat(await (0, $c03143e0cae56add$export$5c44e04d8c04c292)(this.transactionBuilder, this._availableAddresses, tokenAction.token, tokenAction.extraData.perms, tokenAction.extraData?.address));\n                else if (tokenAction.action == 'delete') // Handle authority deletion\n                tokenAddresses = tokenAddresses.concat(await (0, $c03143e0cae56add$export$1eb54f2f084fd3c6)(this.transactionBuilder, this._availableAddresses, tokenAction.extraData.outpoint));\n                else // Handle regular token transfers\n                tokenAddresses = tokenAddresses.concat(await (0, $c03143e0cae56add$export$49bc96b87058cba4)(this.transactionBuilder, this._availableAddresses, tokenAction.token, tokenAction.amount));\n                // Accumulate addresses that need signing\n                this._addressesToSignWith.concat(tokenAddresses);\n            }\n            // Populate NEXA inputs for transaction fees and change\n            nexaAddresses = nexaAddresses.concat(await (0, $c03143e0cae56add$export$20e004915450ed44)(this.transactionBuilder, this._availableAddresses, this.totalValue, this.txOptions));\n            // Combine all addresses that need signing\n            this._addressesToSignWith = tokenAddresses.concat(nexaAddresses);\n        });\n        return this;\n    }\n    /**\n     * Parse transaction from buffer (not implemented for watch-only)\n     * @param tx Transaction buffer\n     * @returns This instance for chaining\n     * @throws Error indicating method not implemented\n     */ parseTxBuffer(tx) {\n        this.builder.push(async ()=>{\n            this.transactionBuilder = new (0, $hgUW1$TransactionBuilder)(tx);\n        });\n        return this;\n    }\n    /**\n     * Parse transaction from hex string using enhanced base class implementation\n     * @param tx Transaction hex string\n     * @returns This instance for chaining\n     */ parseTxHex(tx) {\n        // Call parent's parseTxHex which handles script template reconstruction\n        return super.parseTxHex(tx);\n    }\n    /**\n     * Handle watch-only specific logic for each parsed input (track addresses for signing)\n     */ async handleParsedInput(_input, utxo, _index) {\n        // Track addresses that will need to be signed with external wallet\n        if (utxo.addresses && utxo.addresses.length > 0) {\n            const address = utxo.addresses[0];\n            if (!this._addressesToSignWith.includes(address)) this._addressesToSignWith.push(address);\n        }\n    }\n}\n\n\n\n\n\n\nclass $d3558bc9d24bb18b$export$2e2bcd8739ae039 {\n    /**\n     * Creates a new WatchOnlyWallet instance\n     * @param addressesToWatch Array of addresses to monitor\n     * @param network Optional network name (defaults to mainnet)\n     * @throws Error if validation fails\n     */ constructor(addressesToWatch, network){\n        // Validate network parameter\n        if (network !== undefined && !(0, $hgUW1$isString)(network)) throw new Error('Network must be a string');\n        if (network !== undefined && (0, $hgUW1$isString)(network)) {\n            const n = (0, $hgUW1$Networks).get(network);\n            if (n === undefined) throw new Error(`Invalid network: ${network}`);\n        }\n        this._network = (0, $hgUW1$Networks).get(network) ?? (0, $hgUW1$Networks).mainnet;\n        // Validate addressesToWatch parameter\n        this._addressesToWatch = this.validateAddressesToWatch(addressesToWatch);\n    }\n    /**\n     * Validates the addresses to watch array\n     * @param addressesToWatch Array of addresses to validate\n     * @returns Validated array of WatchOnlyAddress objects\n     * @throws Error if validation fails\n     */ validateAddressesToWatch(addressesToWatch) {\n        if (addressesToWatch === null || addressesToWatch === undefined) throw new Error('addresesToWatch is required');\n        if (!(0, $hgUW1$isArray)(addressesToWatch)) throw new Error('addressesToWatch must be an array');\n        // Check if array is not empty\n        if (addressesToWatch.length === 0) throw new Error('addressesToWatch cannot be empty');\n        // Validate each address object\n        const validatedAddresses = [];\n        for(let i = 0; i < addressesToWatch.length; i++){\n            const addr = addressesToWatch[i];\n            // Check if address is an object\n            if (!(0, $hgUW1$isObject)(addr) || (0, $hgUW1$isArray)(addr)) throw new Error(`addressesToWatch[${i}] must be an object`);\n            // Check if address property exists and is a string\n            if (!addr.hasOwnProperty('address') || !(0, $hgUW1$isString)(addr.address)) throw new Error(`addressesToWatch[${i}].address must be a string`);\n            // Check if address is not empty\n            if (addr.address.trim() === '') throw new Error(`addressesToWatch[${i}].address cannot be empty`);\n            // Validate address format\n            if (!(0, $6f559318d8845d29$export$8d986bd2866fe6ab)(addr.address, this._network)) throw new Error(`addressesToWatch[${i}].address is not a valid NEXA address: ${addr.address}`);\n            // Validate optional xPub property\n            if (addr.xPub !== undefined && !(0, $hgUW1$isObject)(addr.xPub)) throw new Error(`addressesToWatch[${i}].xPub must be a PublicKey object`);\n            // Validate optional derivationPath property\n            if (addr.derivationPath !== undefined && !(0, $hgUW1$isString)(addr.derivationPath)) throw new Error(`addressesToWatch[${i}].derivationPath must be a string`);\n            // Check for duplicate addresses\n            const isDuplicate = validatedAddresses.some((existingAddr)=>existingAddr.address === addr.address);\n            if (isDuplicate) throw new Error(`Duplicate address found: ${addr.address}`);\n            validatedAddresses.push({\n                address: addr.address.trim(),\n                xPub: addr.xPub,\n                derivationPath: addr.derivationPath\n            });\n        }\n        return validatedAddresses;\n    }\n    /**\n     * Creates a new transaction creator for this watch-only wallet\n     * @param x Optional transaction data - can be a TransactionBuilder, hex string, or Buffer\n     * @returns WatchOnlyTransactionCreator configured with wallet's addresses and network\n     */ newTransaction(x) {\n        let tx;\n        // Handle different input types for creating transactions\n        if (x instanceof (0, $hgUW1$TransactionBuilder)) // Use existing TransactionBuilder instance\n        tx = new (0, $fab743d51c8bbe7e$export$2e2bcd8739ae039)(x);\n        else if ((0, $hgUW1$isString)(x)) // Parse transaction from hex string\n        tx = new (0, $fab743d51c8bbe7e$export$2e2bcd8739ae039)().parseTxHex(x);\n        else if ((0, $hgUW1$isBuffer)(x) && !(0, $hgUW1$isNil)(x)) // Parse transaction from buffer\n        tx = new (0, $fab743d51c8bbe7e$export$2e2bcd8739ae039)().parseTxBuffer(x);\n        else // Create new empty transaction\n        tx = new (0, $fab743d51c8bbe7e$export$2e2bcd8739ae039)();\n        // Configure transaction with wallet's addresses and network\n        return tx.from(this._addressesToWatch).onNetwork(this._network);\n    }\n    /**\n     * Broadcasts a signed transaction to the network\n     * @param transaction Hex-encoded signed transaction\n     * @returns Promise resolving to transaction ID\n     * @throws Error if transaction is invalid or broadcast fails\n     */ async sendTransaction(transaction) {\n        (0, $006d7f03de390713$export$2e2bcd8739ae039).validateArgument((0, $hgUW1$isString)(transaction), 'transaction must be present and valid');\n        return (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).broadcast(transaction);\n    }\n    async subscribeToAddressNotifications(callback) {\n        await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).subscribeToAddresses(this._addressesToWatch.map((addr)=>addr.address), callback);\n    }\n    /**\n     * Unsubscribe from address notifications to prevent memory leaks\n     * \n     * This method stops listening for notifications on all watched addresses.\n     * The callback parameter must be the exact same function reference that was\n     * used in the subscribeToAddressNotifications call.\n     * \n     * @param callback - The exact same callback function used in subscribeToAddressNotifications\n     * \n     * @example\n     * ```typescript\n     * const myCallback = (notification) => console.log(notification);\n     * await watchOnlyWallet.subscribeToAddressNotifications(myCallback);\n     * \n     * // Later, to prevent memory leaks:\n     * await watchOnlyWallet.unsubscribeFromAddressNotifications(myCallback);\n     * ```\n     */ async unsubscribeFromAddressNotifications(callback) {\n        await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).unsubscribeFromAddresses(this._addressesToWatch.map((addr)=>addr.address), callback);\n    }\n    /**\n     * Gets the list of addresses being watched\n     * @returns Array of watched addresses (copy to prevent mutation)\n     */ getWatchedAddresses() {\n        return [\n            ...this._addressesToWatch\n        ];\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst $5358ccf67a3d811b$export$618de809a659cb44 = {\n    approveTransaction: async ()=>true,\n    approveMessage: async ()=>true,\n    approveSendTransaction: async ()=>true,\n    approveNetworkSwitch: async ()=>true,\n    approveAddToken: async ()=>true,\n    approveConnection: async ()=>true\n};\n\n\n/**\n * Extract all token outputs and amounts from transaction hex\n * @param txHex - Transaction hex string\n * @param network - Network to use for token address creation\n * @returns Array of token outputs with tokenId and amount\n */ const $d838721b0af30ac5$var$getTokenOutputsFromTx = (txHex, network)=>{\n    const tokenOutputs = [];\n    try {\n        const transaction = new (0, $hgUW1$Transaction)(txHex);\n        for (const output of transaction.outputs)if (output.type !== 0 && output.scriptPubKey.chunks[0]?.opcodenum >= 32) {\n            const tokenIdHex = output.scriptPubKey.chunks[0].buf?.toString('hex');\n            if (tokenIdHex && output.scriptPubKey.chunks[1]?.buf) {\n                const tokenAddress = (0, $hgUW1$Address).fromObject({\n                    data: tokenIdHex,\n                    network: network.toString(),\n                    type: (0, $hgUW1$AddressType).GroupIdAddress\n                });\n                if (tokenAddress !== null) {\n                    const tokenAddressStr = tokenAddress.toString();\n                    // Extract token amount\n                    const tokenAmount = (0, $hgUW1$BNExtended).fromScriptNumBuffer(output.scriptPubKey.chunks[1].buf, false, 8).toBigInt();\n                    tokenOutputs.push({\n                        tokenId: tokenAddressStr,\n                        amount: tokenAmount.toString()\n                    });\n                }\n            }\n        }\n    } catch (error) {\n        console.warn('Failed to extract token data from transaction:', error);\n    }\n    return tokenOutputs;\n};\nclass $d838721b0af30ac5$export$11e896a2f3ae4119 {\n    constructor(wallet, approvalCallbacks){\n        this.provider = null;\n        this.currentAccount = null;\n        this.isConnected = false;\n        this.connectedDApp = null;\n        this.wallet = wallet;\n        this.approvalCallbacks = approvalCallbacks || (0, $5358ccf67a3d811b$export$618de809a659cb44);\n    }\n    /**\n     * Set approval callbacks for handling user consent\n     */ setApprovalCallbacks(callbacks) {\n        this.approvalCallbacks = callbacks;\n    }\n    /**\n     * Connect to a dApp using a pairing URI\n     *\n     * This method will only use DApp accounts for security isolation.\n     * If no DApp account is provided, the first available one will be used or created.\n     *\n     * @param pairingURI - The pairing URI from the dApp (usually from QR code)\n     * @param dappAccount - Optional specific DApp account to use (defaults to first available)\n     * @returns Information about the connected dApp\n     */ async connect(pairingURI, dappAccount) {\n        if (this.isConnected) this.disconnect();\n        this.provider = new (0, $hgUW1$DAppProvider)(pairingURI);\n        // Set up request handlers\n        this.setupHandlers();\n        // Connect to the dApp\n        const dAppInfo = await this.provider.connect();\n        // Request approval for connection if callback is provided\n        if (this.approvalCallbacks.approveConnection) {\n            const approved = await this.approvalCallbacks.approveConnection(dAppInfo);\n            if (!approved) {\n                this.provider.disconnect();\n                throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).RequestRejected, 'Connection rejected by user');\n            }\n        }\n        this.connectedDApp = dAppInfo;\n        // Use provided DApp account or get/create one\n        if (dappAccount) {\n            // Validate it's actually a DApp account\n            if (dappAccount.getAccountType() !== (0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT) throw new Error('Only DApp accounts can be used with WalletComms');\n            this.currentAccount = dappAccount;\n        } else this.currentAccount = await this.getOrCreateDAppAccount();\n        // Join the session with the DApp account address\n        const primaryAddress = this.currentAccount.getPrimaryAddressKey();\n        await this.provider.joinSession(primaryAddress.address);\n        this.isConnected = true;\n        return dAppInfo;\n    }\n    /**\n     * Get an existing DApp account or create a new one\n     *\n     * @returns A DApp account\n     */ async getOrCreateDAppAccount() {\n        // Get all DApp accounts using the new helper method\n        const dappAccounts = this.wallet.accountStore.getAccountsByType((0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT);\n        // Return first existing DApp account or create a new one\n        if (dappAccounts.length > 0) return dappAccounts[0];\n        // No DApp accounts exist, create one\n        return await this.wallet.newAccount((0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT);\n    }\n    /**\n     * Disconnect from the current dApp session\n     */ disconnect() {\n        if (this.provider) {\n            this.provider.disconnect();\n            this.provider = null;\n        }\n        this.isConnected = false;\n        this.currentAccount = null;\n    }\n    /**\n     * Set up handlers for dApp requests\n     */ setupHandlers() {\n        if (!this.provider) return;\n        // Handle message signing requests\n        this.provider.onSignMessage(async (request)=>{\n            try {\n                const account = this.getAccountByAddress(request.account);\n                if (!account) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InvalidParams, `Account ${request.account} not found`);\n                // Request approval for message signing\n                if (this.approvalCallbacks.approveMessage && this.connectedDApp) {\n                    const approvalDetails = {\n                        dApp: this.connectedDApp,\n                        account: request.account,\n                        message: request.message,\n                        messagePreview: request.message.length > 100 ? request.message.substring(0, 100) + '...' : request.message\n                    };\n                    const approved = await this.approvalCallbacks.approveMessage(approvalDetails);\n                    if (!approved) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).RequestRejected, 'Message signing rejected by user');\n                }\n                return this.wallet.signMessage(request.message, request.account);\n            } catch (error) {\n                throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InternalError, error instanceof Error ? error.message : 'Failed to sign message');\n            }\n        });\n        // Handle get account requests\n        this.provider.on('wallet_getAccount', async ()=>{\n            if (!this.currentAccount) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InternalError, 'No account selected');\n            const primaryAddress = this.currentAccount.getPrimaryAddressKey();\n            return primaryAddress.address;\n        });\n        // Handle get accounts (multiple) requests - only return DApp accounts\n        this.provider.on('wallet_getAccounts', async ()=>{\n            const dappAccounts = this.wallet.accountStore.getAccountsByType((0, $6f559318d8845d29$export$b8ca5fa4899cbfc7).DAPP_ACCOUNT);\n            const addresses = [];\n            // Return addresses from all DApp accounts\n            for (const account of dappAccounts){\n                const primaryAddress = account.getPrimaryAddressKey();\n                addresses.push(primaryAddress.address);\n            }\n            return addresses;\n        });\n        // Handle transaction signing requests\n        this.provider.on('wallet_signTransaction', async (request)=>{\n            try {\n                const account = this.getAccountByAddress(request.account);\n                if (!account) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InvalidParams, `Account ${request.account} not found`);\n                // Request approval for transaction signing\n                if (this.approvalCallbacks.approveTransaction && this.connectedDApp) {\n                    // Parse transaction to extract readable details\n                    let totalAmount = 'Unknown';\n                    let fees = 'Unknown';\n                    try {\n                        const tempBuilder = this.wallet.newTransaction(account, request.hex);\n                        const tx = tempBuilder.transactionBuilder.build();\n                        // Calculate total NEXA amount being sent (excluding change)\n                        let nexaTotal = 0n;\n                        for (const output of tx.outputs)if (output.value != BigInt((0, $hgUW1$Transaction).DUST_AMOUNT)) nexaTotal += output.value;\n                        // Estimate fees\n                        const estimatedFee = tx.estimateRequiredFee();\n                        totalAmount = nexaTotal.toString();\n                        fees = estimatedFee.toString();\n                    } catch (error) {\n                        // If parsing fails, keep default \"Unknown\" values\n                        console.warn('Failed to parse transaction for approval details:', error);\n                    }\n                    // Extract token outputs from transaction hex\n                    const tokenOutputs = $d838721b0af30ac5$var$getTokenOutputsFromTx(request.hex, this.wallet.network);\n                    const approvalDetails = {\n                        dApp: this.connectedDApp,\n                        account: request.account,\n                        transactionHex: request.hex,\n                        broadcast: request.broadcast || false,\n                        totalAmount: totalAmount,\n                        fees: fees,\n                        tokenOutputs: tokenOutputs.length > 0 ? tokenOutputs : undefined\n                    };\n                    const approved = await this.approvalCallbacks.approveTransaction(approvalDetails);\n                    if (!approved) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).RequestRejected, 'Transaction signing rejected by user');\n                }\n                // Parse and sign the transaction\n                let txBuilder = this.wallet.newTransaction(account, request.hex);\n                txBuilder = txBuilder.sign();\n                const tx = await txBuilder.build();\n                // Broadcast if requested\n                if (request.broadcast) return await this.wallet.sendTransaction(tx); // Return just the txId string\n                return tx; // Return just the transaction hex string\n            } catch (error) {\n                throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InternalError, error instanceof Error ? error.message : 'Failed to sign transaction');\n            }\n        });\n        // Handle send transaction requests\n        this.provider.on('wallet_sendTransaction', async (request)=>{\n            try {\n                const account = this.getAccountByAddress(request.from);\n                if (!account) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InvalidParams, `Account ${request.from} not found`);\n                // Calculate total amount\n                let totalAmount = BigInt(0);\n                for (const recipient of request.to)if (!recipient.token) totalAmount += BigInt(recipient.amount);\n                // Request approval for sending transaction\n                if (this.approvalCallbacks.approveSendTransaction && this.connectedDApp) {\n                    const approvalDetails = {\n                        dApp: this.connectedDApp,\n                        fromAccount: request.from,\n                        recipients: request.to,\n                        totalAmount: totalAmount.toString(),\n                        opReturn: request.data\n                    };\n                    const approved = await this.approvalCallbacks.approveSendTransaction(approvalDetails);\n                    if (!approved) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).RequestRejected, 'Send transaction rejected by user');\n                }\n                let txBuilder = this.wallet.newTransaction(account).onNetwork(this.wallet.network);\n                // Add recipients\n                for (const recipient of request.to)if (recipient.token) txBuilder = txBuilder.sendToToken(recipient.address, recipient.amount, recipient.token);\n                else txBuilder = txBuilder.sendTo(recipient.address, recipient.amount);\n                // Add OP_RETURN data if provided\n                if (request.data) txBuilder = txBuilder.addOpReturn(request.data);\n                // Build and send the transaction\n                const tx = await txBuilder.populate().sign().build();\n                const txId = await this.wallet.sendTransaction(tx);\n                return {\n                    txId: txId,\n                    hex: tx\n                };\n            } catch (error) {\n                throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InternalError, error instanceof Error ? error.message : 'Failed to send transaction');\n            }\n        });\n        // Handle network switching requests\n        this.provider.on('wallet_switchNetwork', async (request)=>{\n            try {\n                // Validate network\n                const network = (0, $hgUW1$Networks).get(request.network);\n                if (!network) throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InvalidParams, `Unknown network: ${request.network}`);\n                // Reconnect to the new network\n                await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).connect(request.network);\n                return {\n                    success: true,\n                    network: request.network\n                };\n            } catch (error) {\n                throw new (0, $hgUW1$JsonRpcError)((0, $hgUW1$JsonRpcErrorCode).InternalError, error instanceof Error ? error.message : 'Failed to switch network');\n            }\n        });\n        // Handle add token requests\n        this.provider.on('wallet_addToken', async (request)=>{\n            // This would need implementation based on how tokens are tracked\n            // For now, we'll acknowledge but not implement\n            console.log('Add token request:', request);\n            return {\n                success: true\n            };\n        });\n        // Handle peer disconnect\n        this.provider.onPeerDisconnect(()=>{\n            console.log('DApp disconnected');\n            this.isConnected = false;\n        });\n        // Handle connection close\n        this.provider.onClose(()=>{\n            console.log('Connection closed');\n            this.isConnected = false;\n        });\n    }\n    /**\n     * Get an account by its address\n     */ getAccountByAddress(address) {\n        const accounts = this.wallet.accountStore.listAccounts();\n        for (const [_, account] of accounts){\n            const addresses = account.getAddresses();\n            if (addresses.some((addr)=>addr.address === address)) return account;\n        }\n        return null;\n    }\n    /**\n     * Switch the active account\n     */ setActiveAccount(account) {\n        this.currentAccount = account;\n    }\n    /**\n     * Get the current active account\n     */ getActiveAccount() {\n        return this.currentAccount;\n    }\n    /**\n     * Check if connected to a dApp\n     */ isConnectedToDApp() {\n        return this.isConnected;\n    }\n    /**\n     * Get the current session details\n     */ getSessionInfo() {\n        if (!this.provider) return null;\n        return this.provider.getSessionInfo();\n    }\n}\n\n\n\n\n\nclass $b55de282653776c6$export$80793d8292a1630a {\n    /**\n     * Creates a new DAppCommsProvider instance\n     * @param relayUrl The WalletComms relay server URL\n     * @param dAppInfo Information about your dApp\n     * @param network Optional network (defaults to mainnet)\n     */ constructor(relayUrl, dAppInfo, network = 'mainnet'){\n        this.watchOnlyWallet = null;\n        this.connectedWalletAddress = null;\n        this.currentNetwork = 'mainnet';\n        this.provider = new (0, $hgUW1$WalletProvider)(relayUrl, dAppInfo);\n        this.currentNetwork = network;\n    }\n    /**\n     * Connect to the WalletComms relay server\n     * @returns Promise resolving when connected\n     */ async connect() {\n        await this.provider.connect();\n        // Connect to the appropriate network\n        await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).connect(this.currentNetwork);\n    }\n    /**\n     * Get the pairing URI for QR code display\n     * @returns The pairing URI string\n     */ getPairingURI() {\n        return this.provider.getPairingURI();\n    }\n    /**\n     * Wait for a wallet to connect\n     * @param timeout Timeout in milliseconds (default 30000)\n     * @returns Promise resolving to the wallet address\n     */ async waitForWallet(timeout = 30000) {\n        try {\n            // Use the built-in waitForWallet method from WalletProvider\n            const walletAddress = await this.provider.waitForWallet(timeout);\n            this.connectedWalletAddress = walletAddress;\n            // Create WatchOnlyWallet with the connected address\n            this.watchOnlyWallet = new (0, $d3558bc9d24bb18b$export$2e2bcd8739ae039)([\n                {\n                    address: walletAddress\n                }\n            ], this.currentNetwork);\n            return walletAddress;\n        } catch (error) {\n            throw new Error(`Failed to connect wallet: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        }\n    }\n    /**\n     * Send NEXA to an address\n     * @param toAddress Destination address\n     * @param amount Amount in satoshis (as string)\n     * @param opReturnData Optional OP_RETURN data\n     * @param broadcast Whether to broadcast immediately (default true)\n     * @returns Promise resolving to transaction ID or signed hex\n     */ async sendTransaction(toAddress, amount, opReturnData, broadcast = true) {\n        if (!this.watchOnlyWallet || !this.connectedWalletAddress) throw new Error('No wallet connected');\n        // Create unsigned transaction using WatchOnlyWallet\n        let txBuilder = this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).sendTo(toAddress, amount);\n        // Add OP_RETURN data if provided\n        if (opReturnData) txBuilder = txBuilder.addOpReturn(opReturnData);\n        // Populate and build unsigned transaction\n        const unsignedTx = await txBuilder.populate().build();\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Send tokens to an address\n     * @param toAddress Destination address\n     * @param amount Amount of tokens (as string)\n     * @param tokenId Token ID\n     * @param opReturnData Optional OP_RETURN data\n     * @param broadcast Whether to broadcast immediately (default true)\n     * @returns Promise resolving to transaction ID or signed hex\n     */ async sendTokenTransaction(toAddress, amount, tokenId, opReturnData, broadcast = true) {\n        if (!this.watchOnlyWallet || !this.connectedWalletAddress) throw new Error('No wallet connected');\n        // Create unsigned token transaction\n        let txBuilder = this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).sendToToken(toAddress, amount, tokenId);\n        // Add OP_RETURN data if provided\n        if (opReturnData) txBuilder = txBuilder.addOpReturn(opReturnData);\n        // Populate and build unsigned transaction\n        const unsignedTx = await txBuilder.populate().build();\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Create and mint a new token\n     * @param name Token name\n     * @param ticker Token ticker symbol\n     * @param decimals Number of decimal places\n     * @param docUrl URL to token documentation\n     * @param docHash Hash of token documentation\n     * @param broadcast Whether to broadcast immediately (default true)\n     * @returns Promise resolving to transaction ID or signed hex\n     */ async createToken(name, ticker, decimals, docUrl, docHash, broadcast = true) {\n        if (!this.watchOnlyWallet || !this.connectedWalletAddress) throw new Error('No wallet connected');\n        // Create token creation transaction\n        const unsignedTx = await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).token(name, ticker, decimals, docUrl, docHash).populate().build();\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Create and mint a new NFT collection\n     * @param name Collection name\n     * @param ticker Collection ticker symbol\n     * @param docUrl URL to collection documentation\n     * @param docHash Hash of collection documentation\n     * @param broadcast Whether to broadcast immediately (default true)\n     * @returns Promise resolving to transaction ID or signed hex\n     */ async createCollection(name, ticker, docUrl, docHash, broadcast = true) {\n        if (!this.watchOnlyWallet || !this.connectedWalletAddress) throw new Error('No wallet connected');\n        // Create collection creation transaction\n        const unsignedTx = await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).collection(name, ticker, docUrl, docHash).populate().build();\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Create and mint an NFT within a collection\n     * @param parentCollection Parent collection token ID\n     * @param zipUrl URL to NFT content ZIP file\n     * @param zipHash Hash of NFT content ZIP file\n     * @param broadcast Whether to broadcast immediately (default true)\n     * @returns Promise resolving to transaction ID or signed hex\n     */ async createNFT(parentCollection, zipUrl, zipHash, broadcast = true) {\n        if (!this.watchOnlyWallet || !this.connectedWalletAddress) throw new Error('No wallet connected');\n        // Create NFT creation transaction\n        const unsignedTx = await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).nft(parentCollection, zipUrl, zipHash).populate().build();\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Create and mint an SFT (Semi-Fungible Token) within a collection with specified quantity\n     * @param parentCollection Parent collection token ID\n     * @param zipUrl URL to SFT content ZIP file\n     * @param zipHash Hash of SFT content ZIP file\n     * @param quantity Quantity of SFTs to create\n     * @param broadcast Whether to broadcast immediately (default true)\n     * @returns Promise resolving to transaction ID or signed hex\n     */ async createSFT(parentCollection, zipUrl, zipHash, quantity, broadcast = true) {\n        if (!this.watchOnlyWallet || !this.connectedWalletAddress) throw new Error('No wallet connected');\n        // Create SFT creation transaction\n        const unsignedTx = await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).sft(parentCollection, zipUrl, zipHash, quantity).populate().build();\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Sign an arbitrary unsigned transaction\n     * @param unsignedTx Unsigned transaction hex string\n     * @param sighashSpec Optional sighash specification for selective signing\n     * @param broadcast Whether to broadcast immediately (default false)\n     * @returns Promise resolving to transaction ID (if broadcast) or signed hex\n     */ async signTransaction(unsignedTx, sighashSpec, broadcast = false) {\n        if (!this.connectedWalletAddress) throw new Error('No wallet connected');\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Build an unsigned transaction without signing\n     * @param toAddress Destination address\n     * @param amount Amount in satoshis (as string)\n     * @param tokenId Optional token ID for token transfers\n     * @param opReturnData Optional OP_RETURN data\n     * @returns Promise resolving to unsigned transaction hex\n     */ async buildTransaction(toAddress, amount, tokenId, opReturnData) {\n        if (!this.watchOnlyWallet) throw new Error('No wallet connected');\n        let txBuilder = this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork);\n        if (tokenId) txBuilder = txBuilder.sendToToken(toAddress, amount, tokenId);\n        else txBuilder = txBuilder.sendTo(toAddress, amount);\n        if (opReturnData) txBuilder = txBuilder.addOpReturn(opReturnData);\n        return await txBuilder.populate().build();\n    }\n    /**\n     * Build an unsigned token creation transaction\n     * @param name Token name\n     * @param ticker Token ticker symbol\n     * @param decimals Number of decimal places\n     * @param docUrl URL to token documentation\n     * @param docHash Hash of token documentation\n     * @returns Promise resolving to unsigned transaction hex\n     */ async buildTokenCreation(name, ticker, decimals, docUrl, docHash) {\n        if (!this.watchOnlyWallet) throw new Error('No wallet connected');\n        return await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).token(name, ticker, decimals, docUrl, docHash).populate().build();\n    }\n    /**\n     * Build an unsigned collection creation transaction\n     * @param name Collection name\n     * @param ticker Collection ticker symbol\n     * @param docUrl URL to collection documentation\n     * @param docHash Hash of collection documentation\n     * @returns Promise resolving to unsigned transaction hex\n     */ async buildCollectionCreation(name, ticker, docUrl, docHash) {\n        if (!this.watchOnlyWallet) throw new Error('No wallet connected');\n        return await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).collection(name, ticker, docUrl, docHash).populate().build();\n    }\n    /**\n     * Build an unsigned NFT creation transaction\n     * @param parentCollection Parent collection token ID\n     * @param zipUrl URL to NFT content ZIP file\n     * @param zipHash Hash of NFT content ZIP file\n     * @returns Promise resolving to unsigned transaction hex\n     */ async buildNFTCreation(parentCollection, zipUrl, zipHash) {\n        if (!this.watchOnlyWallet) throw new Error('No wallet connected');\n        return await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).nft(parentCollection, zipUrl, zipHash).populate().build();\n    }\n    /**\n     * Build an unsigned SFT creation transaction\n     * @param parentCollection Parent collection token ID\n     * @param zipUrl URL to SFT content ZIP file\n     * @param zipHash Hash of SFT content ZIP file\n     * @param quantity Quantity of SFTs to create\n     * @returns Promise resolving to unsigned transaction hex\n     */ async buildSFTCreation(parentCollection, zipUrl, zipHash, quantity) {\n        if (!this.watchOnlyWallet) throw new Error('No wallet connected');\n        return await this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork).sft(parentCollection, zipUrl, zipHash, quantity).populate().build();\n    }\n    /**\n     * Initialize WatchOnlyWallet with multiple addresses\n     * @param addresses Array of addresses to watch\n     */ initializeWatchOnly(addresses) {\n        this.watchOnlyWallet = new (0, $d3558bc9d24bb18b$export$2e2bcd8739ae039)(addresses.map((addr)=>({\n                address: addr\n            })), this.currentNetwork);\n    }\n    /**\n     * Create a custom unsigned transaction\n     * @param txBuilder Function that configures the transaction builder\n     * @param sighashSpec Optional sighash specification for selective signing\n     * @param broadcast Whether to broadcast immediately (default true)\n     * @returns Promise resolving to transaction ID or signed hex\n     */ async createCustomTransaction(txBuilder, sighashSpec, broadcast = true) {\n        if (!this.watchOnlyWallet || !this.connectedWalletAddress) throw new Error('No wallet connected');\n        // Create custom transaction using provided builder function\n        const builder = this.watchOnlyWallet.newTransaction().onNetwork(this.currentNetwork);\n        const configuredBuilder = txBuilder(builder);\n        const unsignedTx = await configuredBuilder.populate().build();\n        return await this.provider.signTransaction(this.connectedWalletAddress, unsignedTx, broadcast);\n    }\n    /**\n     * Sign a message with the connected wallet\n     * @param message Message to sign\n     * @returns Promise resolving to the signature\n     */ async signMessage(message) {\n        if (!this.connectedWalletAddress) throw new Error('No wallet connected');\n        return await this.provider.signMessage(this.connectedWalletAddress, message);\n    }\n    /**\n     * Switch to a different network\n     * @param network Network name or identifier\n     * @returns Promise resolving when network is switched\n     */ async switchNetwork(network) {\n        await this.provider.switchNetwork(network);\n        this.currentNetwork = network;\n        // Reconnect rostrum provider to new network\n        await (0, $884ce55f1db7e177$export$eaa49f0478d81b9d).connect(network);\n        // Update watch-only wallet network if connected\n        if (this.watchOnlyWallet && this.connectedWalletAddress) this.watchOnlyWallet = new (0, $d3558bc9d24bb18b$export$2e2bcd8739ae039)([\n            {\n                address: this.connectedWalletAddress\n            }\n        ], network);\n    }\n    /**\n     * Get the currently connected wallet address\n     * @returns Wallet address or null if not connected\n     */ getConnectedWallet() {\n        return this.connectedWalletAddress;\n    }\n    /**\n     * Check if a wallet is currently connected\n     * @returns True if wallet is connected\n     */ isConnected() {\n        return this.connectedWalletAddress !== null;\n    }\n    /**\n     * Get the current network\n     * @returns Current network identifier\n     */ getCurrentNetwork() {\n        return this.currentNetwork;\n    }\n    /**\n     * Get the underlying WatchOnlyWallet instance\n     * @returns WatchOnlyWallet instance or null if not connected\n     */ getWatchOnlyWallet() {\n        return this.watchOnlyWallet;\n    }\n    /**\n     * Disconnect from the wallet\n     */ disconnect() {\n        this.provider.disconnect();\n        this.watchOnlyWallet = null;\n        this.connectedWalletAddress = null;\n    }\n    /**\n     * Set up event listeners for wallet events\n     * @param event Event name\n     * @param callback Event callback\n     */ on(event, callback) {\n        this.provider.on(event, callback);\n    }\n    /**\n     * Remove event listeners\n     * @param event Event name\n     */ off(event) {\n        this.provider.off(event);\n    }\n    /**\n     * Set up wallet disconnect event listener\n     * @param callback Function to call when wallet disconnects\n     */ onWalletDisconnect(callback) {\n        this.provider.onPeerDisconnect(()=>{\n            this.watchOnlyWallet = null;\n            this.connectedWalletAddress = null;\n            callback();\n        });\n    }\n    /**\n     * Set up connection close event listener\n     * @param callback Function to call when connection closes\n     */ onConnectionClose(callback) {\n        this.provider.onClose(()=>{\n            this.watchOnlyWallet = null;\n            this.connectedWalletAddress = null;\n            callback();\n        });\n    }\n}\nvar $b55de282653776c6$export$2e2bcd8739ae039 = $b55de282653776c6$export$80793d8292a1630a;\n\n\n\n\n\n/**\n * Guards against multiple instances of the wallet SDK being loaded.\n * This prevents conflicts and ensures only one version is active at a time.\n * @param version - The version string to check\n * @throws {Error} When multiple instances are detected\n */ function $149c1bd638913645$var$versionGuard(version) {\n    if (version !== undefined) {\n        let message = \"More than one instance of Wallet SDKPlease make sure to require Wallet SDK and check that submodules do not also include their own Wallet SDK dependency.\";\n        throw new Error(message);\n    }\n}\n$149c1bd638913645$var$versionGuard($parcel$global._walletSdk_ver);\n$parcel$global._walletSdk_ver = `v${0, $df64573ef6d51081$exports.version}`;\n/**\n * Wallet SDK - A TypeScript SDK for the Nexa blockchain\n *\n * This SDK provides comprehensive wallet functionality including:\n * - Creating and managing wallets from seed phrases or private keys\n * - Account management with different account types\n * - Transaction building and signing\n * - Token operations and management\n * - Message signing and verification\n *\n * @example\n * ```typescript\n * import { Wallet } from 'wallet-sdk-ts';\n *\n * // Create a new wallet\n * const wallet = Wallet.create();\n *\n * // Or restore from seed phrase\n * const wallet = Wallet.fromSeedPhrase('your seed phrase here');\n *\n * // Initialize and discover accounts\n * await wallet.initialize();\n * ```\n */ const $149c1bd638913645$var$walletSdk = {\n    versionGuard: $149c1bd638913645$var$versionGuard,\n    version: `v${(0, $df64573ef6d51081$exports.version)}`,\n    Wallet: $8265cc68049fe82c$export$2e2bcd8739ae039\n};\nvar $149c1bd638913645$export$2e2bcd8739ae039 = $149c1bd638913645$var$walletSdk;\n\n\nexport {$149c1bd638913645$export$2e2bcd8739ae039 as default, $8265cc68049fe82c$export$2e2bcd8739ae039 as Wallet, $d3558bc9d24bb18b$export$2e2bcd8739ae039 as WatchOnlyWallet, $6f559318d8845d29$export$b8ca5fa4899cbfc7 as AccountType, $6f559318d8845d29$export$dcc1fb6ad5308e56 as TxTokenType, $6f559318d8845d29$export$8d986bd2866fe6ab as isValidNexaAddress, $006d7f03de390713$export$2e2bcd8739ae039 as ValidationUtils, $b76a3f2ef1862027$export$c54c8796e94a37a0 as BaseAccount, $5c605efdbcfd6698$export$2e2bcd8739ae039 as DefaultAccount, $448355556707518b$export$2e2bcd8739ae039 as DappAccount, $ce8955c0465759ad$export$2e2bcd8739ae039 as VaultAccount, $7e26340ce0f64954$export$2e2bcd8739ae039 as AccountStore, $d71d9063d6876a10$export$2e2bcd8739ae039 as WalletTransactionCreator, $fab743d51c8bbe7e$export$2e2bcd8739ae039 as WatchOnlyTransactionCreator, $884ce55f1db7e177$export$eaa49f0478d81b9d as rostrumProvider, $d838721b0af30ac5$export$11e896a2f3ae4119 as WalletCommsIntegration, $b55de282653776c6$export$80793d8292a1630a as DAppCommsProvider, $5358ccf67a3d811b$export$618de809a659cb44 as AUTO_APPROVE_CALLBACKS, $149c1bd638913645$re_export$SighashType as SighashType, $441c371114e3ba96$export$94f569bf4eb0f6f6 as AccountKeysUtils};\n//# sourceMappingURL=index.web.mjs.map\n"],"names":["buffer","require$$0","Buffer","src","key","module","exports","crypto","browserModule","randomBytes","inherits_browserModule","ReflectApply","ReflectOwnKeys","NumberIsNaN","eventsModule","type","events","state","once","streamBrowser","shams","hasSymbols","abs","isNaN","sign","max","concatty","slicy","Empty","implementation","require$$1","require$$2","require$$3","callBind","gOPD","getProto","undefined","require$$4","require$$5","require$$6","require$$7","require$$8","floor","require$$9","require$$10","min","require$$11","pow","require$$12","round","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","doEval","require$$23","require$$24","stringToPath","getBaseIntrinsic","callBound","isArguments","isRegex","safeRegexTest","isGeneratorFunction","reflectApply","isDocumentDotAll","isCallable","hasOwnProperty","forEachArray","forEachString","forEachObject","isArray","forEach","availableTypedArrays","gopd","defineDataProperty","hasPropertyDescriptors","setFunctionLength","actualApply","applyBind","whichTypedArray","isTypedArray","isBuffer","getOwnPropertyDescriptors","isString","x","isNull","isObject","isUndefined","hash","isFunction","isDate","base","isNumber","isSymbol","objectToString","pad","add","self","_defineProperty","_toPropertyKey","_classCallCheck","_defineProperties","_createClass","_toPrimitive","BufferList","err","destroy_1","NodeError","browser","_stream_writable","realHasInstance","get","keys","_stream_duplex","string_decoder","onlegacyfinish","onfinish","onend","onerror","onclose","onrequest","createReadableStreamAsyncIterator","_stream_readable","EElistenerCount","debug","n","set","_stream_transform","_stream_passthrough","toBuffer","hashBase","rotl","ripemd160","toString","isarray","typedArrayBuffer","isView","Hash","sha","sha256","sha224","dh","sha512","SHA512","sha384","createHash","md5","createHmac","makeHash","pbkdf2","hmac","nextTick","utils","cbc","des","modes","xor","aes","ghash","toNumber","comb10MulTo","ws","split","prime","mont","this","brorandModule","bn","brorand","primes","generatePrime","processNextickArgsModule","util","allocate","cachedProperty","validate","curve","obj","negate","common","SHA256","SHA224","SHA384","curves","ec","signature","e","eddsa","toBytes","elliptic","asn1","api","reporter","isEmpty","node","child","constants","der","der_1","pem","decoders","encoders","asn1_1","cipher","fixProc","signModule","mgf","publicEncrypt","privateDecrypt","safeBuffer","bytes","algos","c.createHash","c.createHmac","c.randomBytes","c.pbkdf2","c.pbkdf2Sync","Symbol","objectProto","nativeObjectToString","symToStringTag","reTrimStart","funcTag","funcProto","funcToString","WeakMap","argsTag","freeExports","freeModule","moduleExports","dateTag","mapTag","numberTag","objectTag","setTag","stringTag","weakMapTag","dataViewTag","types","Map","DataView","Promise","Set","isInteger","parseInt","RoundingModes","bigDecimal","ALPHABET","basex","$parcel$global","$df64573ef6d51081$exports","$hgUW1$isString","$hgUW1$isNumber","$hgUW1$isUndefined","$hgUW1$isObject","$hgUW1$isNil","$hgUW1$isInteger","$hgUW1$jsbigdecimal","$hgUW1$isArray","version","$hgUW1$inRange","$hgUW1$isNull","indexes","$hgUW1$isEmpty","br","$hgUW1$isDate","$149c1bd638913645$var$versionGuard","isLE","_32n","u64.split","u64.rotrSH","u64.shrSH","u64.rotrSL","u64.shrSL","u64.rotrBH","u64.rotrBL","u64.add4L","u64.add4H","u64.add5L","u64.add5H","u64.add","u64.add3L","u64.add3H","sha512_256","SHA512_256","sha512_224","SHA512_224","SHA256n","sha256n","SHA224n","sha224n","SHA512n","sha512n","SHA384n","sha384n","SHA512_224n","sha512_224n","SHA512_256n","sha512_256n","parse","ms","UnsafeNumberReason","_typeof","LosslessNumber","value","pos","debug$1","ClusterOrder","ClusterDistribution","ClusterStatus","ClientState","ConnectionStatus","EventEmitter","tls","WebSocket","$hgUW1$isomorphicws","uri","$hgUW1$Networks","$hgUW1$ConnectionStatus","$hgUW1$ElectrumClient","txPromises","txEntities","$hgUW1$CommonUtils","$hgUW1$Address","$hgUW1$AddressType","group","amount","extraGroup","$hgUW1$GroupToken","$hgUW1$UnitUtils","$hgUW1$Transaction","$hgUW1$TransactionBuilder","$hgUW1$Script","$hgUW1$ScriptTemplateInput","$hgUW1$BufferUtils","$hgUW1$Opcode","$hgUW1$parseInt","$hgUW1$ScriptFactory","$hgUW1$Output","$149c1bd638913645$re_export$SighashType","$hgUW1$TxSigner","$hgUW1$TxSignature","$hgUW1$generateMnemonic","$hgUW1$wordlists","$hgUW1$mnemonicToSeedSync","$hgUW1$HDPrivateKey","$hgUW1$validateMnemonic","$hgUW1$isBuffer","$hgUW1$Message","$hgUW1$BNExtended","$hgUW1$DAppProvider","$hgUW1$JsonRpcError","$hgUW1$JsonRpcErrorCode","tx","$hgUW1$WalletProvider"],"mappings":"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G;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IACpD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAElD;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IACjD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IACpD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACjD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAEpD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IACnD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IACnD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IACpD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAEjD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IACpD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACnD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAElD;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACnD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IACnD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAElD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IACnD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IACpD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAEjD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,I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,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,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;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA,IACpC;AAAA,IAAY;AAAA,IAAY;AAAA,IAAY;AAAA;AAGtC,WAASpC,UAAS;AAChB,QAAI,EAAE,gBAAgBA;AACpB,aAAO,IAAIA,QAAM;AAEnB,cAAU,KAAK,IAAI;AACnB,SAAK,IAAI;AAAA,MACP;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,IAAU;AACxB,SAAK,IAAI;AACT,SAAK,IAAI,IAAI,MAAM,GAAG;AAAA,EACxB;AACA,EAAAS,OAAM,SAAST,SAAQ,SAAS;AAChC,SAAiBA;AAEjB,EAAAA,QAAO,YAAY;AACnB,EAAAA,QAAO,UAAU;AACjB,EAAAA,QAAO,eAAe;AACtB,EAAAA,QAAO,YAAY;AAEnB,EAAAA,QAAO,UAAU,gBAAgB,SAAS,cAAc,KAAK,OAAO;AAClE,QAAI,IAAI,KAAK;AAGb,aAAS,IAAI,GAAG,IAAI,IAAI;AACtB,QAAE,CAAC,IAAI,IAAI,QAAQ,CAAC;AACtB,WAAO,IAAI,EAAE,QAAQ,KAAK,GAAG;AAC3B,UAAI,QAAQ,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACxC,UAAI,QAAQ,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACxC,UAAI,QAAQ,EAAE,IAAI,EAAE;AACpB,UAAI,QAAQ,EAAE,IAAI,EAAE;AACpB,UAAI,QAAQ,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AAC1C,UAAI,QAAQ,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AAC1C,UAAI,QAAQ,EAAE,IAAI,EAAE;AACpB,UAAI,QAAQ,EAAE,IAAI,EAAE;AAEpB,QAAE,CAAC,IAAI;AAAA,QACL;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,MAAK;AACd,QAAE,IAAI,CAAC,IAAI;AAAA,QACT;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,MAAK;AAAA,IAClB;AAAA,EACA;AAEA,EAAAA,QAAO,UAAU,UAAU,SAAS,QAAQ,KAAK,OAAO;AACtD,SAAK,cAAc,KAAK,KAAK;AAE7B,QAAI,IAAI,KAAK;AAEb,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAIF,MAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,CAAC;AACjB,QAAI,KAAK,KAAK,EAAE,EAAE;AAClB,QAAI,KAAK,KAAK,EAAE,EAAE;AAClB,QAAI,KAAK,KAAK,EAAE,EAAE;AAClB,QAAI,KAAK,KAAK,EAAE,EAAE;AAClB,QAAI,KAAK,KAAK,EAAE,EAAE;AAClB,QAAI,KAAK,KAAK,EAAE,EAAE;AAElB,WAAO,KAAK,EAAE,WAAW,EAAE,MAAM;AACjC,aAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,GAAG;AACpC,UAAI,QAAQ;AACZ,UAAI,QAAQ;AACZ,UAAI,QAAQ,UAAU,IAAI,EAAE;AAC5B,UAAI,QAAQ,UAAU,IAAI,EAAE;AAC5B,UAAI,QAAQ,QAAQ,IAAI,IAAI,IAAI,IAAI,EAAM;AAC1C,UAAI,QAAQ,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC1C,UAAI,QAAQ,KAAK,EAAE,CAAC;AACpB,UAAI,QAAQ,KAAK,EAAE,IAAI,CAAC;AACxB,UAAI,QAAQ,EAAE,CAAC;AACf,UAAI,QAAQ,EAAE,IAAI,CAAC;AAEnB,UAAI,QAAQ;AAAA,QACV;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,MAAK;AACd,UAAI,QAAQ;AAAA,QACV;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,QACP;AAAA,QAAO;AAAA,MAAK;AAEd,cAAQ,UAAU,IAAI,EAAE;AACxB,cAAQ,UAAU,IAAI,EAAE;AACxB,cAAQ,SAAS,IAAI,IAAI,IAAI,IAAI,EAAM;AACvC,cAAQ,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAEvC,UAAI,QAAQ,SAAS,OAAO,OAAO,OAAO,KAAK;AAC/C,UAAI,QAAQ,SAAS,OAAO,OAAO,OAAO,KAAK;AAE/C,WAAK;AACL,WAAK;AAEL,WAAK;AACL,WAAK;AAEL,WAAK;AACL,WAAK;AAEL,WAAK,SAASA,KAAI,IAAI,OAAO,KAAK;AAClC,WAAK,SAAS,IAAI,IAAI,OAAO,KAAK;AAElC,MAAAA,MAAK;AACL,WAAK;AAEL,WAAK;AACL,WAAK;AAEL,WAAK;AACL,WAAK;AAEL,WAAK,SAAS,OAAO,OAAO,OAAO,KAAK;AACxC,WAAK,SAAS,OAAO,OAAO,OAAO,KAAK;AAAA,IAC5C;AAEE,UAAM,KAAK,GAAG,GAAG,IAAI,EAAE;AACvB,UAAM,KAAK,GAAG,GAAG,IAAI,EAAE;AACvB,UAAM,KAAK,GAAG,GAAG,IAAI,EAAE;AACvB,UAAM,KAAK,GAAG,GAAGA,KAAI,EAAE;AACvB,UAAM,KAAK,GAAG,GAAG,IAAI,EAAE;AACvB,UAAM,KAAK,GAAG,IAAI,IAAI,EAAE;AACxB,UAAM,KAAK,GAAG,IAAI,IAAI,EAAE;AACxB,UAAM,KAAK,GAAG,IAAI,IAAI,EAAE;AAAA,EAC1B;AAEA,EAAAE,QAAO,UAAU,UAAU,SAAS,OAAO,KAAK;AAC9C,QAAI,QAAQ;AACV,aAAOS,OAAM,QAAQ,KAAK,GAAG,KAAK;AAAA;AAElC,aAAOA,OAAM,QAAQ,KAAK,GAAG,KAAK;AAAA,EACtC;AAEA,WAAS,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI;AACnC,QAAI,IAAK,KAAK,KAAQ,CAAC,KAAM;AAC7B,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,QAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACvC,QAAI,IAAK,KAAK,KAAQ,CAAC,KAAM;AAC7B,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI;AACpC,QAAI,IAAK,KAAK,KAAO,KAAK,KAAO,KAAK;AACtC,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,SAAS,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,QAAI,IAAK,KAAK,KAAO,KAAK,KAAO,KAAK;AACtC,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAC/B,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAE/B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAC/B,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAE/B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAE/B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAE/B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAC/B,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAC/B,QAAI,QAAQ,SAAS,IAAI,IAAI,CAAC;AAE9B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAC/B,QAAI,QAAQ,UAAU,IAAI,IAAI,CAAC;AAC/B,QAAI,QAAQ,SAAS,IAAI,IAAI,CAAC;AAE9B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,SAAS,IAAI,IAAI,CAAC;AAE9B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;AAEA,WAAS,UAAU,IAAI,IAAI;AACzB,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,UAAU,IAAI,IAAI,EAAE;AAChC,QAAI,QAAQ,SAAS,IAAI,IAAI,CAAC;AAE9B,QAAI,IAAI,QAAQ,QAAQ;AACxB,QAAI,IAAI;AACN,WAAK;AACP,WAAO;AAAA,EACT;;;;;;;;ACvUA,MAAIA,SAAQ9J,aAAA;AAEZ,MAAIqJ,UAASxH,YAAA;AAEb,WAAS+J,UAAS;AAChB,QAAI,EAAE,gBAAgBA;AACpB,aAAO,IAAIA,QAAM;AAEnB,IAAAvC,QAAO,KAAK,IAAI;AAChB,SAAK,IAAI;AAAA,MACP;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,IAAU;AAAA,EAC1B;AACA,EAAAS,OAAM,SAAS8B,SAAQvC,OAAM;AAC7B,SAAiBuC;AAEjB,EAAAA,QAAO,YAAY;AACnB,EAAAA,QAAO,UAAU;AACjB,EAAAA,QAAO,eAAe;AACtB,EAAAA,QAAO,YAAY;AAEnB,EAAAA,QAAO,UAAU,UAAU,SAAS,OAAO,KAAK;AAC9C,QAAI,QAAQ;AACV,aAAO9B,OAAM,QAAQ,KAAK,EAAE,MAAM,GAAG,EAAE,GAAG,KAAK;AAAA;AAE/C,aAAOA,OAAM,QAAQ,KAAK,EAAE,MAAM,GAAG,EAAE,GAAG,KAAK;AAAA,EACnD;;;;;;;AChCA,MAAA,OAAe9J,UAAA;AACf,MAAA,SAAiB6B,YAAA;AACjB,MAAA,SAAiBC,YAAA;AACjB,MAAA,SAAiBC,YAAA;AACjB,MAAA,SAAiBK,YAAA;;;;;;;;ACJjB,MAAI0H,SAAQ9J,aAAA;AACZ,MAAIyL,UAAS5J,gBAAA;AAEb,MAAI,SAASiI,OAAM;AACnB,MAAI,QAAQA,OAAM;AAClB,MAAI,UAAUA,OAAM;AACpB,MAAI,UAAUA,OAAM;AACpB,MAAI,YAAY2B,QAAO;AAEvB,WAAS,YAAY;AACnB,QAAI,EAAE,gBAAgB;AACpB,aAAO,IAAI,UAAS;AAEtB,cAAU,KAAK,IAAI;AAEnB,SAAK,IAAI,CAAE,YAAY,YAAY,YAAY,WAAY,UAAU;AACrE,SAAK,SAAS;AAAA,EAChB;AACA,EAAA3B,OAAM,SAAS,WAAW,SAAS;AACnC,SAAA,YAAoB;AAEpB,YAAU,YAAY;AACtB,YAAU,UAAU;AACpB,YAAU,eAAe;AACzB,YAAU,YAAY;AAEtB,YAAU,UAAU,UAAU,SAAS,OAAO,KAAK,OAAO;AACxD,QAAI,IAAI,KAAK,EAAE,CAAC;AAChB,QAAI,IAAI,KAAK,EAAE,CAAC;AAChB,QAAI,IAAI,KAAK,EAAE,CAAC;AAChB,QAAI,IAAI,KAAK,EAAE,CAAC;AAChB,QAAI,IAAI,KAAK,EAAE,CAAC;AAChB,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AACT,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,UAAI,IAAI;AAAA,QACN;AAAA,UACE,QAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC;AAAA,UACjD,EAAE,CAAC;AAAA,QAAC;AAAA,QACN;AAAA,MAAC;AACH,UAAI;AACJ,UAAI;AACJ,UAAI,OAAO,GAAG,EAAE;AAChB,UAAI;AACJ,UAAI;AACJ,UAAI;AAAA,QACF;AAAA,UACE,QAAQ,IAAI,EAAE,KAAK,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC;AAAA,UAC5D,GAAG,CAAC;AAAA,QAAC;AAAA,QACP;AAAA,MAAE;AACJ,WAAK;AACL,WAAK;AACL,WAAK,OAAO,IAAI,EAAE;AAClB,WAAK;AACL,WAAK;AAAA,IACT;AACE,QAAI,QAAQ,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE;AAC5B,SAAK,EAAE,CAAC,IAAI,QAAQ,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE;AACpC,SAAK,EAAE,CAAC,IAAI,QAAQ,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE;AACpC,SAAK,EAAE,CAAC,IAAI,QAAQ,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE;AACpC,SAAK,EAAE,CAAC,IAAI,QAAQ,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE;AACpC,SAAK,EAAE,CAAC,IAAI;AAAA,EACd;AAEA,YAAU,UAAU,UAAU,SAAS,OAAO,KAAK;AACjD,QAAI,QAAQ;AACV,aAAOA,OAAM,QAAQ,KAAK,GAAG,QAAQ;AAAA;AAErC,aAAOA,OAAM,QAAQ,KAAK,GAAG,QAAQ;AAAA,EACzC;AAEA,WAAS,EAAE,GAAG,GAAG,GAAG,GAAG;AACrB,QAAI,KAAK;AACP,aAAO,IAAI,IAAI;AAAA,aACR,KAAK;AACZ,aAAQ,IAAI,IAAO,CAAC,IAAK;AAAA,aAClB,KAAK;AACZ,cAAQ,IAAK,CAAC,KAAM;AAAA,aACb,KAAK;AACZ,aAAQ,IAAI,IAAM,IAAK,CAAC;AAAA;AAExB,aAAO,KAAK,IAAK,CAAC;AAAA,EACtB;AAEA,WAAS,EAAE,GAAG;AACZ,QAAI,KAAK;AACP,aAAO;AAAA,aACA,KAAK;AACZ,aAAO;AAAA,aACA,KAAK;AACZ,aAAO;AAAA,aACA,KAAK;AACZ,aAAO;AAAA;AAEP,aAAO;AAAA,EACX;AAEA,WAAS,GAAG,GAAG;AACb,QAAI,KAAK;AACP,aAAO;AAAA,aACA,KAAK;AACZ,aAAO;AAAA,aACA,KAAK;AACZ,aAAO;AAAA,aACA,KAAK;AACZ,aAAO;AAAA;AAEP,aAAO;AAAA,EACX;AAEA,MAAI,IAAI;AAAA,IACN;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAClD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IACnD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IACnD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA;AAGpD,MAAI,KAAK;AAAA,IACP;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACnD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAClD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAClD;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA;AAGpD,MAAI,IAAI;AAAA,IACN;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACrD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IACpD;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IACrD;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IACpD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA;AAGvD,MAAI,KAAK;AAAA,IACP;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IACrD;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IACpD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IACrD;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IACrD;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAG;AAAA,IAAG;AAAA,IAAI;AAAA,IAAI;AAAA,IAAI;AAAA;;;;;;;;AC9ItD,MAAIA,SAAQ9J,aAAA;AACZ,MAAI,SAAS6B,0BAAA;AAEb,WAAS,KAAKiE,OAAM3F,MAAK,KAAK;AAC5B,QAAI,EAAE,gBAAgB;AACpB,aAAO,IAAI,KAAK2F,OAAM3F,MAAK,GAAG;AAChC,SAAK,OAAO2F;AACZ,SAAK,YAAYA,MAAK,YAAY;AAClC,SAAK,UAAUA,MAAK,UAAU;AAC9B,SAAK,QAAQ;AACb,SAAK,QAAQ;AAEb,SAAK,MAAMgE,OAAM,QAAQ3J,MAAK,GAAG,CAAC;AAAA,EACpC;AACAyJ,WAAiB;AAEjB,OAAK,UAAU,QAAQ,SAAS,KAAKzJ,MAAK;AAExC,QAAIA,KAAI,SAAS,KAAK;AACpB,MAAAA,OAAM,IAAI,KAAK,KAAI,EAAG,OAAOA,IAAG,EAAE,OAAM;AAC1C,WAAOA,KAAI,UAAU,KAAK,SAAS;AAGnC,aAAS,IAAIA,KAAI,QAAQ,IAAI,KAAK,WAAW;AAC3C,MAAAA,KAAI,KAAK,CAAC;AAEZ,SAAK,IAAI,GAAG,IAAIA,KAAI,QAAQ;AAC1B,MAAAA,KAAI,CAAC,KAAK;AACZ,SAAK,QAAQ,IAAI,KAAK,KAAI,EAAG,OAAOA,IAAG;AAGvC,SAAK,IAAI,GAAG,IAAIA,KAAI,QAAQ;AAC1B,MAAAA,KAAI,CAAC,KAAK;AACZ,SAAK,QAAQ,IAAI,KAAK,KAAI,EAAG,OAAOA,IAAG;AAAA,EACzC;AAEA,OAAK,UAAU,SAAS,SAAS,OAAO,KAAK,KAAK;AAChD,SAAK,MAAM,OAAO,KAAK,GAAG;AAC1B,WAAO;AAAA,EACT;AAEA,OAAK,UAAU,SAAS,SAAS,OAAO,KAAK;AAC3C,SAAK,MAAM,OAAO,KAAK,MAAM,OAAM,CAAE;AACrC,WAAO,KAAK,MAAM,OAAO,GAAG;AAAA,EAC9B;;;;;;;;AC9CA,QAAI2F,QAAOzF;AAEX,IAAAyF,MAAK,QAAQ9F,aAAA;AACb,IAAA8F,MAAK,SAASjE,gBAAA;AACd,IAAAiE,MAAK,MAAMhE,WAAA;AACX,IAAAgE,MAAK,SAAS/D,cAAA;AACd,IAAA+D,MAAK,OAAO1D,YAAA;AAGZ,IAAA0D,MAAK,OAAOA,MAAK,IAAI;AACrB,IAAAA,MAAK,SAASA,MAAK,IAAI;AACvB,IAAAA,MAAK,SAASA,MAAK,IAAI;AACvB,IAAAA,MAAK,SAASA,MAAK,IAAI;AACvB,IAAAA,MAAK,SAASA,MAAK,IAAI;AACvB,IAAAA,MAAK,YAAYA,MAAK,OAAO;AAAA;;;;;;;;ACd7B,cAAiB;AAAA,IACf,SAAS;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,QACN;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;;;IAIN,KAAK;AAAA,MACH,KAAK;AAAA,MACL,QAAQ;AAAA,QACN;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AAAA,UACE;AAAA,UACA;AAAA;QAEF;AA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AM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306]}