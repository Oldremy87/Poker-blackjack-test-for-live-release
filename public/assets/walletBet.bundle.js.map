{"version":3,"file":"walletBet.bundle.js","sources":["../../src/walletBet.ts"],"sourcesContent":["// src/walletBet.ts\r\nimport { Buffer } from 'buffer';\r\nimport process from 'process';\r\nimport * as nodeCrypto from 'crypto-browserify';\r\n(globalThis as any).Buffer  ||= Buffer;\r\n(globalThis as any).process ||= process;\r\n(globalThis as any).__nodeCrypto = nodeCrypto;\r\nasync function sdk() {\r\n  return await import('nexa-wallet-sdk'); // aliased to browser ESM\r\n}\r\nconst KEY='kk_wallet_v1', IV='kk_wallet_iv_v1';\r\n\r\nasync function loadWallet(pass: string){\r\n  const rawB64 = localStorage.getItem(KEY) || '';\r\n  if (!rawB64) throw new Error('No local wallet. Visit Connect.');\r\n  const ivB64  = localStorage.getItem(IV)  || '';\r\n\r\n  const raw = atob(rawB64);\r\n  const ivb = atob(ivB64);\r\n  const iv  = new Uint8Array([...ivb].map(c=>c.charCodeAt(0)));\r\n  const ct  = new Uint8Array([...raw].map(c=>c.charCodeAt(0)));\r\n\r\n  const h   = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(pass));\r\n  const key = await crypto.subtle.importKey('raw', h, 'AES-GCM', false, ['decrypt']);\r\n  const pt  = await crypto.subtle.decrypt({ name:'AES-GCM', iv }, key, ct);\r\n\r\n  const { seed, net } = JSON.parse(new TextDecoder().decode(pt));\r\n  const { Wallet } = await sdk();\r\n   const nullProvider = { request: async () => { throw new Error('Network disabled in browser'); } };\r\n  \r\n  const w = new Wallet(seed, net, );\r\n  await w.initialize();\r\n  const acct = w.accountStore.getAccount('2.0');\r\n  if (!acct) throw new Error('DApp account (2.0) not found. Open Connect and (re)create/import your wallet.');\r\n  const addr = acct.getPrimaryAddressKey().address;\r\n  return { wallet: w, account: acct, address: addr, network: net };\r\n}\r\n\r\nexport async function placeBet({ passphrase, kiblAmount, tokenIdHex, feeNexa }:{\r\n  passphrase: string; kiblAmount: number; tokenIdHex: string; feeNexa: number;\r\n}){\r\n  const { wallet, account, address, network } = await loadWallet(passphrase);\r\n \r\n  const r = await fetch('/api/bet/build-unsigned', {\r\n    method:'POST',\r\n    headers:{ 'Content-Type':'application/json', 'CSRF-Token': (window as any).csrfToken || '' },\r\n    body: JSON.stringify({ fromAddress: address, kiblAmount, tokenIdHex, feeNexa })\r\n  });\r\n  const j = await r.json();\r\n  if (!j.ok) throw new Error(j.error || 'build_unsigned_failed');\r\n   const signed = await wallet.newTransaction(account, j.unsignedTx).sign().build();\r\n\r\n  // Relay via your server (no browser provider required)\r\n  const br = await fetch('/api/tx/broadcast', {\r\n   method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      // your server sets CSRF on GET /api/csrf and expects this header on POSTs under /api\r\n      'CSRF-Token': (window as any).csrfToken || ''\r\n    },\r\n    body: JSON.stringify({ hex: signed })\r\n  });\r\n  const bj = await br.json().catch(() => ({}));\r\n  if (!br.ok || !bj.ok) {\r\n    throw new Error(bj?.error || 'broadcast_failed');\r\n  }\r\n  return { txId: bj.txid, network, address, house: j.house };\r\n}\r\n"],"names":["Buffer","process"],"mappings":";AAIC,WAAmB,WAAYA;AAC/B,WAAmB,YAAYC;AAC/B,WAAmB,eAAe;AACnC,eAAe,MAAM;AACnB,SAAO,MAAM,OAAO,gCAAiB;AACvC;AACA,MAAM,MAAI,gBAAgB,KAAG;AAE7B,eAAe,WAAW,MAAa;AACrC,QAAM,SAAS,aAAa,QAAQ,GAAG,KAAK;AAC5C,MAAI,CAAC,OAAQ,OAAM,IAAI,MAAM,iCAAiC;AAC9D,QAAM,QAAS,aAAa,QAAQ,EAAE,KAAM;AAE5C,QAAM,MAAM,KAAK,MAAM;AACvB,QAAM,MAAM,KAAK,KAAK;AACtB,QAAM,KAAM,IAAI,WAAW,CAAC,GAAG,GAAG,EAAE,IAAI,CAAA,MAAG,EAAE,WAAW,CAAC,CAAC,CAAC;AAC3D,QAAM,KAAM,IAAI,WAAW,CAAC,GAAG,GAAG,EAAE,IAAI,CAAA,MAAG,EAAE,WAAW,CAAC,CAAC,CAAC;AAE3D,QAAM,IAAM,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI,YAAA,EAAc,OAAO,IAAI,CAAC;AAChF,QAAM,MAAM,MAAM,OAAO,OAAO,UAAU,OAAO,GAAG,WAAW,OAAO,CAAC,SAAS,CAAC;AACjF,QAAM,KAAM,MAAM,OAAO,OAAO,QAAQ,EAAE,MAAK,WAAW,MAAM,KAAK,EAAE;AAEvE,QAAM,EAAE,MAAM,IAAA,IAAQ,KAAK,MAAM,IAAI,YAAA,EAAc,OAAO,EAAE,CAAC;AAC7D,QAAM,EAAE,WAAW,MAAM,IAAA;AAGzB,QAAM,IAAI,IAAI,OAAO,MAAM,GAAK;AAChC,QAAM,EAAE,WAAA;AACR,QAAM,OAAO,EAAE,aAAa,WAAW,KAAK;AAC5C,MAAI,CAAC,KAAM,OAAM,IAAI,MAAM,+EAA+E;AAC1G,QAAM,OAAO,KAAK,qBAAA,EAAuB;AACzC,SAAO,EAAE,QAAQ,GAAG,SAAS,MAAM,SAAS,MAAM,SAAS,IAAA;AAC7D;AAEA,eAAsB,SAAS,EAAE,YAAY,YAAY,YAAY,WAEnE;AACA,QAAM,EAAE,QAAQ,SAAS,SAAS,YAAY,MAAM,WAAW,UAAU;AAEzE,QAAM,IAAI,MAAM,MAAM,2BAA2B;AAAA,IAC/C,QAAO;AAAA,IACP,SAAQ,EAAE,gBAAe,oBAAoB,cAAe,OAAe,aAAa,GAAA;AAAA,IACxF,MAAM,KAAK,UAAU,EAAE,aAAa,SAAS,YAAY,YAAY,QAAA,CAAS;AAAA,EAAA,CAC/E;AACD,QAAM,IAAI,MAAM,EAAE,KAAA;AAClB,MAAI,CAAC,EAAE,GAAI,OAAM,IAAI,MAAM,EAAE,SAAS,uBAAuB;AAC5D,QAAM,SAAS,MAAM,OAAO,eAAe,SAAS,EAAE,UAAU,EAAE,KAAA,EAAO,MAAA;AAG1E,QAAM,KAAK,MAAM,MAAM,qBAAqB;AAAA,IAC3C,QAAQ;AAAA,IACP,SAAS;AAAA,MACP,gBAAgB;AAAA;AAAA,MAEhB,cAAe,OAAe,aAAa;AAAA,IAAA;AAAA,IAE7C,MAAM,KAAK,UAAU,EAAE,KAAK,QAAQ;AAAA,EAAA,CACrC;AACD,QAAM,KAAK,MAAM,GAAG,KAAA,EAAO,MAAM,OAAO,CAAA,EAAG;AAC3C,MAAI,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI;AACpB,UAAM,IAAI,MAAM,IAAI,SAAS,kBAAkB;AAAA,EACjD;AACA,SAAO,EAAE,MAAM,GAAG,MAAM,SAAS,SAAS,OAAO,EAAE,MAAA;AACrD;"}